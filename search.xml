<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[CentOSÂÆâË£ÖMySQLÂπ∂ÂÆûÁé∞ËøúÁ®ãÈìæÊé•]]></title>
    <url>%2Farticle%2FCentOSMySQL.html</url>
    <content type="text"><![CDATA[NavicatÊòØ‰∏ÄÂ•óÊï∞ÊçÆÂ∫ìÁÆ°ÁêÜÂ∑•ÂÖ∑Ôºå‰∏ì‰∏∫ÁÆÄÂåñÊï∞ÊçÆÂ∫ìÁöÑÁÆ°ÁêÜÂèäÈôç‰ΩéÁ≥ªÁªüÁÆ°ÁêÜÊàêÊú¨ËÄåËÆæ„ÄÇNavicat ÊòØ‰ª•Áõ¥ËßâÂåñÁöÑÂõæÂΩ¢Áî®Êà∑ÁïåÈù¢ËÄåÂª∫ÁöÑÔºåÂèØ‰ª•ÂÆâÂÖ®ÂíåÁÆÄÂçïÂú∞ÂàõÂª∫„ÄÅÁªÑÁªá„ÄÅËÆøÈóÆÂπ∂ÂÖ±Áî®‰ø°ÊÅØ„ÄÇ Êú¨ÊñáÂ∞Ü‰ªãÁªçÂ¶Ç‰ΩïÂú®‰∫ëÊúçÂä°Âô®‰∏≠ÁöÑCentOS 7.xÁâàÊú¨‰∏ãÂÆâË£ÖMySQLÂèäÂü∫‰∫éNavicatÂÆûÁé∞Êï∞ÊçÆÂ∫ìÁöÑËøúÁ®ãÈìæÊé•„ÄÇ ÂÆâË£ÖMySQLËøõÂÖ•ÁõÆÂΩïÔºö 1cd /usr/local/src/ ÂÆâË£ÖMySQLÔºö 123456# ‰∏ãËΩΩÂÆâË£ÖÂåÖwget http://repo.mysql.com/mysql57-community-release-el7-8.noarch.rpm# ÂÆâË£ÖrpmÂåÖrpm -ivh mysql57-community-release-el7-8.noarch.rpm# ÂÆâË£Ö mysql-serveryum -y install mysql-server ÈáçÂêØMySQLÔºö 12service mysqld restart# Êàñ /etc/init.d/mysqld start Ëé∑ÂèñmysqlÂàõÂª∫ÁöÑÈöèÊú∫ÂØÜÁ†Å 123grep "password" /var/log/mysqld.log# ‰ºöÊòæÁ§∫Á±ª‰ººÂ¶Ç‰∏ãÔºö # [Note] A temporary password is generated for root@localhost: &lt;G142uD),u59 ÈÄöËøá‰∏äÈù¢ÂëΩ‰ª§ÂæóÂà∞ÁöÑÈöèÊú∫ÂØÜÁ†ÅÁôªÂΩïMySQLÔºö 1mysql -u root -p ÈáçÁΩÆÂØÜÁ†ÅÔºö 1234567# ËÆæÁΩÆÂØÜÁ†ÅÔºåÊ≥®ÊÑèÂØÜÁ†ÅÁöÑÊ†ºÂºè ‰∏ÄËà¨‰∏∫Â§ßÂÜô+Â∞èÂÜô+Êï∞Â≠ó+ÁâπÊÆäÁ¨¶Âè∑ÔºÅmysql&gt; alter user 'root'@'localhost' identified by 'Password123!';# ‰ΩøÁî®' flush privileges 'Âà∑Êñ∞ÊùÉÈôêmysql&gt; flush privileges;# ÈÄÄÂá∫MySQLmysql&gt; exit;# Ê≥®ÔºåSQLÂëΩ‰ª§ÊúÄÂêéÊúâÂàÜÂè∑";" ÂºÄÊú∫Ëá™ÂêØÔºàËá™ÈÄâÔºâÔºö 12345678# ËÆæÁΩÆÂºÄÊú∫Ëá™ÂêØsystemctl enable mysqld.service# ÂêØÂä®MySQLsystemctl start mysqld# ÂÅúÊ≠¢MySQLsystemctl stop mysqld# Êü•ÁúãMySQLÁä∂ÊÄÅsystemctl status mysqld ÂÆûÁé∞ËøúÁ®ãÈìæÊé•12345678910# ÁôªÂΩïMySQLÔºömysql -u root -p# ÈÄâÊã©MySQLÔºömysql&gt; use mysql;# Ëã•ÂÖÅËÆ∏ÊâÄÊúâÁî®Êà∑ËøúÁ®ãËÆøÈóÆ ‰øÆÊîπÁî®Êà∑ÂêçÂíåÂØÜÁ†Å‰∏∫‰Ω†Ëá™Â∑±ÁöÑmysql&gt; GRANT ALL PRIVILEGES ON *.* TO 'USERNAME'@'%' IDENTIFIED BY 'PASSWORD' WITH GRANT OPTION;# Ëã•ÂÖÅËÆ∏Âçï‰∏™ip ‰øÆÊîπÁî®Êà∑ÂêçÂíåÂØÜÁ†Å‰∏∫‰Ω†Ëá™Â∑±ÁöÑmysql&gt; GRANT ALL PRIVILEGES ON *.* TO 'USERNAME'@'1.2.3.4' IDENTIFIED BY 'PASSWORD' WITH GRANT OPTION;# ÊúÄÂêéÔºåÊòØ‰∏äËø∞‰øÆÊîπÁ´ãÂç≥ÁîüÊïàmysql&gt; FLUSH PRIVILEGES; Ê≥®Ôºå‰∏ÄÂÆöË¶ÅÂâçÂæÄÊúçÂä°ÂïÜÔºå‰øÆÊîπÊúçÂä°Âô®ÂÆâÂÖ®ÁªÑËßÑÂàôÔºåÊñ∞Â¢û3306Á´ØÂè£„ÄÇ ‰∫éNavicatÂÆ¢Êà∑Á´Ø‰∏≠Âª∫Á´ãËøúÁ®ãÈìæÊé•Ôºö ‰ª•‰∏ã‰∏∫Ubuntu‰∏≠ËÆæÁΩÆËøúÁ®ãÈìæÊé•ÁöÑÊïôÁ®ãÔºåÂêåÊó∂Ubuntu‰πüÂèØÈÄöËøá‰∏äËø∞ÊñπÊ≥ïÊù•ËÆæÁΩÆËøúÁ®ãÈìæÊé•„ÄÇ 12345678910111213141516171819202122232425# ÁôªÈôÜmysql$ mysql -u root -pmysql&gt; use mysql;mysql&gt; update user set host = '%' where user = 'root';mysql&gt; select host, user from user;+-----------+------------------+| host | user |+-----------+------------------+| % | root || localhost | debian-sys-maint || localhost | mysql.session || localhost | mysql.sys |+-----------+------------------+4 rows in set (0.00 sec)# ok ÈÄÄÂá∫MySQL ÈáçÂêØÊúçÂä°mysql&gt; quit;$ service mysqld restart# ÂèëÁé∞ÂÆ¢Êà∑Á´ØËøúÁ®ãËøòÊòØËøûÊé•‰∏ç‰∏ä ÁªßÁª≠‰øÆÊîπmysql.cnfÈÖçÁΩÆÊñá‰ª∂# ÈúÄË¶ÅrootÊùÉÈôêÔºåÈÖçÁΩÆÊñá‰ª∂ÊòØÂè™ËØªÁöÑ$ sudo vim /etc/mysql/mysql.conf.d/mysqld.cnf# ÂæÄ‰∏ãÁøªÔºåÊ≥®ÈáäÊéâËøô‰∏ÄË°å,‰øùÂ≠òÈÄÄÂá∫# bind-address = 127.0.0.1# ÈáçÂêØÊúçÂä°$ service mysqld restart# ‰ª•‰∏äÔºåÂ∞±ÂèØ‰ª•‰∫Ü]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>MySQL</tag>
        <tag>Centos</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÊµéÂçóÂÆû‰π†Èù¢ËØï‰πãËÆ∞]]></title>
    <url>%2Farticle%2FJinanInterview.html</url>
    <content type="text"><![CDATA[ËÄÅÊó©Â∞±ÊÉ≥ÂÜô‰∏ÄÁØáÊùÇÊñáÊù•ËÆ∞ÂΩï18Âπ¥7Êúà29-30Êó•Êù•ÊµéÂçóÂèÇÂä†„ÄåÂÆû‰π†Èù¢ËØï„ÄçÁöÑËøáÁ®ãÔºåÁßçÁßçÂéüÂõ†ÊãñÂà∞‰ªäÊó•„ÄÇ‰πüÂõ†Êò®Êó•‰ªéÂÆ∂ËøîÂõûÊµéÂçóÔºåÁõ∏‰ººÁöÑÂú∫ÊôØ‰ΩøÊàëÁäπËÆ∞Ëµ∑ÂΩìÂàùÊù•ÊµéÁöÑÊÉÖÂΩ¢ÔºåÊúõÈÄöËøáÊ≠§ÊñáÊù•ÁºÖÊÄÄÈÇ£Êó∂ÁöÑÁªèÂéÜÂèäÊÑüÂèóÔºåÁâπÊ≠§ËÆ∞ÂΩï„ÄÇ 7Êúà29Êó• ÊµéÂÆÅÔºåËÆ∞‰∏çÊ∏Ö‰ªÄ‰πàÂ§©Ê∞î ‰∫é29Êó•ÂÇçÊôö‰ªéÊµéÂÆÅÂá∫ÂèëÔºåÂùê‰∏ä‰∫ÜÁÅ´ËΩ¶ÂéªÊãâËê®ÊµéÂçóÔºåÂéªÁúãÈÇ£Á•ûÂ•áÁöÑÂ∏ÉËææÊãâÂçÉ‰ΩõÂ±±„ÄÇÊµéÂÆÅÁÅ´ËΩ¶Á´ôËøô‰∏™Á†¥Á´ôÊàëËøòÊòØË¶ÅÂêêÊßΩ‰∏Ä‰∏ãÔºå‰º∞ËÆ°Èô§‰∫ÜÈáåÈù¢ÁöÑÂ∫ßÊ§ÖÔºåÂÖ∂‰ªñ‰º∞ËÆ°‰∫å‰∏âÂçÅÂπ¥Ê≤°ÂèòËøáÔºåËÄå‰∏îÂÅúÈù†ÁöÑÂü∫Êú¨ÈÉΩÊòØÁªøÁöÆËΩ¶„ÄÇ ÊµéÂçóÔºåÂ§©ÈªëÈªë Á∫¶Êôö‰∏ä‰πùÁÇπÂçäÊäµËææÊµéÂçóÔºåÊñ∞È≤úÊÑüÂçÅË∂≥„ÄÇÁúºÊúõÁùÄÊù•Êù•ÂæÄÂæÄÁöÑ‰∫∫Áæ§ÂèäÂë®Âõ¥Âª∫Á≠ë‰∏äÊòé‰∫ÆÁöÑÁÅØÂÖâÔºåÊÑüËßâÂΩìÊó∂ÂèåÁúºÊòØÊîæÂÖâÁöÑÔºå‰∏ÄÊòØÂØπËøôÂ∫ßÂüéÂ∏ÇÁöÑÈôåÁîüÊÑüÁöÑÂÖ¥Â•ãÔºåÂè¶Â§ñÂ∞±ÊòØÂØπËá™Â∑±Êú™Êù•ÁöÑÊÜßÊÜ¨„ÄÇËôΩÁÑ∂Â∞èÊó∂ÂÄôÊù•Ëøá‰∏ÄÊ¨°Ôºå‰ΩÜÂíåÊ≤°Êù•Ê≤°‰ªÄ‰πàÂå∫Âà´„ÄÇ ‰ªéÊµéÂçóÁ´ôËµ∞‰∫Ü‰∏ÄÂ∞è‰ºöÔºå‰æøÊâæÂà∞Êó©Êó©‰∫éÊê∫Á®ã‰∏äÈ¢ÑËÆ¢ÁöÑÂÆæÈ¶ÜÔºåÁäπËÆ∞ËÄÅÊùøËøòÂêêÊßΩËØ¥ÊàëÊòØÂÖ•‰ΩèÊúÄÊôöÁöÑ‰ΩèÂÆ¢„ÄÇ‰∏∫‰∫ÜËÆ©Ëá™Â∑±ÊòéÂ§©‰øùÊåÅÂ•ΩÁöÑÁä∂ÊÄÅÔºå‰æøÂåÜÂåÜÊ¥óÊº±ÂÆåÂ∞±ÂÖ•Áù°‰∫Ü„ÄÇ 7Êúà30Êó• ÊµéÂçóÔºåÊó©‰∏äÊ∏ÖÁàΩ ‰∏ÄÂ§ßÊ∏ÖÊó©Â∞±Ëµ∑Â∫äÊ¥óÊº±ÂèäÊî∂ÊãæË°åÊùéÔºåÂú®Âú∞Âõæ‰∏äÊêú‰∫Ü‰∏ãÈôÑËøëÁöÑÊñáÂç∞Â∫ó‰æøÂéªÊâìÂç∞ÁÆÄÂéÜ„ÄÇË∑ØËøá‰øù‰∫≠‰π∞‰∫ÜÊúÄÂñúÊ¨¢ÂñùÁöÑÁ∫¢Êû£ÈÖ∏Â•∂ÂΩìÂÅöÊó©È§êÔºåÁõ∏ÂØπ‰∫éÂé¶Èó®ÁöÑÊúÄ‰Ωé8.9ÂÖÉ/Áì∂ÔºåÊµéÂçóËøôËæπÁöÑ6.4ÂÖÉ/Áì∂ÔºåÊàëËøòÊòØÊå∫ÈúáÊÉäÁöÑ„ÄÇ ‰∫éÈ´òÂæ∑Âú∞Âõæ‰∏äËßÑÂàí‰∫ÜÂéªÂæÄÂ±±‰∏úÁúÅ‰∫∫Ê∞ëÊ£ÄÂØüÈô¢ÁöÑË∑ØÁ∫øÔºå‰æøÂú®ÁªèÂõõÁ∫¨‰∏âÁ´ôÁ≠âK101Ë∑ØÂÖ¨‰∫§ËΩ¶„ÄÇÊ∏ÖÊô®ÔºåÈ™ëÁùÄÁîµÂä®ËΩ¶ÁöÑÂπ¥ËΩª‰∫∫ÔºåÂá∫Èó®Êï£Êó©Ê≠•ÁöÑÂ§ßÁà∑Â§ßÂ¶àÔºåÈ£ûÈ©∞ÁöÑÊ±ΩËΩ¶ÊÖ¢ÊÖ¢Â§ö‰∫ÜËµ∑Êù•„ÄÇË∑ØËæπËë±Ëë±ÈÉÅÈÉÅÁöÑÊ°¶Ê†ëÔºåÊûùÂ§¥ÂèΩÂèΩÂíãÂíãÊ≠åÂî±ÁöÑÈ∏üÂÑøÔºåÂπ≤ÂáÄÁöÑÊüèÊ≤πË∑ØÔºåËøô‰∏ÄÂàáÈÉΩ‰ΩøÁöÑÊàëÂøÉÊÉÖÊÑâÊÇ¶„ÄÇ ÂùêÁùÄÂÖ¨‰∫§ËΩ¶K101‰ªéÁªèÂõõÁ∫¨‰∏âÁ´ôÂà∞Áî∏Êü≥Â∫ÑÁ´ôÔºåÊ≠•Ë°å‰∏ÄÂ∞è‰ºö‰æøÂà∞‰∫ÜÁúÅÊ£ÄÂØüÈô¢Â§ßÈó®Âè£„ÄÇ ÂíåÈ¢ÜÂØºÊã®ÈÄö‰∫ÜÁîµËØùÔºå‰æøËøõ‰∫ÜÊ£ÄÂØüÈô¢3Â§ßÊ•º‰ºöËÆÆÂÆ§ËøõË°å‰∫ÜÈù¢ËØï„ÄÇÈù¢ËØïËøòÊòØ‰∏ªË¶Å‰ª•ÈóÆÊàëÁÆÄÂéÜ‰∏äÁöÑÈ°πÁõÆ‰∏∫‰∏ªÔºåÂõûÁ≠îÁöÑËøòÁÆóÈ°∫Âà©„ÄÇÂçä‰∏™Â∞èÊó∂ÂêéÁªìÊùü‰∫ÜÈù¢ËØïÔºå‰æø‰∏éÈ¢ÜÂØºÊè°ÊâãÂëäËæû„ÄÇ ‰ªéÊ£ÄÂØüÈô¢Âá∫Êù•ÂêéÊâçÂçÅÁÇπÂçäÔºåÂøÉÊÉ≥ÁùÄÂéªÂ§ßÊòéÊπñÁúã‰∏ÄÁúãÔºå‰æøÂùêK50Ë∑ØÂÖ¨‰∫§ËΩ¶‰ªé‰∫åÁéØ‰∏úË∑ØÂíåÂπ≥Ë∑ØÁ´ôÂà∞Â§©Âú∞ÂùõË°óÁ´ô„ÄÇÂΩìÊó∂ËäôËìâË°óËøòÂú®Ë£Ö‰øÆÔºå‰æøÁ©øË°óËµ∞Â∑∑ÊäµËææÁôæËä±Ê¥≤ÔºåÊ∞¥ÈáåÁöÑÈî¶È≤§ÂèØÊòØÁúüÂ§ßÔºå‰∏ÄÁúãËßÅ‰∫∫Â∞±Á´ãÈ©¨Ê∏∏ËøáÊù•ÂùêÁ≠âÊäïÂñÇ„ÄÇÊ≠§Êó∂Ê≠£ÂÄºÊöëÂÅáÔºåÊù•ËøôÊ∏∏Áé©ÁöÑÊ∏∏ÂÆ¢ÁªúÁªé‰∏çÁªùÔºå‰∏Ä‰∏™‰∏™Â∞èÊúãÂèã‰∫âÊä¢ÁöÑÁªôÈî¶È≤§ÂñÇÈ£üÔºå‰∏ç‰∫¶‰πê‰πé„ÄÇ Ë∂¥Âú®ÁôæËä±Ê¥≤ÁöÑÁü≥Ê†èÊùÜ‰∏äÊå∫‰πÖÔºå‰∏ÄÁõ¥Âú®ÁúãÂ∞èÂ≠©Â≠êÊäïÂñÇÈî¶È≤§ÔºåÁúãÁöÑÊàë‰πü‰∏ç‰∫¶‰πê‰πéü§¶‚Äç‚ôÇÔ∏èÔºåÂìàÂìàÂìàÔºÅ ËÄåÂêéÁ©øËøáÈ©¨Ë∑ØÔºå‰æøÂ∞±Âà∞‰∫ÜÂ§ßÊòéÊπñ„ÄÇ‰∏ÄÂºÄÂßãËøò‰ª•‰∏∫Ë¶ÅÈó®Á•®ÔºåËøõÂéª‰πãÂêéÂèëÁé∞Âè™ÊúâÊπñÂøÉÂ∞èÂ≤õÊî∂Êù•ÂõûËàπÁ•®„ÄÇ‰ªéÂçóÈó®ËøõÂéª‰∫ÜÔºå‰æø‰ªéÂè≥‰æßÂõ¥ÁùÄÂ§ßÊòéÊπñËæπËµ∞ËæπÁúãÔºå‰πüÊòØÂõ†‰∏∫ÂÅáÊúüÔºåÈáåÈù¢ÁöÑ‰∫∫ÂÑøÁîöÊòØÁÉ≠Èóπ„ÄÇÈÄî‰∏≠ÔºåËµ∞Á¥Ø‰∫Ü‰æøÂú®‰∏ÄÂ§ßÁü≥Â§¥‰∏äÂùê‰∏ã‰ºëÊÅØÔºåÈùôÈùôÁöÑËßÇÊúõÁùÄÁùÄÂ§ßÊòéÊπñÔºåÂ∞ΩÊÉÖÁöÑËÆ©ÂæÆÈ£éÂêπÊãÇËá™Â∑±ÁöÑËÑ∏È¢äÔºåÊ≤âÈÜâÂÖ∂‰∏≠Ôºå‰∏çËÉΩËá™Êãî„ÄÇ Ê≠•Ë°åËá≥Â§ßÊòéÊπñ‰∏úÈó®Êó∂ÔºåÊâãÊú∫‰ªÖÂâ©‰∏çÂà∞10%ÁöÑÁîµÈáèÔºåÊÄïÊâãÊú∫Ê≤°ÁîµÊó†Ê≥ïÂà∑‰∫åÁª¥Á†Å‰πòÂùêÂÖ¨‰∫§ËΩ¶ÔºåÈÅÇÁ¥ßÂøôËßÑÂàí‰∫ÜË∑ØÁ∫øÂâçÂæÄÁÅ´ËΩ¶Á´ôÔºåÂêéÊù•ÂèëÁé∞Ëá™Â∑±Á´üÂùêÂèç‰∫ÜÊñπÂêëü§¶‚Äç‚ôÇÔ∏è„ÄÇ‰∏çËøáÊµéÂçóÁöÑÂÖ¨‰∫§ÊúâËøô‰πà‰∏Ä‰∏™ÁâπÁÇπÔºåÂ∞±ÁÆó‰Ω†ÂùêÂèç‰∫ÜÔºå‰∏ÄÊ†∑ËÉΩÂà∞ËææÁõÆÁöÑÁ´ôÁÇπÔºåÂõ†‰∏∫ÊØèÊù°Á∫øÈÉΩÂü∫Êú¨‰∏ä‰∏çÂÅúÊ≠áÁªï‰∏™ÂúàÂºÄÂßãËøîÁ®ãÔºåÂè™ÊòØÊó∂Èó¥Èïø‰∏Ä‰∫õ„ÄÇ Âà∞ËææÁÅ´ËΩ¶Á´ôÂêéÔºå‰æøÂéªÊóÅËæπÁöÑËÇØÂæ∑Âü∫ÈáåÈù¢ËøõË°åÂÖÖÁîµÔºåÈ°∫‰æø‰π∞‰∫ÜÁÇπÂêÉÁöÑÂΩìÂÅöÊôöÈ•≠„ÄÇ‰ª§ÊàëÊÉäÂñúÁöÑÊòØÔºå‰∏ç‰∏Ä‰ºöÂ∞±Êé•Âà∞‰∫ÜÈ¢ÜÂØºÁöÑÁîµËØùÔºåÂëäÁü•ÊàëË¢´ÂΩïÁî®ÔºåÂπ∂ËØ¥Êòé‰∫ÜÁõ∏ÂÖ≥ÊÉÖÂÜµ„ÄÇÁªèËøáËá™Â∑±ÁöÑÊÄùËÄÉÂèäÂíåÂêåÂ≠¶ÁöÑËÅäÂ§©ÔºåÊàë‰æøÊääËØ•‰∫ãÁ≠îÂ∫î‰∫Ü‰∏ãÊù•„ÄÇËÄåÂêéÂú®ÁÅ´ËΩ¶Á´ôÂâçÈù¢ÁöÑÂπøÂú∫‰∏äËµ∞‰∫ÜËµ∞Ôºå‰æøËøõ‰∫ÜÂÄôËΩ¶ÂÆ§ËøõË°åÁ≠âÂÄô„ÄÇ ÊµéÂÆÅÔºåÂ§©ÈªëÈªë Âà∞ËææÊµéÂÆÅÁ´ôÊúàÊôö‰∏äÂÖ´ÁÇπÂ§öÔºåÊï¥‰∏™‰∫∫Êó†ÊØîËΩªÊùæ„ÄÇ Ê≠§Ê¨°Ë°åÁ®ãÁªàÁªì„ÄÇ ÈôÑÂõæ]]></content>
      <categories>
        <category>Notes</category>
      </categories>
      <tags>
        <tag>ÊµéÂçó</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Âú®Mac‰∏≠Êê≠Âª∫PyTorchÁΩëÁªúÊ°ÜÊû∂]]></title>
    <url>%2Farticle%2FMacWithPyTorch.html</url>
    <content type="text"><![CDATA[ËøëÊúü‰∏ÄÁõ¥Âú®Á†îÁ©∂PyTorchËøô‰∏™ÁΩëÁªúÔºåÂèëÁé∞ÁúüÁöÑÊòØÂæàÂ•ΩÁî®ÂïäÔºÅ È¶ñÂÖàÔºåÁΩëÁªúÊØîËæÉËΩªÈáèÔºõÊ≠§Â§ñÔºåÁΩëÁªúÊ°ÜÊû∂ÁöÑÁÅµÊ¥ªÊÄß‰πüÊØîËæÉÈ´ò„ÄÇÁõ∏ÊØî‰∫éTensorFlowÁúüÁöÑÊòØÂæàÂ•ΩÂÖ•ÊâãÔºåËÄå‰∏îÈÄªËæëÁªìÊûÑÂçÅÂàÜÊ∏ÖÊô∞ÔºÅ‰∏∫FacebookÁÇπ‰∏™ËµûÔºÅ Âú®macOS Majave 10.14.4ÁâàÊú¨‰∏ãËøõË°åPyTorchÁöÑÂÆâË£ÖÔºåËøáÁ®ã‰∏≠ÈÅáÂà∞‰∏Ä‰∫õÈóÆÈ¢òÔºåÂú®Ê≠§ÂØπÂÆâË£ÖÁöÑËøáÁ®ãÂèäËß£ÂÜ≥ÈóÆÈ¢òÁöÑÊñπÊ≥ïËøõË°å‰∏Ä‰∏™ËÆ∞ÂΩï„ÄÇ PipÂÆâË£ÖPyTorchÊ†πÊçÆPyTorchÂÆòÁΩë‰∏äÁöÑËØ¥Êòé Êåá‰ª§‰∏∫Ôºöpip3 install torch torchvision ÂÆâË£ÖÂÆåÊØïÂêéÂØπPyTorchËøõË°åÊµãËØïÔºåÊä•ÈîôÂ¶Ç‰∏ãÔºö 12345678&gt;&gt;&gt; import torchTraceback (most recent call last): File "&lt;stdin&gt;", line 1, in &lt;module&gt; File "/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/torch/__init__.py", line 79, in &lt;module&gt; from torch._C import *ImportError: dlopen(/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/torch/_C.cpython-36m-darwin.so, 9): Library not loaded: /usr/local/opt/libomp/lib/libomp.dylib Referenced from: /Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/torch/lib/libshm.dylib Reason: image not found ÊèêÁ§∫Ê≤°Êúâlibomp.dylibËøô‰∏™Â∫ì„ÄÇ 1brew install libomp ÁÑ∂ÂêéËøõ‰∏ÄÊ≠•ÊµãËØïÔºö 12345Python 3.6.5 (v3.6.5:f59c0932b4, Mar 28 2018, 05:52:31) [GCC 4.2.1 Compatible Apple LLVM 6.0 (clang-600.0.57)] on darwinType "help", "copyright", "credits" or "license" for more information.&gt;&gt;&gt; import torch&gt;&gt;&gt; ÈóÆÈ¢òËß£ÂÜ≥ÔºÅ ÂÆâË£ÖHomeBrew (ÂèØÈÄâ)Ëã•Mac‰∏≠Ê≤°ÊúâÂÆâË£ÖbrewÂ∑•ÂÖ∑ÔºåËØ∑ÂèÇËÄÉÊ≠§Â§ÑÁöÑÊïôÁ®ã„ÄÇ HomebrewÊòØÂü∫‰∫éRubyÁöÑÔºàMacÁîµËÑëÈªòËÆ§ÊòØÂÆâË£ÖÁöÑ1.8.7ÁâàÊú¨ÁöÑrubyÔºâÔºåÁõ¥Êé•Â∞Ü‰∏ãÈù¢ÁöÑ‰ª£Á†ÅÁ≤òË¥¥Âà∞Terminal‰∏≠ÊâßË°åÔºö 1/usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)" ËøáÁ®ã‰∏≠ÈúÄË¶ÅÂ§öÊ¨°ÂõûËΩ¶ËøõË°åÁ°ÆËÆ§„ÄÇ]]></content>
      <categories>
        <category>Deep Learning</category>
      </categories>
      <tags>
        <tag>PyTorch</tag>
        <tag>Mac</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[‰∫ëÊúçÂä°Âô®ÈÉ®ÁΩ≤Python WebÁéØÂ¢É(Nginx+Spawn-fcgi+web.py)]]></title>
    <url>%2Farticle%2FWebpyNginxFastCGI.html</url>
    <content type="text"><![CDATA[Web.pyÊòØ‰∏ÄÊ¨æËΩªÈáèÁ∫ßÁöÑpython webÂºÄÂèëÊ°ÜÊû∂ÔºåÂÖ∂ÁÆÄÂçï„ÄÅÈ´òÊïà„ÄÅÂ≠¶‰π†Èó®Êßõ‰ΩéÔºåÁâπÂà´ÈÄÇÂêà‰Ωú‰∏∫Python WebÂºÄÂèëÁöÑÂÖ•Èó®Ê°ÜÊû∂ÔºåÂπ∂ÂèØ‰ª•‰∏∫‰∫ëÊúçÂä°Âô®‰∏≠Áõ∏ÂÖ≥Â∫îÁî®Êèê‰æõ‰æøÊç∑Êé•Âè£„ÄÇ Êú¨ÊïôÁ®ãÂú®‰∫ëÊúçÂä°Âô®‰∏äÂÆâË£Ö‰∫ÜWSGI (Web Server Gateway Interface )Êé•Âè£ Âèä Http Sever (Â¶Ç Apache„ÄÅNginxÁ≠â)„ÄÇ Python WebÁéØÂ¢É -&gt; Nginx + Spawn-fcgi + web.py Ê≥®ÔºöÊú¨ÊïôÁ®ãÂú®Python3.6ÁâàÊú¨ËøêË°åÔºåÂÆâË£ÖÂèØÂèÇËÄÉÔºöPython3.6ÁöÑÂÆâË£ÖÂèäÁõ∏ÂÖ≥ËÆæÁΩÆ ÂÆâË£ÖWeb.pyUbuntu‰∏ãÂèØ‰ΩøÁî®‰∏ãËø∞ÂëΩ‰ª§Ôºö 1sudo pip install web.py ÈÄöÁî®ÂÆâË£ÖÊñπÊ≥ïÔºö ‰∏ãËΩΩ Âú∞ÂùÄ http://webpy.org/static/web.py-0.37.tar.gz Èöè‰æøËß£ÂéãÂà∞‰∏Ä‰∏™Ë∑ØÂæÑÔºàÂÆâË£ÖÂêéÂ∞±‰∏çÈúÄË¶Å‰∫ÜÔºâ ÂÆâË£ÖÂëΩ‰ª§ 1python setup.py install Êú¨Âú∞ÊµãËØïweb.pyÔºåÊñ∞Âª∫hello.pyÂÜÖÂÆπÂ¶Ç‰∏ãÔºö 123456789101112131415161718192021#!/usr/bin/env python# -*- coding: utf-8 -*-# ÂØºÂÖ•web.pyimport web# Ê∑ªÂä†URLÔºö‚Äú/‚Äù(Âç≥È¶ñÈ°µ)ÈÄöËøáindexÁ±ªËøõË°åÂ§ÑÁêÜurls = ( '/', 'index')# ÂàõÂª∫‰∏Ä‰∏™‰∏äÊñπÂ£∞ÊòéÁöÑURLÂàóË°®ÂØπÂ∫îÁöÑapplicationÔºåapplication‰ºöÂú®Ëøô‰∏™Êñá‰ª∂ÁöÑÂÖ®Â±ÄÂëΩÂêçÁ©∫Èó¥‰∏≠Êü•ÊâæÂØπÂ∫îÁ±ªapp = web.application(urls, globals())# ÂàõÂª∫usls‰∏≠Êò†Â∞ÑÁöÑÁ±ªclass index: def GET(self): return "Hello, world!" if __name__ == "__main__": app.run() # ÂêØÂä®Â∫îÁî® ËøêË°åËØ•‰ª£Á†ÅÔºö 1python hello.py ÊâìÂºÄÊµèËßàÂô®ÔºåËÆøÈóÆxx.xx.xx.xx:8080ÔºàÂÖ∂‰∏≠xx.xx.xx.xxÊõ¥Êç¢‰∏∫‰∫ëÊúçÂä°Âô®ÁöÑÂÖ¨ÁΩëIPÔºâÔºåÊòæÁ§∫ÁªìÊûú‰∏∫Ôºö Hello, World! Ê≥®ÔºöÈªòËÆ§Á´ØÂè£‰∏∫8080 ÂèØ‰ª•ÈÄöËøápython hello.py 8000Êù•ËÆæÂÆöÂêØÂä®Á´ØÂè£„ÄÇ ÂÆâË£ÖNginx Ubuntu‰∏ãÂèØ‰ΩøÁî®‰∏ãËø∞ÂëΩ‰ª§Ôºö 1sudo apt-get install nginx ÂÆâË£ÖÂ•ΩÁöÑÊñá‰ª∂‰ΩçÁΩÆÔºö /usr/sbin/nginxÔºö‰∏ªÁ®ãÂ∫è /etc/nginxÔºöÂ≠òÊîæÈÖçÁΩÆÊñá‰ª∂ /usr/share/nginxÔºöÂ≠òÊîæÈùôÊÄÅÊñá‰ª∂ /var/log/nginxÔºöÂ≠òÊîæÊó•Âøó ÂÖ∂ÂÆû‰ªé‰∏äÈù¢ÁöÑÊ†πÁõÆÂΩïÊñá‰ª∂Â§πÂèØ‰ª•Áü•ÈÅìÔºåLinuxÁ≥ªÁªüÁöÑÈÖçÁΩÆÊñá‰ª∂‰∏ÄËà¨ÊîæÂú®/etcÔºåÊó•Âøó‰∏ÄËà¨ÊîæÂú®/var/logÔºåËøêË°åÁöÑÁ®ãÂ∫è‰∏ÄËà¨ÊîæÂú®/usr/sbinÊàñËÄÖ/usr/bin„ÄÇ Â¶ÇÊûúË¶ÅÊõ¥Ê∏ÖÊ•öNginxÁöÑÂÖ∑‰ΩìÈÖçÁΩÆÈ°πÔºåÂèØ‰ª•ÊâìÂºÄ/etc/nginx/nginx.conf ÂØπ‰∫éÂÖ∂‰ªñLinuxÁ≥ªÁªüÂèØÂèÇÁÖßÂÆòÁΩëÈìæÊé•Ôºöhttps://www.nginx.com/resources/wiki/start/topics/tutorials/install/ ÂêØÂä®NginxÔºö 12# ÂêØÂä®Nginxsudo /etc/init.d/nginx start ÂÖ∂‰ªñÁõ∏ÂÖ≥ÂëΩ‰ª§Ôºö 1234# ÂÖ≥Èó≠Nginxsudo /etc/init.d/nginx stop# ÈáçÂêØNginxsudo /etc/init.d/nginx restart ËÆøÈóÆxx.xx.xx.xxÔºàÂÖ∂‰∏≠xx.xx.xx.xxÊõ¥Êç¢‰∏∫‰∫ëÊúçÂä°Âô®ÁöÑÂÖ¨ÁΩëIPÔºâÔºåÊòæÁ§∫ÁªìÊûú‰∏∫Ôºö Welcome to nginx! If you see this page, the nginx web server is successfully installed and working. Further configuration is required. For online documentation and support please refer to nginx.org.Commercial support is available at nginx.com. Thank you for using nginx. ÂÆâË£ÖSpawn-fcgi Âèä Flup ÂÆâË£ÖSpawn-fcgi 1sudo apt-get install spawn-fcgi ÂÆâË£ÖFlup 1pip install flup ÈÖçÁΩÆ nginx.conf ÊîØÊåÅ fastcgi 12# ÁºñËæëÈÖçÁΩÆÊñá‰ª∂vim /etc/nginx/nginx.conf Âú®httpÂÜÖÂ¶Ç‰∏ã‰πãÂ§ÑÔºö 1234http&#123; server&#123;&#125;&#125; Ê∑ªÂä†‰ª•‰∏ã‰ª£Á†ÅÔºö 1234567891011121314151617181920212223242526server&#123; listen 80; server_name xx.xx.xx.xx; # ÂÖ∂‰∏≠xx.xx.xx.xxÊõ¥Êç¢‰∏∫‰∫ëÊúçÂä°Âô®ÁöÑÂÖ¨ÁΩëIP index index.html index.php; location /hello &#123; root /opt/webpy-test; # Â∫îÁî®webpy-testÊâÄÂú®ÁöÑÁõÆÂΩï include fastcgi_params; # ÂåÖÂê´ÈªòËÆ§ÁöÑfastcgiÂèÇÊï∞ fastcgi_param SCRIPT_FILENAME $fastcgi_script_name; fastcgi_param PATH_INFO $fastcgi_script_name; fastcgi_pass 127.0.0.1:9001; # ÊääËØ∑Ê±ÇÈÄöËøáfastcgi‰º†ÈÄÅÁªôÊú¨Êú∫ÁöÑ9001Á´ØÂè£ &#125; location /static/ &#123; # ÈÖçÁΩÆÈùôÊÄÅÊñá‰ª∂ÁöÑËÆøÈóÆ if (-f $request_filename) &#123; # Â¶ÇÊûúËØ∑Ê±ÇÊñá‰ª∂ÂêçÊòØ‰∏Ä‰∏™Êñá‰ª∂ rewrite ^/static/(.*)$ /static/$1 break; # Áõ¥Êé•Ë∑≥ËΩ¨Âà∞ÂØπÂ∫îÁöÑËµÑÊ∫êÔºå‰∏≠Êñ≠fastcgiÁöÑ‰º†Ëæì &#125; &#125; #location /helloword &#123; # root /opt/webpy-test2; # Â∫îÁî®webpy-test2ÊâÄÂú®ÁöÑÁõÆÂΩï # include fastcgi_params; # ÂåÖÂê´ÈªòËÆ§ÁöÑfastcgiÂèÇÊï∞ # fastcgi_param SCRIPT_FILENAME $fastcgi_script_name; # fastcgi_param PATH_INFO $fastcgi_script_name; # fastcgi_pass 127.0.0.1:9002; # ÊääËØ∑Ê±ÇÈÄöËøáfastcgi‰º†ÈÄÅÁªôÊú¨Êú∫ÁöÑ9002Á´ØÂè£ #&#125;&#125; ÁâπÂà´Ê≥®ÊÑèÔºö„ÄêÊ≠§Â§ÑÂ∞§‰∏∫ÈáçË¶ÅÔºå‰∏ÄÂºÄÂßãÂßãÁªàÊó†Ê≥ïÊ≠£Â∏∏ÊòæÁ§∫ÔºåÊàëËä±Ë¥π‰∫Ü‰∏Ä‰∏ãÂçàÁöÑÊó∂Èó¥ÊâçËß£ÂÜ≥Áõ∏ÂÖ≥ÈóÆÈ¢ò„Äë Âú®‰∫ëÊúçÂä°Âô®ÊéßÂà∂ÁïåÈù¢Ê∑ªÂä†80Á´ØÂè£Ôºõ Â∞Ü80Á´ØÂè£Ê∑ªÂä†Ëá≥Èò≤ÁÅ´Â¢ôÔºösudo ufw allow 80Ôºõ Âú®‰∫ëÊúçÂä°Âô®ÊéßÂà∂ÁïåÈù¢Ê∑ªÂä†9001Á´ØÂè£ÔºåÂπ∂Â∞ÜÂÖ∂Ê∑ªÂä†Ëá≥Èò≤ÁÅ´Â¢ôÔºõ ÂÖ∂‰ªñÂêå‰∏ä‚Ä¶‚Ä¶ ‰øÆÊîπÊ∫ê‰ª£Á†ÅÂ¶ÇÊûúÊÉ≥Ë¶Å‰ΩøÁî®NginxÔºåÂàôÂøÖÈ°ªÊ∑ªÂä†‰ª•‰∏ã‰ª£Á†ÅÔºö web.wsgi.runwsgi = lambda func, addr=None: web.wsgi.runfcgi(func, addr) Êñ∞Âª∫Á®ãÂ∫èindex.py‰∏∫Ôºö 123456789101112131415#!/usr/bin/env python# -*- coding: utf-8 -*-import weburls = ("/.*", "hello")app = web.application(urls, globals())class hello: def GET(self): return 'Hello, world!'if __name__ == "__main__": web.wsgi.runwsgi = lambda func, addr=None: web.wsgi.runfcgi(func, addr) # Neew added app.run() ËÆæÁΩÆ‰ª£Á†ÅÂèØÊâßË°åÊùÉÈôêÔºö 1chmod +x index.py ÂêØÂä®Â∫îÁî® ÂêØÂä®‰∏Ä‰∏™Spawn-fcgiËøõÁ®ã: 123# ÂêØÂä®ËøõÁ®ãspawn-fcgi -d /path/to/www -f /path/to/www/index.py -a 127.0.0.1 -p 9001# ÊàëÁöÑÊòØÔºöspawn-fcgi -d /opt/webpy-test -f /opt/webpy-test/index.py -a 127.0.0.1 -p 9001 123# ÂÖ≥Èó≠ËøõÁ®ãkill `pgrep -f "python /path/to/www/index.py"`# ÊàëÁöÑÊòØÔºökill `pgrep -f "python /opt/webpy-test/index.py"` ÂÖ∂‰∏≠/path/to/www‰∏∫Á®ãÂ∫èÊâÄÂú®Ë∑ØÂæÑ„ÄÇ -f ÊåáÂÆöË∞ÉÁî®FastCGIÁöÑwebÊñá‰ª∂ÔºåwebÁ®ãÂ∫èÁöÑÂÖ•Âè£Êñá‰ª∂ÔºåÂç≥code.pyÊñá‰ª∂-d ÊåáÂÆöwebÁ®ãÂ∫èÁöÑ‰∏ªÁõÆÂΩïÔºåÂç≥code.pyÊâÄÂú®ÁöÑÁõÆÂΩï-a ÁªëÂÆöÂà∞Âú∞ÂùÄ addr-p ÁªëÂÆöÂà∞Á´ØÂè£ port-F ÊåáÂÆö‰∫ßÁîüÁöÑ FastCGI ÁöÑËøõÁ®ãÊï∞-P ÊåáÂÆö‰∫ßÁîüÁöÑËøõÁ®ãÁöÑ PID Êñá‰ª∂Ë∑ØÂæÑ-u Âíå -g FastCGI ‰ΩøÁî®‰ªÄ‰πàË∫´‰ªΩËøêË°å Ê≥®ÔºöÂèØ‰ª•ÈöèÊÑèÂ°´ÂÜôÂú∞ÂùÄÂíåÁ´ØÂè£‰ø°ÊÅØÔºå‰ΩÜÊòØ‰∏ÄÂÆöÈúÄË¶ÅÂíåNginxÈÖçÁΩÆÊñá‰ª∂Áõ∏ÂåπÈÖç„ÄÇ ÂêØÂä®Nginx 12# ÂêØÂä®Nginxsudo /etc/init.d/nginx start Êü•Áúã9001Á´ØÂè£ÊòØÂê¶Â≠òÂú® 1netstat -ano |grep 9001 Ëã•Â≠òÂú®ÂàôÊòæÁ§∫Ôºö tcp 0 0 127.0.0.1:9001 0.0.0.0:* LISTEN off (0.00/0/0) ËÆøÈóÆxx.xx.xx.xx/helloÔºàÂÖ∂‰∏≠xx.xx.xx.xx‰∫ëÊúçÂä°Âô®ÁöÑÂÖ¨ÁΩëIPÔºâÔºåÊòæÁ§∫ÁªìÊûú‰∏∫Ôºö Hello, world! Debug ËøêË°åpython hello.py yourip:8080 Êä•Èîôsocket.error: No socket could be created ËØ•ÊÉÖÂÜµÂæÄÂæÄÊòØÂõ†‰∏∫Á´ØÂè£Ë¢´Âç†Áî®ÔºåÊòØÂõ†‰∏∫Êàë‰πãÂâçÈÖçÁΩÆJava WebÁéØÂ¢ÉÂç†Áî®‰∫Ü8080Á´ØÂè£„ÄÇ Ëß£ÂÜ≥ÊñπÊ≥ïÔºö 1ÔºâÂÖ≥Èó≠Áõ∏Â∫îÁ®ãÂ∫èÔºåÈáäÊîæ8080Á´ØÂè£ 2ÔºâÂú®‰∫ëÊúçÂä°Âô®ÂºÄÊîæÊñ∞ÁöÑÁ´ØÂè£Ôºå‰æõweb.py‰ΩøÁî® ËøêË°åspawn-fcgi -d /opt/webpy-test -f /opt/webpy-test/index.py -a 127.0.0.1 -p 9001 ÊèêÁ§∫spawn-fcgi: child exited with: 126 Âõ†‰∏∫index.pyËÑöÊú¨Áº∫Â∞ëÊâßË°åÊùÉÈôê Ëß£ÂÜ≥ÂäûÊ≥ïÔºö ÈÄöËøáchmod +x index.pyÊ∑ªÂä†ÊâßË°åÊùÉÈôê„ÄÇ ËøêË°åspawn-fcgi -d /opt/webpy-test -f /opt/webpy-test/index.py -a 127.0.0.1 -p 9001 ÊèêÁ§∫spawn-fcgi: child exited with: 2 Ëß£ÂÜ≥ÂäûÊ≥ïÔºö Âú®index.pyÁöÑÂºÄÂ§¥‰∏≠Ê∑ªÂä†#!/usr/bin/env python ËøêË°åspawn-fcgi -d /opt/webpy-test -f /opt/webpy-test/index.py -a 127.0.0.1 -p 9001 ÊèêÁ§∫spawn-fcgi: child exited with: 1 Â∫îËØ•ÊòØindex.pyËÑöÊú¨ÊúâÈîôËØØ Ëß£ÂÜ≥ÂäûÊ≥ïÔºö ÂÖàÂØπËØ•ËÑöÊú¨ËøõË°ådebug„ÄÇ ÂêØÂä®NginxÊó∂ 123# Êä•Èîô[....] Restarting nginx (via systemctl): nginx.serviceJob for nginx.service failed because the control process exited with error code. See "systemctl status nginx.service" and "journalctl -xe" for details. failed! ÈÄöËøáÊâßË°åsystemctl status nginx.serviceÊèêÁ§∫Ôºö 12Apr 01 19:12:38 iZuf636nqxmkad2s6umlm3Z nginx[15377]: nginx: [emerg] "server" directive is not allowed here in /etc/nginx/nginx.confApr 01 19:12:38 iZuf636nqxmkad2s6umlm3Z nginx[15377]: nginx: configuration file /etc/nginx/nginx.conf test failed Ëß£ÂÜ≥ÊñπÊ≥ïÔºö ‰∏ÄËà¨ÊòØ‰øÆÊîπnginx.confÊó∂Âá∫‰∫ÜÈóÆÈ¢òÔºåËØ∑‰∏•Ê†ºÂèÇÁÖß ‰∏äÊñá‰∏≠ÁöÑ3.3 „ÄÇ ËøêË°åÊó∂Êä•ÈîôImportError: No module named _dummy_thread Âü∫Êú¨Á°ÆÂÆöÊòØpython2.7‰∏≠Ê≤°Êúâ_threadÊ®°ÂùóÁöÑÂéüÂõ†ÔºåÊé®ËçêÂÆâË£ÖPython3.6„ÄÇ pip3 ÂÆâË£Öweb.pyÊä•Èîô ÈÄöËøá‰∏ãËø∞ÂëΩ‰ª§ËøõË°åÂÆâË£ÖÔºö 1pip3 install web.py==0.40.dev0 ÂèÇËÄÉÊñáÁåÆ Webpy + Nginx with FastCGIÊê≠Âª∫Web.py nginx[+spawn-fcgi]+flup+webpyÊúçÂä°Êê≠Âª∫]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Nginx</tag>
        <tag>Spawn-fcgi</tag>
        <tag>web.py</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python3.6ÁöÑÂÆâË£ÖÂèäÁõ∏ÂÖ≥ËÆæÁΩÆ]]></title>
    <url>%2Farticle%2FUbuntuUpdatePython.html</url>
    <content type="text"><![CDATA[ÂΩìÊê≠Âª∫Python WebÁéØÂ¢ÉÂèäÂºÄÂèëÊ∑±Â∫¶Â≠¶‰π†Áõ∏ÂÖ≥Â∫îÁî®Êó∂ÔºåPython2.7Â∑≤ÁªèÊòæÂæóÂçÅÂàÜÊó†ÂäõÔºåÂπ∂‰∏éÂæàÂ§öÊúÄÊñ∞ÁöÑÁªÑ‰ª∂‰∏çÁõ∏ÂÖºÂÆπÔºåÂπ∂‰∏îÂÆòÊñπÂ∑≤ÂèëÂ∏ÉÂÖ¨ÂëäË°®Á§∫2020Âπ¥Âêé‰æø‰∏çÂÜçÁª¥Êä§Python2Á≥ªÂàóÁâàÊú¨ÔºåÊâÄ‰ª•ÂØπPython3ÁöÑÈúÄÊ±ÇËø´Âú®ÁúâÁù´„ÄÇ Êú¨ÊñáÈíàÂØπUbuntuÁ≥ªÁªüÔºåÊñ∞Ë£ÖPython3.6ÔºåÂπ∂ËÆæÁΩÆÂÖ∂‰∏∫Á≥ªÁªüÈªòËÆ§Python„ÄÇ ÂÆâË£Ö Python3.6123456# Êñ∞Â¢ûPython3.6 ppaÊ∫êsudo apt-get install software-properties-commonsudo add-apt-repository ppa:jonathonf/python-3.6 sudo apt-get update # ÂÆâË£ÖPython3.6sudo apt-get install python3.6 1234567# ËÆæÁΩÆPython3.6‰∏∫Á≥ªÁªüÈªòËÆ§cd /usr/binrm python ln -s python3.6m python # Ê£ÄÊü•PythonÁâàÊú¨python -V# ÊòæÁ§∫‰∏∫ÔºöPython 3.6.7 (default, Oct 25 2018, 09:16:13) ÂÆâË£Ö„ÄÅÂçáÁ∫ßpip1234567# ÂÆâË£Öpipapt-get install python3-pip python3-dev build-essential# ÂçáÁ∫ßpippython -m pip install --upgrade pip# Ê£ÄÊü•pipÁâàÊú¨pip -V# ÊòæÁ§∫‰∏∫Ôºöpip 19.0.3 from /usr/local/lib/python3.6/dist-packages/pip (python 3.6)]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Ubuntu16.04ÈÖçÁΩÆJava WebÁéØÂ¢É]]></title>
    <url>%2Farticle%2FJavaTomcatMysql.html</url>
    <content type="text"><![CDATA[Ââç‰∫õÊó•Â≠êÂ∏ÆÂ∏àÂ¶πÁöÑÊúçÂä°Âô®ÈÖçÁΩÆJava WebÁéØÂ¢ÉÔºåËá™Â∑±Êó†ÂΩ¢‰∏≠‰πüÂ≠¶Âà∞‰∫ÜÂÜôÊñ∞Áü•ËØÜÔºåÊìÖËá™ÊÄªÁªìËÆ∞ÂΩï‰∏ãÊù•ÔºåÊñπ‰æø‰ª•ÂêéËá™Â∑±ÂèäÂ∏àÂºüÂ∏àÂ¶πÊü•ÈòÖÂèÇËÄÉ„ÄÇ Java WebÁéØÂ¢É = JavaJDK + Tomcat + MySQL ‰∏ãËΩΩ JavaJDK Âèä TomcatËøõÂÖ•/optÁõÆÂΩïÔºö 1cd /opt ‰∏ãËΩΩ JavaJDK Áõ¥Êé•Áî®wgetÂëΩ‰ª§‰∏ãËΩΩÂà∞‰∫ëÊúçÂä°Âô®‰∏äÔºåËß£ÂéãÁöÑÊó∂ÂÄô‰ºöÊä•ÈîôÂ¶Ç‰∏ãÔºàÂõ†‰∏∫‰∏çÊòØ‰∫åËøõÂà∂‰∏ãËΩΩÔºâÔºö 123gzip: stdin: not in gzip formattar: Child returned status 1tar: Error is not recoverable: exiting now Âª∫ËÆÆ‰∏ãËΩΩÂà∞Êú¨Âú∞ÔºåÂÜç‰º†Âà∞‰∫ëÊúçÂä°Âô®‰∏ä„ÄÇ ËøõÂÖ•oracleÂÆòÊñπ‰∏ãËΩΩÂú∞ÂùÄÔºåÊâæÂà∞ÊâÄÈúÄÁöÑ JavaJDK ÁâàÊú¨ÔºåÈÄâ‰∏≠Accept License AgreementÂçïÈÄâÊ°ÜÔºåÁÇπÂáªËøõË°å‰∏ãËΩΩ„ÄÇ ÈôÑÂä†ËØ¥ÊòéÔºöÂú®oracleÂÆòÁΩë‰∏ãËΩΩÁöÑÊó∂ÂÄôÔºåÈúÄË¶ÅÂÖ≥Ê≥®‰∏Ä‰∏ã‰Ω†ÁöÑÊú∫Âô®Á±ªÂûãÔºå64‰ΩçÊú∫ÂûãÁöÑÈÄâX64Ôºå32‰ΩçÊú∫ÂûãÁöÑÈÄâX86„ÄÇ ‰∏ãËΩΩ Tomcat Áî®wgetÂëΩ‰ª§‰∏ãËΩΩÂà∞‰∫ëÊúçÂä°Âô®‰∏ä: 1wget https://mirrors.tuna.tsinghua.edu.cn/apache/tomcat/tomcat-9/v9.0.17/bin/apache-tomcat-9.0.17.tar.gz ‰πüÂèØ‰ª•ËøõÂÖ•apacheÂÆòÁΩëÔºåÂ∑¶ËæπDownloadÊ†è‰∏ãËÆ©‰Ω†ÈÄâÊã©‰Ω†ÈúÄË¶ÅÁöÑTomcatÁâàÊú¨ÔºåÊâæÂà∞tar.gzÂåÖÔºåÂè≥ÈîÆÂ§çÂà∂ÈìæÊé•Âú∞ÂùÄÔºå‰ΩøÁî®wget‰∏ãËΩΩÊúÄÊñ∞ÁâàÊú¨„ÄÇ ËøõË°åËß£Âéã 12345# Ëß£Âéã JavaJDK# ÈúÄË¶ÅÂ∞Ütar -zxvf ÂêéÁöÑ ‚Äòapache-tomcat-9.0.7.tar.gz‚Äô ‰øÆÊîπ‰∏∫‰Ω†‰∏ãËΩΩÁöÑÂéãÁº©ÂåÖÁöÑÂêçÁß∞tar -xzvf apache-tomcat-9.0.7.tar.gz# ‰∏∫Êñπ‰æøÂêéÁª≠Êìç‰Ωú Â∞ÜËß£ÂéãÂêéÁöÑ ‚Äòapache-tomcat-9.0.17‚Äô‰øÆÊîπ‰∏∫‚Äòtomcat‚Äômv apache-tomcat-9.0.17 tomcat 12345# Ëß£Âéã Tomcat# ÈúÄË¶ÅÂ∞Ütar -zxvf ÂêéÁöÑ ‚Äòjdk-8u201-linux-x64.tar.gz‚Äô ‰øÆÊîπ‰∏∫‰Ω†‰∏ãËΩΩÁöÑÂéãÁº©ÂåÖÁöÑÂêçÁß∞tar -xzvf jdk-8u201-linux-x64.tar.gz# ‰∏∫Êñπ‰æøÂêéÁª≠Êìç‰Ωú Â∞ÜËß£ÂéãÂêéÁöÑ ‚Äòjdk-8u201-linux-x64‚Äô‰øÆÊîπ‰∏∫‚Äòjdk‚Äômv jdk-8u201-linux-x64 jdk ‰øÆÊîπJavaJDKÈÖçÁΩÆÊñá‰ª∂ ÈÖçÁΩÆ JavaJDK Áî®viÊâìÂºÄÈÖçÁΩÆÊñá‰ª∂ 1sudo vim /etc/profile Âú®/etc/profile Êú´Â∞æÈÉ®Ê∑ªÂä†‰ª•‰∏ãÈÖçÁΩÆÔºö 1234567#set java EnvironmentJAVA_HOME=/opt/jdkPATH=$JAVA_HOME/bin:$PATHLASSPATH=:.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jarexport JAVA_HOMEexport PATHexport CLASSPATH ÁîüÊïàÈÖçÁΩÆÔºö 1source /etc/profile ÊµãËØïÈÖçÁΩÆÊòØÂê¶ÁîüÊïàÔºö 1echo $JAVA_HOME ÊµãËØïJavaÊòØÂê¶ÂÆâË£ÖÊàêÂäü: 1java -version ÂèØ‰ª•ÁúãÂà∞JavaÁöÑÁâàÊú¨ÔºåËØ¥Êòé Java ÂÆâË£ÖÊàêÂäü‰∫Ü„ÄÇ ‰øÆÊîπTomcatÈÖçÁΩÆÊñá‰ª∂ËøõÂÖ•TomcatÁöÑbinÁõÆÂΩï 1cd /opt/tomcat/bin ‰øÆÊîπstart.shÊñá‰ª∂ 1sudo vim startup.sh Ë∑≥Âà∞ÊúÄÂêéÔºåÂú® exec &quot;$PRGDIR&quot;/&quot;$EXECUTABLE&quot; start &quot;$@&quot; Ëøô‰∏ÄË°åÁöÑ‰∏äÈù¢Ê∑ªÂä†Ôºö 12345678#set java environmentexport JAVA_HOME=/opt/jdkexport JRE_HOME=$&#123;JAVA_HOME&#125;/jreexport CLASSPATH=.:%&#123;JAVA_HOME&#125;/lib:%&#123;JRE_HOME&#125;/libexport PATH=$&#123;JAVA_HOME&#125;/bin:$PATH #tomcatexport TOMCAT_HOME=/opt/tomcat ‰øÆÊîπshutdown.shÊñá‰ª∂ 1sudo vim shutdown.sh Ë∑≥Âà∞ÊúÄÂêéÔºåÂú® exec &quot;$PRGDIR&quot;/&quot;$EXECUTABLE&quot; stop &quot;$@&quot; Ëøô‰∏ÄË°åÁöÑ‰∏äÈù¢Ê∑ªÂä†Ôºö 12345678#set java environmentexport JAVA_HOME=/opt/jdkexport JRE_HOME=$&#123;JAVA_HOME&#125;/jreexport CLASSPATH=.:%&#123;JAVA_HOME&#125;/lib:%&#123;JRE_HOME&#125;/libexport PATH=$&#123;JAVA_HOME&#125;/bin:$PATH #tomcatexport TOMCAT_HOME=/opt/tomcat ÂêØÂä®Tomcat 12# ËøõÂÖ•Âà∞ /opt/tomcat/bin ÁõÆÂΩïsudo ./startup.sh ÊòæÁ§∫Â¶Ç‰∏ãÔºö Â∞Ü8080Á´ØÂè£Ê∑ªÂä†Ëá≥Èò≤ÁÅ´Â¢ô 1sudo ufw allow 8080 ÊµãËØïÊòØÂê¶ÊàêÂäü Êü•ÁúãÁ´ØÂè£Âè∑/ËøõÁ®ãÔºö 1sudo netstat -naptl Êü•ÁúãËøõÁ®ãÔºö 1ps -ef |grep 8080/tcp Âú®ÊµèËßàÂô®ËÆøÈóÆ8080Á´ØÂè£Ôºö ÂÖ≥Èó≠Tomcat 12# ËøõÂÖ•Âà∞ /opt/tomcat/bin ÁõÆÂΩïsudo ./shutdown.sh ÂÆâË£Ö MySQL ÂÆâË£ÖMySQLÊúçÂä°Âô®ÂèäÂÆ¢Êà∑Á´Ø 123sudo apt-get install mysql-serversudo apt-get install mysql-clientsudo apt-get install libmysqlclient-dev Ê≥®ÊÑèÔºöÂÆâË£ÖËøáÁ®ã‰∏≠ÈúÄË¶ÅËÆæÁΩÆÂØÜÁ†Å Ê£ÄÊü•ÊòØÂê¶ÂÆâË£ÖÊàêÂäü 1sudo netstat -tap | grep mysql Â¶ÇÊûúÁúãÂà∞ÊúâMySQLÁöÑsocketÂ§Ñ‰∫élistenÁä∂ÊÄÅÂàôË°®Á§∫ÂÆâË£ÖÊàêÂäü„ÄÇ ÂàõÂª∫ËøúÁ®ãÁî®Êà∑ 1mysql -u root -p -u Ë°®Á§∫ÈÄâÊã©ÁôªÈôÜÁöÑÁî®Êà∑ÂêçÔºå -p Ë°®Á§∫ÁôªÈôÜÁöÑÁî®Êà∑ÂØÜÁ†ÅÔºå‰∏äÈù¢ÂëΩ‰ª§ËæìÂÖ•‰πãÂêé‰ºöÊèêÁ§∫ËæìÂÖ•ÂØÜÁ†ÅÔºåÊ≠§Êó∂ËæìÂÖ•ÂØÜÁ†ÅÂ∞±ÂèØ‰ª•ÁôªÂΩïÂà∞mysql„ÄÇ Êü•ÁúãÂΩìÂâçÁöÑÊï∞ÊçÆÂ∫ìÔºö 1show databases; ‰ΩøÁî®Êï∞ÊçÆÂ∫ìÔºö 1use mysql; Êü•ÁúãË°®Ôºö 1show tables;]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
        <tag>Java</tag>
        <tag>Tomcat</tag>
        <tag>JavaJDK</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python--ÊâπÈáèÊõ¥ÊîπMarkdownÊñá‰ª∂‰∏≠ÁöÑ‰∏ÉÁâõ‰∫ëÂõæÂ∫äÈìæÊé•]]></title>
    <url>%2Farticle%2FImageHostingChange.html</url>
    <content type="text"><![CDATA[ËÉåÊôØ‰ªãÁªçËøô‰∏§Â§©ÈòøÈáå‰∫ëÂ∞ÜÊàëÁöÑÂüüÂêçÔºàwangcong.infoÔºâÁöÑÂ§áÊ°àÂèñÊ∂àÊé•ÂÖ•Âπ∂ÂêëÂ∑•‰ø°ÈÉ®Êèê‰∫§‰∫ÜÊ≥®ÈîÄÁî≥ËØ∑„ÄÇ‰∫éÊòØ‰πéÔºåÊàëÂÖàÂêéÊî∂Âà∞‰∫ÜÂá†‰∏™Áü≠‰ø°ÂíåÈÇÆ‰ª∂ÈÄöÁü•ÔºåË¥¥Âá∫‰∏ÄÊù°Â¶Ç‰∏ãÔºö ‰ªäÊó©ÔºåÊú¨Á´ôÁÇπ‰∏≠ÂõæÁâá‰æøÂ∑≤ÁªèÊó†Ê≥ïÊ≠£Â∏∏ÊòæÁ§∫ÔºåÊàëËµ∂Á¥ßÁî®Êó©Â∑≤Â§áÊ°àÁöÑÂè¶Â§ñ‰∏ÄÂüüÂêçÔºàbabibobi.comÔºâÂú®‰∏ÉÁâõ‰∫ë‰∏ä‰∫à‰ª•‰∫ÜÊõøÊç¢ÔºåÊöÇÊó∂Ëß£ÂÜ≥ÂõæÁâá‰∏çËÉΩËÆøÈóÆÁöÑÈóÆÈ¢ò„ÄÇ Âõ†‰∏∫MarkdownÊñá‰ª∂‰∏≠ÊúâÂæàÂ§öÂõæÁâáÈìæÊé•Ôºå‰∏Ä‰∏ÄÊõ¥Êç¢ÁöÑËØùÔºåÂ∑•‰ΩúÈáèÁï•Â§ßÔºåÈÄöËøáÊü•ËµÑÊñôÔºåÂÜô‰∫Ü‰∏Ä‰∏™PythonËÑöÊú¨ÔºåËøõËÄåÂèØ‰ª•ÂÆûÁé∞‰∏ÄÈîÆÊâπÈáèÊõ¥ÊîπMarkdownÊñá‰ª∂‰∏≠ÁöÑ‰∏ÉÁâõ‰∫ëÂõæÂ∫äÈìæÊé•ÁöÑÂäüËÉΩ„ÄÇÂÖ∑‰ΩìÂ¶Ç‰∏ãÔºö Êõ¥ÊîπÂêéÁöÑmdÊñáÊ°£Ôºö ÂÆûÁé∞‰ª£Á†Å12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455# usr/bin/env python# -*- coding:utf-8 -*-import re, os, time, argparseimport sys, iofrom itertools import chain# Markdown‰∏≠ÂõæÁâáËØ≠Ê≥ï ![](url) ÊàñËÄÖ &lt;img src='' /&gt;global img_pattenimg_patten = r'!\[.*?\]\((.*?)\)|&lt;img.*?src=[\'\"](.*?)[\'\"].*?&gt;'def replace_md_url(md_file): """ ÊâπÈáèÊõ¥ÊîπMarkdownÊñá‰ª∂‰∏≠ÁöÑ‰∏ÉÁâõ‰∫ëÂõæÂ∫äÈìæÊé• :param md_file: MarkdownÊñá‰ª∂ :return: """ if os.path.splitext(md_file)[1] != '.md': print('&#123;&#125; ‰∏çÊòØMarkdownÊñá‰ª∂Ôºå‰∏çÂÅöÂ§ÑÁêÜ„ÄÇ'.format(md_file)) return num_replace = 0 # Êú¨Ê¨°Êìç‰ΩúÊó∂Èó¥Êà≥ dir_ts = time.strftime('%Y-%m-%d-%H-%M-%S', time.localtime()) with io.open(md_file, 'r', encoding='utf-8') as f: #‰ΩøÁî®utf-8 ÁºñÁ†ÅÊâìÂºÄ post = f.read() matches = re.compile(img_patten).findall(post) if matches and len(matches)&gt;0 : # Â§ö‰∏™groupÊï¥ÂêàÊàê‰∏Ä‰∏™ÂàóË°® for match in list(chain(*matches)) : if match and len(match)&gt;0 : print("match pic : ", match) new_url = match.replace('wangcong.info','babibobi.com') # Êõ¥Êñ∞MarkDownÊñá‰ª∂‰∏≠ÁöÑURL if new_url : post = post.replace(match, new_url) num_replace = num_replace + 1 # Â¶ÇÊûúÊúâÂÜÖÂÆπÁöÑËØùÔºåÂ∞±Áõ¥Êé•Ë¶ÜÁõñÂÜôÂÖ•ÂΩìÂâçÁöÑMarkDownÊñá‰ª∂ if post and num_replace &gt; 0: io.open(md_file, 'w', encoding='utf-8').write(post) print('&#123;0&#125; ‰∏≠Êúâ&#123;1&#125;‰∏™URLË¢´ÊõøÊç¢/&#123;2&#125;'.format(os.path.basename(md_file), num_replace, dir_ts)) elif num_replace == 0: print('&#123;&#125; ‰∏≠Ê≤°ÊúâÈúÄË¶ÅÊõøÊç¢ÁöÑURL'.format(os.path.basename(md_file)))if __name__ == '__main__': fileset = os.listdir(sys.argv[1]) for filename in fileset: print filename absfile = os.path.join(sys.argv[1], filename) replace_md_url(absfile)]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>‰∏ÉÁâõ‰∫ë</tag>
        <tag>ÂõæÂ∫ä</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[KerasÂø´ÈÄüÊïôÁ®ã]]></title>
    <url>%2Farticle%2FKerasTutorial.html</url>
    <content type="text"><![CDATA[ÊúÄËøëÊâÄÊé•Ëß¶ÁöÑÈ°πÁõÆÂü∫Êú¨ÈÉΩÊòØ‰ΩøÁî®KerasÂèäTensorFlowÂÖ±ÂêåÂÆûÁé∞ÁöÑÔºåÂáÜÁ°ÆÁöÑËØ¥ÊòØ‰ΩøÁî®Keras‰Ωú‰∏∫ÂÖ•Âè£Ôºå‰ΩøÁî®TensorFlow‰Ωú‰∏∫ÂêéÁ´ØÊù•ÂºÄÂ±ïÁöÑÁ•ûÁªèÁΩëÁªúÁõ∏ÂÖ≥Ê®°ÂûãÁöÑËÆ≠ÁªÉ„ÄÅÊµãËØïÂèäÂ∫îÁî®Â∑•‰Ωú„ÄÇ KerasÊòØ‰∏Ä‰∏™È´òÂ±ÇÁ•ûÁªèÁΩëÁªúAPIÔºåKerasÁî±Á∫ØPythonÁºñÂÜôËÄåÊàêÂπ∂Âü∫Tensorflow„ÄÅTheano‰ª•ÂèäCNTKÂêéÁ´Ø„ÄÇKeras ‰∏∫ÊîØÊåÅÂø´ÈÄüÂÆûÈ™åËÄåÁîüÔºåËÉΩÂ§üÊää‰Ω†ÁöÑideaËøÖÈÄüËΩ¨Êç¢‰∏∫ÁªìÊûúÔºåÂ¶ÇÊûú‰Ω†ÊúâÂ¶Ç‰∏ãÈúÄÊ±ÇÔºåËØ∑ÈÄâÊã©KerasÔºö ÁÆÄÊòìÂíåÂø´ÈÄüÁöÑÂéüÂûãËÆæËÆ°ÔºàkerasÂÖ∑ÊúâÈ´òÂ∫¶Ê®°ÂùóÂåñÔºåÊûÅÁÆÄÔºåÂíåÂèØÊâ©ÂÖÖÁâπÊÄßÔºâ ÊîØÊåÅCNNÂíåRNNÔºåÊàñ‰∫åËÄÖÁöÑÁªìÂêà Êó†ÁºùCPUÂíåGPUÂàáÊç¢ ÁÆÄÂçïÂú∞ËØ¥ÔºåÂ•ΩÂó®Âë¶ÔºåÊÑüËßâ‰∫∫ÁîüÂ∑≤ÁªèÂà∞Ëææ‰∫ÜÈ´òÊΩÆÔºåÂ∞±ÊòØÂø´ÔºÅ Âø´ÈÄüÂÖ•Èó®Ôºö123456789101112131415161718192021from keras.models import Sequentialfrom keras.layers import Dense# ÊûÑÂª∫Ê®°Âûãmodel = Sequential()model.add(Dense(units=64, activation='relu', input_dim=100))model.add(Dense(units=10, activation='softmax'))# ÈÖçÁΩÆ‰ºòÂåñÂô®model.compile(loss='categorical_crossentropy', optimizer='sgd', metrics=['accuracy'])# Ê®°ÂûãËÆ≠ÁªÉmodel.fit(data_train, labels_train, epochs=5, batch_size=32)# Ê®°ÂûãÊÄßËÉΩËØÑ‰º∞loss_and_metrics = model.evaluate(data_test, labels_test, batch_size=128)# ÂØπÊñ∞ÁöÑÊï∞ÊçÆËøõË°åÈ¢ÑÊµãclasses = model.predict(data_test, batch_size=128) È°πÁõÆÁ§∫‰æãÁªèËøá‰∏ÄÊÆµÊó∂Èó¥ÁöÑÈ°πÁõÆÂºÄÂèëÔºåÂÖ≥‰∫éÊ∑±Â∫¶Â≠¶‰π†ÁöÑÁõÆÂΩïÊûÑÂª∫Êé®ËçêÂ¶Ç‰∏ãÔºö 12345678910.‚îú‚îÄ‚îÄ datasets‚îÇ ‚îî‚îÄ‚îÄ xxxx //Êï∞ÊçÆÈõÜ‚îú‚îÄ‚îÄ models‚îÇ ‚îú‚îÄ‚îÄ model-weights.h5 //‰øùÂ≠òÁöÑÊ®°Âûã‚îÇ ‚îî‚îÄ‚îÄ pretrain_model‚îÇ ‚îî‚îÄ‚îÄ keras.h5 //È¢ÑËÆ≠ÁªÉÊ®°Âûã‚îú‚îÄ‚îÄ modle.py //Á•ûÁªèÁΩëÁªúÁªìÊûÑ‚îú‚îÄ‚îÄ train.py //ËÆ≠ÁªÉÁöÑËÑöÊú¨‚îî‚îÄ‚îÄ test.py //ÊµãËØïÁöÑËÑöÊú¨ ÂÖ≥‰∫émodel.pyËÑöÊú¨ÂÜÖÂÆπÁ§∫‰æãÂ¶Ç‰∏ãÔºö 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687# usr/bin/env python# -*- coding:utf-8 -*-from keras.models import Modelfrom keras.layers.core import Dense, Dropout, Activation, Reshape, Permutefrom keras.layers.convolutional import Conv2D, Conv2DTranspose, ZeroPadding2Dfrom keras.layers.pooling import AveragePooling2D, GlobalAveragePooling2Dfrom keras.layers import Input, Flattenfrom keras.layers.merge import concatenatefrom keras.layers.normalization import BatchNormalizationfrom keras.regularizers import l2from keras.layers.wrappers import TimeDistributeddef conv_block(input, growth_rate, dropout_rate=None, weight_decay=1e-4): x = BatchNormalization(axis=-1, epsilon=1.1e-5)(input) x = Activation('relu')(x) x = Conv2D(growth_rate, (3,3), kernel_initializer='he_normal', padding='same')(x) if(dropout_rate): x = Dropout(dropout_rate)(x) return xdef dense_block(x, nb_layers, nb_filter, growth_rate, droput_rate=0.2, weight_decay=1e-4): for i in range(nb_layers): cb = conv_block(x, growth_rate, droput_rate, weight_decay) x = concatenate([x, cb], axis=-1) nb_filter += growth_rate return x, nb_filterdef transition_block(input, nb_filter, dropout_rate=None, pooltype=1, weight_decay=1e-4): x = BatchNormalization(axis=-1, epsilon=1.1e-5)(input) x = Activation('relu')(x) x = Conv2D(nb_filter, (1, 1), kernel_initializer='he_normal', padding='same', use_bias=False, kernel_regularizer=l2(weight_decay))(x) if(dropout_rate): x = Dropout(dropout_rate)(x) if(pooltype == 2): x = AveragePooling2D((2, 2), strides=(2, 2))(x) elif(pooltype == 1): x = ZeroPadding2D(padding = (0, 1))(x) x = AveragePooling2D((2, 2), strides=(2, 1))(x) elif(pooltype == 3): x = AveragePooling2D((2, 2), strides=(2, 1))(x) return x, nb_filterdef dense_cnn(input, nclass): _dropout_rate = 0.2 _weight_decay = 1e-4 _nb_filter = 64 # conv 64 5*5 s=2 x = Conv2D(_nb_filter, (5, 5), strides=(2, 2), kernel_initializer='he_normal', padding='same', use_bias=False, kernel_regularizer=l2(_weight_decay))(input) # 64 + 8 * 8 = 128 x, _nb_filter = dense_block(x, 8, _nb_filter, 8, None, _weight_decay) # 128 x, _nb_filter = transition_block(x, 128, _dropout_rate, 2, _weight_decay) # 128 + 8 * 8 = 192 x, _nb_filter = dense_block(x, 8, _nb_filter, 8, None, _weight_decay) # 192 -&gt; 128 x, _nb_filter = transition_block(x, 128, _dropout_rate, 2, _weight_decay) # 128 + 8 * 8 = 192 x, _nb_filter = dense_block(x, 8, _nb_filter, 8, None, _weight_decay) x = BatchNormalization(axis=-1, epsilon=1.1e-5)(x) x = Activation('relu')(x) x = Permute((2, 1, 3), name='permute')(x) x = TimeDistributed(Flatten(), name='flatten')(x) y_pred = Dense(nclass, name='out', activation='softmax')(x) # basemodel = Model(inputs=input, outputs=y_pred) # basemodel.summary() return y_preddef dense_blstm(input): passinput = Input(shape=(32, 280, 1), name='the_input')dense_cnn(input, 5000) ÂÖ≥‰∫étrain.pyËÑöÊú¨ÂÜÖÂÆπÁ§∫‰æãÂ¶Ç‰∏ãÔºö 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173# usr/bin/env python#-*- coding:utf-8 -*-import osimport jsonimport threadingimport numpy as npfrom PIL import Imageimport tensorflow as tffrom keras import lossesfrom keras import backend as Kfrom keras.utils import plot_modelfrom keras.preprocessing import imagefrom keras.preprocessing.sequence import pad_sequencesfrom keras.layers import Input, Dense, Flattenfrom keras.layers.core import Reshape, Masking, Lambda, Permutefrom keras.layers.recurrent import GRU, LSTMfrom keras.layers.wrappers import Bidirectional, TimeDistributedfrom keras.layers.normalization import BatchNormalizationfrom keras.layers.convolutional import Conv2D, MaxPooling2D, ZeroPadding2Dfrom keras.optimizers import SGD, Adamfrom keras.models import Modelfrom keras.callbacks import EarlyStopping, ModelCheckpoint, LearningRateScheduler, TensorBoardfrom imp import reloadimport modelimport ioimport sysreload(sys)#sys.setdefaultencoding('utf-8')img_h = 32img_w = 280batch_size = 128maxlabellength = 10def get_session(gpu_fraction=1.0): num_threads = os.environ.get('OMP_NUM_THREADS') gpu_options = tf.GPUOptions(per_process_gpu_memory_fraction=gpu_fraction) if num_threads: return tf.Session(config=tf.ConfigProto( gpu_options=gpu_options, intra_op_parallelism_threads=num_threads)) else: return tf.Session(config=tf.ConfigProto(gpu_options=gpu_options))def readfile(filename): res = [] with open(filename, 'r') as f: lines = f.readlines() for i in lines: res.append(i.strip()) dic = &#123;&#125; for i in res: p = i.split(' ') dic[p[0]] = p[1:] return dicclass random_uniform_num(): """ ÂùáÂåÄÈöèÊú∫ÔºåÁ°Æ‰øùÊØèËΩÆÊØè‰∏™Âè™Âá∫Áé∞‰∏ÄÊ¨° """ def __init__(self, total): self.total = total self.range = [i for i in range(total)] np.random.shuffle(self.range) self.index = 0 def get(self, batchsize): r_n=[] if(self.index + batchsize &gt; self.total): r_n_1 = self.range[self.index:self.total] np.random.shuffle(self.range) self.index = (self.index + batchsize) - self.total r_n_2 = self.range[0:self.index] r_n.extend(r_n_1) r_n.extend(r_n_2) else: r_n = self.range[self.index : self.index + batchsize] self.index = self.index + batchsize return r_ndef gen(data_file, image_path, batchsize=128, maxlabellength=10, imagesize=(32, 280)): image_label = readfile(data_file) _imagefile = [i for i, j in image_label.items()] x = np.zeros((batchsize, imagesize[0], imagesize[1], 1), dtype=np.float) labels = np.ones([batchsize, maxlabellength]) * 10000 input_length = np.zeros([batchsize, 1]) label_length = np.zeros([batchsize, 1]) r_n = random_uniform_num(len(_imagefile)) _imagefile = np.array(_imagefile) while 1: shufimagefile = _imagefile[r_n.get(batchsize)] for i, j in enumerate(shufimagefile): img1 = Image.open(os.path.join(image_path, j)).convert('L') img = np.array(img1, 'f') / 255.0 - 0.5 x[i] = np.expand_dims(img, axis=2) # print('imag:shape', img.shape) str = image_label[j] label_length[i] = len(str) if(len(str) &lt;= 0): print("len &lt; 0", j) input_length[i] = imagesize[1] // 8 labels[i, :len(str)] = [int(k) - 1 for k in str] inputs = &#123;'the_input': x, 'the_labels': labels, 'input_length': input_length, 'label_length': label_length, &#125; outputs = &#123;'ctc': np.zeros([batchsize])&#125; yield (inputs, outputs)def ctc_lambda_func(args): y_pred, labels, input_length, label_length = args return K.ctc_batch_cost(labels, y_pred, input_length, label_length)def get_model(img_h, nclass): input = Input(shape=(img_h, None, 1), name='the_input') y_pred = model.dense_cnn(input, nclass) basemodel = Model(inputs=input, outputs=y_pred) basemodel.summary() labels = Input(name='the_labels', shape=[None], dtype='float32') input_length = Input(name='input_length', shape=[1], dtype='int64') label_length = Input(name='label_length', shape=[1], dtype='int64') loss_out = Lambda(ctc_lambda_func, output_shape=(1,), name='ctc')([y_pred, labels, input_length, label_length]) model = Model(inputs=[input, labels, input_length, label_length], outputs=loss_out) model.compile(loss=&#123;'ctc': lambda y_true, y_pred: y_pred&#125;, optimizer='adam', metrics=['accuracy']) return basemodel, modelif __name__ == '__main__': char_set = io.open('char_std_5990.txt', 'r', encoding='utf-8').readlines() char_set = ''.join([ch.strip('\n') for ch in char_set][1:]) nclass = len(char_set) K.set_session(get_session()) reload(model) basemodel, model = get_model(img_h, nclass) modelPath = './models/pretrain_model/keras.h5' if os.path.exists(modelPath): print("Loading model weights...") basemodel.load_weights(modelPath) print('done!') train_loader = gen('data_train.txt', './images', batchsize=batch_size, maxlabellength=maxlabellength, imagesize=(img_h, img_w)) test_loader = gen('data_test.txt', './images', batchsize=batch_size, maxlabellength=maxlabellength, imagesize=(img_h, img_w)) checkpoint = ModelCheckpoint(filepath='./models/model-weights-&#123;epoch:02d&#125;-&#123;val_loss:.2f&#125;.h5', monitor='val_loss', save_best_only=False, save_weights_only=True) lr_schedule = lambda epoch: 0.0005 * 0.4**epoch learning_rate = np.array([lr_schedule(i) for i in range(10)]) changelr = LearningRateScheduler(lambda epoch: float(learning_rate[epoch])) earlystop = EarlyStopping(monitor='val_loss', patience=2, verbose=1) tensorboard = TensorBoard(log_dir='./models/logs', write_graph=True) print('-----------Start training-----------') model.fit_generator(train_loader, steps_per_epoch = 3607567 // batch_size, epochs = 10, initial_epoch = 0, validation_data = test_loader, validation_steps = 36440 // batch_size, callbacks = [checkpoint, earlystop, changelr, tensorboard]) test.pyËÑöÊú¨ÂÜÖÂÆπÁ§∫‰æãÂ¶Ç‰∏ãÔºö 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162# usr/bin/env python#-*- coding:utf-8 -*-import osimport numpy as npfrom imp import reloadfrom PIL import Image, ImageOpsfrom keras.layers import Inputfrom keras.models import Model# import keras.backend as Kfrom . import keysfrom . import modelreload(model)characters = keys.alphabet[:]characters = characters[1:]nclass = len(characters)input = Input(shape=(32, None, 1), name='the_input')y_pred= model.dense_cnn(input, nclass)basemodel = Model(inputs=input, outputs=y_pred)modelPath = os.path.join(os.getcwd(), '.models/weights-model.h5')if os.path.exists(modelPath): basemodel.load_weights(modelPath)def decode(pred): char_list = [] pred_text = pred.argmax(axis=2)[0] for i in range(len(pred_text)): if pred_text[i] != nclass - 1 and ((not (i &gt; 0 and pred_text[i] == pred_text[i - 1])) or (i &gt; 1 and pred_text[i] == pred_text[i - 2])): char_list.append(characters[pred_text[i]]) return u''.join(char_list)def predict(img): width, height = img.size[0], img.size[1] scale = height * 1.0 / 32 width = int(width / scale) img = img.resize([width, 32], Image.ANTIALIAS) ''' img_array = np.array(img.convert('1')) boundary_array = np.concatenate((img_array[0, :], img_array[:, width - 1], img_array[31, :], img_array[:, 0]), axis=0) if np.median(boundary_array) == 0: # Â∞ÜÈªëÂ∫ïÁôΩÂ≠óËΩ¨Êç¢‰∏∫ÁôΩÂ∫ïÈªëÂ≠ó img = ImageOps.invert(img) ''' img = np.array(img).astype(np.float32) / 255.0 - 0.5 X = img.reshape([1, 32, width, 1]) y_pred = basemodel.predict(X) y_pred = y_pred[:, :, :] # out = K.get_value(K.ctc_decode(y_pred, input_length=np.ones(y_pred.shape[0]) * y_pred.shape[1])[0][0])[:, :] # out = u''.join([characters[x] for x in out[0]]) out = decode(y_pred) return out]]></content>
      <categories>
        <category>Deep Learning</category>
      </categories>
      <tags>
        <tag>Keras</tag>
        <tag>TensorFlow</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÂÖ≥‰∫éLinux‰∫ëÊúçÂä°Âô®ÁöÑÊú¨Âú∞ÂèØËßÜÂåñÁéØÂ¢ÉÈÖçÁΩÆ]]></title>
    <url>%2Farticle%2FLinuxCloudServerGUI.html</url>
    <content type="text"><![CDATA[Âõ†‰∏∫ÂÅöÁöÑÈ°πÁõÆÊõ¥‰æßÈáç‰∫éÂõæÂÉèÁõ∏ÂÖ≥È¢ÜÂüüÔºåÂú®ÂÆûÈôÖÂ∫îÁî®‰∏≠ÊúâÈúÄË¶ÅÂ∞ÜÁõÆÊ†áËØÜÂà´ÊàñÊ£ÄÊµãÁöÑÁªìÊûúËøõË°åÊòæÁ§∫ÁöÑÈúÄÊ±ÇÔºåÂêéÊü•ÈòÖÁõ∏ÂÖ≥ËµÑÊñôÔºåÊÄªÁªìÂÖ≥‰∫éLinux‰∫ëÊúçÂä°Âô®ÁöÑÊú¨Âú∞ÂèØËßÜÂåñÁéØÂ¢ÉÈÖçÁΩÆÂ¶Ç‰∏ãÔºö Linux‰∫ëÊúçÂä°Âô®ËÆæÁΩÆ‰∏ÄËà¨ÊÉÖÂÜµ‰∏ãLinuxÈïúÂÉèÊòØ‰∏çÂ∏¶ÂèØËßÜÂåñÁïåÈù¢ÁöÑÔºåÂõ†Ê≠§ÈúÄË¶ÅÂÆâË£ÖÂèØËßÜÂåñÔºàGUIÔºâÁéØÂ¢ÉÔºö 123apt-get install x-window-system-coreapt-get install gnome-coreapt-get install gdm MacËÆæÁΩÆÁºñËæëmac ‰∏ã ~/.ssh/configÔºåÊ∑ªÂä†‰ª•‰∏ãÂ≠óÊÆµÂç≥ÂèØ„ÄÇ 12345678910### default for all ##Host * ForwardAgent no ForwardX11 no ForwardX11Trusted yes User nixcraft Port 22 Protocol 2 ServerAliveInterval 60 ServerAliveCountMax 30 ‰∏ªË¶ÅÈÄöËøáxQuartzËøô‰∏™ËΩØ‰ª∂ÔºàÂèØËßÜÂåñÁéØÂ¢ÉÔºåÊèê‰æõx11ÁéØÂ¢ÉÔºâÔºå Ë∞ÉÁî®ÊñπÊ≥ïÊòØÊâìÂºÄterminalËæìÂÖ•ssh -X root@ip WindowsËÆæÁΩÆ‰∏ªË¶ÅÈÄöËøáxshell + x-managerÁªÑÂêà È¶ñÂÖàÔºåÂÆâË£ÖXmindÂíåXming-fontsËøô2‰∏™ËΩØ‰ª∂ÔºåÂêéËÄÖÊòØÂ≠ó‰ΩìÊèí‰ª∂ ÂÖ∂Ê¨°Ôºå‰ΩøÁî®ËøúÁ®ãÁôªÂΩïËΩØ‰ª∂ÔºåÊâìÂºÄ‚ÄúX11ËΩ¨ÂèëÂäüËÉΩ‚ÄùÔºàX11 ForwardÔºâ]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>ÂèØËßÜÂåñ</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[SecureCRT ‰∏™‰∫∫ÈÖçËâ≤ÊñπÊ°à]]></title>
    <url>%2Farticle%2FSecureCRTSetting.html</url>
    <content type="text"><![CDATA[Âú®Mac‰∏ä‰∏ÄÁõ¥Ê≤°ÊúâÊâæÂà∞ÂêàÈÄÇÁöÑSSHËøúÁ®ãÁôªÂΩïÂ∑•ÂÖ∑ÔºåÂêéÂ§öÊ¨°ÂéªÁü•‰πéÁ≠âÁõ∏ÂÖ≥Âπ≥Âè∞Êü•ÁúãÁ±ª‰ººÈóÆÈ¢òÔºåÂπ∂ÁªèËøáÂÆûÈôÖÂ∞ùËØïÔºåÊöÇÊó∂ÈÄâÂÆöSecureCRT‰Ωú‰∏∫Ëá™Â∑±ÁöÑ‰∏¥Êó∂SSHËøúÁ®ãÁôªÂΩïÂ∑•ÂÖ∑„ÄÇ PSÔºö‰πü‰ΩøÁî®ËøáÂÖ∂‰ªñÁöÑÂ¶ÇËá™Â∏¶ÁöÑTerminal„ÄÅFinalShellÂèäZocÁ≠âÂ∑•ÂÖ∑ÔºåÊÄª‰ΩìËÄåË®ÄFinalShellÊØîËæÉÁ¨¶ÂêàÂõΩ‰∫∫ÂÆ°ÁæéÂèäÊìç‰ΩúÔºå‰ΩÜÊòØÊÑüËßâ‰∏çÂ§™ÂÆâÂÖ®ÔºåÊØïÁ´üÁ¨¨‰∏âÊñπ‰∏™‰∫∫ÂºÄÂèëÔºå‰∏î‰∫ëÊúçÂä°Âô®Ëé´ÂêçË∑ë‰∏ä‰∫ÜÊåñÁüøÁõ∏ÂÖ≥‰ª£Á†ÅÔºå‰∏çÁü•ÈÅìÊòØÂê¶ÂíåËØ•Â∑•ÂÖ∑‰πãÈó¥ÊúâÂÖ≥ËÅî„ÄÇ ‰∏∫ÂÆâÂÖ®Ëµ∑ËßÅÔºåËøòÊòØ‰ΩøÁî®‰∫ÜËÄÅÁâåÁöÑSecureCRT„ÄÇ ÈÖçÁΩÆLinuxÁªàÁ´ØÈ¢úËâ≤‰ªéOptions‰∏≠ÈÄâÊã© Global optionsÔºåÁÑ∂ÂêéÁÇπÂáªEdit Defualt Setting Âú®Terminal‰∏ãÊãâÂàóË°®‰∏ãÈÄâÊã©LinuxÔºåÂãæÈÄâANSI Color ÈÖçÁΩÆANSI ColorANSI Color ËÆæÁΩÆÂ¶Ç‰∏ãÔºö ÈÖçÁΩÆÊòæÁ§∫Â≠ó‰Ωì ÈÖçÁΩÆÂÖâÊ†áÊ†∑ÂºèËÆæÁΩÆÈó™ÁÉÅ ÂÖâÊ†áÂèäÁõ∏Â∫îÈ¢úËâ≤Ôºö]]></content>
      <categories>
        <category>Tools</category>
      </categories>
      <tags>
        <tag>SecureCRT</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python--Â≠óÁ¨¶‰∏≤„ÄÅÂàóË°®„ÄÅÂÖÉÁªÑ„ÄÅÂ≠óÂÖ∏‰πãÈó¥ÁöÑÁõ∏‰∫íËΩ¨Êç¢]]></title>
    <url>%2Farticle%2FPythonDataTypeConvert.html</url>
    <content type="text"><![CDATA[‰∏∫Êñπ‰æø‰ª•ÂêéÂºÄÂèëÊü•ÈòÖÔºåÁâπËÆ∞ÂΩïÊ≠§Áõ∏ÂÖ≥‰ª£Á†Å„ÄÇÊâÄË¶ÅÂÆûÁé∞ÁöÑÂäüËÉΩÔºö Â≠óÁ¨¶‰∏≤„ÄÅÂàóË°®„ÄÅÂÖÉÁªÑ„ÄÅÂ≠óÂÖ∏‰πãÈó¥ÁöÑÁõ∏‰∫íËΩ¨Êç¢ Â≠óÁ¨¶‰∏≤ Â≠óÁ¨¶‰∏≤ËΩ¨ÂàóË°® 1234print list(eval("'happy', 'every', 'day'"))# Â≠óÁ¨¶‰∏≤ËΩ¨‰∏∫ÂàóË°®ÔºåËøîÂõûÔºö['happy', 'every', 'day']print list(eval("1, 2, 3"))# Â≠óÁ¨¶‰∏≤ËΩ¨‰∏∫ÂàóË°®ÔºåËøîÂõûÔºö[1, 2, 3] Â≠óÁ¨¶‰∏≤ËΩ¨ÂÖÉÁªÑ 1234print tuple(eval("'happy', 'every', 'day'"))# Â≠óÁ¨¶‰∏≤ËΩ¨‰∏∫ÂàóË°®ÔºåËøîÂõûÔºö('happy', 'every', 'day')print tuple(eval("1, 2,3"))# Â≠óÁ¨¶‰∏≤ËΩ¨‰∏∫ÂàóË°®ÔºåËøîÂõûÔºö(1, 2, 3) Â≠óÁ¨¶‰∏≤ËΩ¨Â≠óÂÖ∏ 12print eval("&#123;'happy':1, 'every':2, 'day':'nice'&#125;")#Â≠óÁ¨¶‰∏≤ËΩ¨‰∏∫Â≠óÂÖ∏ÔºåËøîÂõûÔºö&#123;'every': 2, 'day': 'nice', 'happy': 1&#125; ÂàóË°® ÂàóË°®ËΩ¨Â≠óÁ¨¶‰∏≤ 123list = ['happy', 'every', 'day', 1, 2, 3]print type(str(list)), str(list)# ÂàóË°®ËΩ¨Â≠óÁ¨¶‰∏≤ÔºåËøîÂõûÔºö&lt;type 'str'&gt; ['happy', 'every', 'day', 1, 2, 3] ÂàóË°®ËΩ¨ÂÖÉÁªÑ 123list = ['happy', 'every', 'day', 1, 2, 3]print tuple(list)# ÂàóË°®ËΩ¨Â≠óÁ¨¶‰∏≤ÔºåËøîÂõûÔºö('happy', 'every', 'day', 1, 2, 3) ÂàóË°®ËΩ¨Â≠óÂÖ∏ Â∞Ü‰∏§‰∏™ÂàóË°®ÂêàÊàêÂ≠óÂÖ∏ 1234list1 = ['happy', 'every', 'day']list2 = [1, 2, 3]print(dict(zip(list1,list2)))# ËøîÂõûÔºö&#123;'every': 2, 'day': 3, 'happy': 1&#125; Â∞ÜÂµåÂ•óÂàóË°®ËΩ¨‰∏∫Â≠óÂÖ∏ 12345678list= [['key1','value1'],['key2','value2'],['key3','value3']]print(dict(list))# ËøîÂõûÔºö&#123;'key1': 'value1', 'key2': 'value2', 'key3': 'value3'&#125;list= [['key1','value1'],['key2','value2'],['key3','value3']]dict = &#123;&#125;for i in list: dict[i[0]] = i[1]# ËøîÂõûÔºö&#123;'key3': 'value3', 'key2': 'value2', 'key1': 'value1'&#125; ‰ΩøÁî®ForÂæ™ÁéØ 12345dict = &#123;&#125;list = ['happy', 'every', 'day', 1, 2, 3]for i in range(len(list)/2): dict[list[i]] = list[i + 3]# ËøîÂõûÔºö&#123;'every': 2, 'day': 3, 'happy': 1&#125; ÂÖÉÁªÑ ÂÖÉÁªÑËΩ¨Â≠óÁ¨¶‰∏≤ 123tuplex = ('happy', 'every', 'day', 1, 2, 3)print type(tuplex.__str__()), tuplex.__str__()# ÂÖÉÁªÑËΩ¨Â≠óÁ¨¶‰∏≤ÔºåËøîÂõûÔºö&lt;type 'str'&gt; ('happy', 'every', 'day', 1, 2, 3) ÂÖÉÁªÑËΩ¨ÂàóË°® 123tuplex = ('happy', 'every', 'day', 1, 2, 3)print list(tuplex)# ÂÖÉÁªÑËΩ¨Â≠óÁ¨¶‰∏≤ÔºåËøîÂõûÔºö['happy', 'every', 'day', 1, 2, 3] ÂÖÉÁªÑËΩ¨Â≠óÂÖ∏ 123tuplex = ((1, 'happy'),(2, 'every'), (3, 'day'))print(dict((y, x) for x, y in tuplex))# ÂÖÉÁªÑËΩ¨Â≠óÂÖ∏ÔºåËøîÂõûÔºö&#123;'every': 2, 'day': 3, 'happy': 1&#125; Â≠óÂÖ∏ Â≠óÂÖ∏ËΩ¨Â≠óÁ¨¶‰∏≤ 123dict = &#123;'every': 2, 'happy': 1, 'day': 'nice'&#125;print type(str(dict)), str(dict)# Â≠óÂÖ∏ËΩ¨Â≠óÁ¨¶‰∏≤ÔºåËøîÂõûÔºö&lt;type 'str'&gt; &#123;'every': 2, 'day': 'nice', 'happy': 1&#125; Â≠óÂÖ∏ËΩ¨ÂàóË°® 12345dict = &#123;'every': 2, 'happy': 1, 'day': 'nice'&#125;print list(dict)# Â≠óÂÖ∏ËΩ¨Â≠óÁ¨¶‰∏≤ÔºåËøîÂõûÔºö['every', 'day', 'happy']print list(dict.values())# Â≠óÂÖ∏ËΩ¨Â≠óÁ¨¶‰∏≤ÔºåËøîÂõûÔºö[2, 'nice', 1] Â≠óÂÖ∏ËΩ¨ÂÖÉÁªÑ 12345dict = &#123;'every': 2, 'happy': 1, 'day': 'nice'&#125;print tuple(dict)# Â≠óÂÖ∏ËΩ¨Â≠óÁ¨¶‰∏≤ÔºåËøîÂõûÔºö('every', 'day', 'happy')print tuple(dict.values())# Â≠óÂÖ∏ËΩ¨Â≠óÁ¨¶‰∏≤ÔºåËøîÂõûÔºö(2, 'nice', 1)]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Êï∞ÊçÆÁªìÊûÑ‰∏éÁÆóÊ≥ïÊ°ÜÊû∂Âõæ]]></title>
    <url>%2Farticle%2FDataStructureAlgorithm.html</url>
    <content type="text"><![CDATA[‰∏∫Êñπ‰æøÂêéÁª≠Êü•ÈòÖÂèäÂ≠¶‰π†ÔºåÁªèÂèÇËÄÉÁõ∏ÂÖ≥‰π¶Á±çÂèäËµÑÊñôÔºåÂØπÊï∞ÊçÆÁªìÊûÑ‰∏éÁÆóÊ≥ïÁöÑÊ°ÜÊû∂ÂõæÊï¥ÁêÜÂ¶Ç‰∏ã„ÄÇ ÁÇπÊ≠§ÊâìÂºÄÊñá‰ª∂ ÔºàÊåÅÁª≠ÂÆåÂñÑ‰∏≠‚Ä¶Ôºâ]]></content>
      <categories>
        <category>Data Structure</category>
      </categories>
      <tags>
        <tag>Êï∞ÊçÆÁªìÊûÑ</tag>
        <tag>ÁÆóÊ≥ï</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python--ÂÄüÂä©OpenCVÂú®ÂõæÁâá‰∏äÊòæÁ§∫ÊñáÂ≠óÂèä‰øùÂ≠ò]]></title>
    <url>%2Farticle%2FPythonOpenCVPutText.html</url>
    <content type="text"><![CDATA[‰∏∫Êñπ‰æø‰ª•ÂêéÂºÄÂèëÊü•ÈòÖÔºåÁâπËÆ∞ÂΩïÊ≠§Áõ∏ÂÖ≥‰ª£Á†Å„ÄÇÊâÄË¶ÅÂÆûÁé∞ÁöÑÂäüËÉΩÔºö Âú®ÂõæÁâá‰∏äÊòæÁ§∫ÊñáÂ≠óÂèä‰øùÂ≠ò ÊâÄË∞ÉÁî®ÁöÑÂáΩÊï∞12345678910111213cv2.putText(img, text, (40, 50), cv2.FONT_HERSHEY_PLAIN, 2.0, (0, 0, 255), 2)# putText ÂÆö‰πâÂ¶Ç‰∏ãÔºövoid cv::putText( cv::Mat&amp; img, // ÂæÖÁªòÂà∂ÁöÑÂõæÂÉè const string&amp; text, // ÂæÖÁªòÂà∂ÁöÑÊñáÂ≠ó cv::Point origin, // ÊñáÊú¨Ê°ÜÁöÑÂ∑¶‰∏ãËßí int fontFace, // Â≠ó‰Ωì (Â¶Çcv::FONT_HERSHEY_PLAIN) double fontScale, // Â∞∫ÂØ∏Âõ†Â≠êÔºåÂÄºË∂äÂ§ßÊñáÂ≠óË∂äÂ§ß cv::Scalar color, // Á∫øÊù°ÁöÑÈ¢úËâ≤ÔºàRGBÔºâ int thickness = 1, // Á∫øÊù°ÂÆΩÂ∫¶ int lineType = 8, // Á∫øÂûãÔºà4ÈÇªÂüüÊàñ8ÈÇªÂüüÔºåÈªòËÆ§8ÈÇªÂüüÔºâ bool bottomLeftOrigin = false // true=‚Äôorigin at lower left‚Äô ); fontFace Â≠ó‰ΩìÁ±ªÂûã ÊèèËø∞ CV_FONT_HERSHEY_SIMPLEX Ê≠£Â∏∏Â∞∫ÂØ∏sanserifÂ≠ó‰Ωì CV_FONT_HERSHEY_PLAIN Â∞èÂ∞∫ÂØ∏sanserifÂ≠ó‰Ωì CV_FONT_HERSHEY_DUPLEX Ê≠£Â∏∏Â∞∫ÂØ∏sanserif, ÊØî CV_FONT_HERSHEY_SIMPLEXÊõ¥Â§çÊùÇ CV_FONT_HERSHEY_COMPLEX Ê≠£Â∏∏Â∞∫ÂØ∏serif, ÊØî CV_FONT_HERSHEY_DUPLEXÊõ¥Â§çÊùÇ CV_FONT_HERSHEY_TRIPLEX Ê≠£Â∏∏Â∞∫ÂØ∏serif, ÊØîCV_FONT_HERSHEY_COMPLEXÊõ¥Â§çÊùÇ CV_FONT_HERSHEY_COMPLEX_SMALL Â∞èÂ∞∫ÂØ∏ÁöÑ CV_FONT_HERSHEY_COMPLEX CV_FONT_HERSHEY_SCRIPT_SIMPLEX ÊâãÂÜôÈ£éÊ†º CV_FONT_HERSHEY_SCRIPT_COMPLEX ÊØîCV_FONT_HERSHEY_SCRIPT_SIMPLEXÊõ¥Â§çÊùÇÁöÑÈ£éÊ†º Á®ãÂ∫èÁ§∫‰æãÔºö123456789101112131415161718import cv2img = cv2.imread('1.png')while True: W = 3.752 H = 4.382 L = 8.342 W = round(W, 2) # roundÂáΩÊï∞Â∞ÜW‰øùÁïô‰∏§‰ΩçÂ∞èÊï∞ H = round(H, 2) L = round(L, 2) text = "W:"+str(W)+" " + "H:"+str(H) + " " + "L:"+str(L) cv2.putText(img, text, (40, 50), cv2.FONT_HERSHEY_PLAIN, 2.0, (0, 0, 255), 2) cv2.imshow("ori_image", img) key = cv2.waitKey(delay=1) if key == 27: cv2.destroyAllWindows() cv2.imwrite("new_img.png", img) break]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[TensorFlow Object detection APIÊïôÁ®ã‰πã‰∏âÔºöÊµãËØïËá™Â∑±ÁöÑÊ®°Âûã]]></title>
    <url>%2Farticle%2FTensorFlowObjectDetectionAPITutorial3.html</url>
    <content type="text"><![CDATA[TensorFlow Object detection API ÊïôÁ®ãÁ≥ªÂàóÔºö TensorFlow Object detection API ÊïôÁ®ã‰πã‰∏ÄÔºöObject detection APIÂÆâË£Ö TensorFlow Object detection API ÊïôÁ®ã‰πã‰∫åÔºöËÆ≠ÁªÉËá™Â∑±ÁöÑÊ®°Âûã TensorFlow Object detection API ÊïôÁ®ã‰πã‰∏âÔºöÊµãËØïËá™Â∑±ÁöÑÊ®°Âûã Âú®Ëøô‰∏ÄËäÇÔºåÊàë‰ª¨Â∞ÜË¶ÅÊµãËØïÊàë‰ª¨Ëá™Â∑±ÁöÑÊ®°ÂûãÔºåÁúã‰∏ÄÁúãËÆ≠ÁªÉÁöÑÊ®°ÂûãËÉΩÂê¶ËææÂà∞Êàë‰ª¨È¢ÑÊúüÁöÑÊïàÊûú„ÄÇ Â∞ÜckptÊ®°ÂûãÊñá‰ª∂‰øùÂ≠ò‰∏∫pbÊ®°ÂûãÊñá‰ª∂È¶ñÂÖàÊàë‰ª¨ÈúÄË¶ÅÂØºÂá∫ËÆ°ÁÆóÂõæ(Inference Graph)ÔºåÂú®models/research/object_detection/ÁõÆÂΩï‰∏≠ÔºåÂÆòÊñπÊèê‰æõÁöÑexport_inference_graph.pyËÑöÊú¨ÂèØ‰ª•Â∏ÆÂä©Êàë‰ª¨ËΩªÊùæÂú∞ÂéªÂÆåÊàêËØ•Êìç‰Ωú„ÄÇ ÊâæÂà∞‰∏Ä‰∏™ÊÉ≥Ë¶ÅÂØºÂá∫pbÊñá‰ª∂ÁöÑcheckpointÔºåÂú®models/research/object_detection/Ë∑ØÂæÑ‰∏ãÊâßË°åÂëΩ‰ª§ Ôºö 12345python3 export_inference_graph.py \ --input_type image_tensor \ --pipeline_config_path training/ssd_mobilenet_v1_pets.config \ --trained_checkpoint_prefix training/model.ckpt-10856 \ --output_directory mac_n_cheese_inference_graph input_typeÔºö‰øùÊåÅÊ®°ÂûãÔºå‰∏çÁî®‰øÆÊîπ„ÄÇ pipeline_config_pathÔºöÁ•ûÁªèÁΩëÁªúÁöÑÂèÇÊï∞ËÆæÁΩÆÊñá‰ª∂Ë∑ØÂæÑÔºåÊ†ºÂºèÂ¶Ç‰∏ä„ÄÇ trained_checkpoint_prefixÔºöËÆ≠ÁªÉÂêéÊúÄÂ§ßÊ≠•ÈïøÁöÑckptÊñá‰ª∂ÁöÑÁõÆÂΩïÔºåÊ†ºÂºèÂ¶Ç‰∏ä„ÄÇ output_directoryÔºöËæìÂÖ•Êñá‰ª∂ÁõÆÂΩï Â¶ÇÊâßË°å‰ª•‰∏äÂëΩ‰ª§Êó∂Êä•Èîô‰∏∫Ôºöno module named &#39;nets&#39;ÔºåËøõÂÖ•models/research/Ë∑ØÂæÑ‰∏ãÊâßË°å: 12# From tensorflow/models/research/export PYTHONPATH=$PYTHONPATH:`pwd`:`pwd`/slim ËØªÂèñpbÊ®°ÂûãÊñá‰ª∂ ËØªÂèñË∑ØÂæÑÔºö 123456ROOT_PATH = os.path.abspath(os.path.join(os.path.dirname(__file__), os.pardir))# Path to frozen detection graph. This is the actual model that is used for the object detection.PATH_TO_CKPT = ROOT_PATH + '/include/hand_inference_graph/frozen_inference_graph.pb'# List of the strings that is used to add correct label for each box.PATH_TO_LABELS = ROOT_PATH + '/include/hand_inference_graph/hand_label_map.pbtxt'NUM_CLASSES = 1 Âä†ËΩΩÊ®°ÂûãÔºö 12345678# Loading the modeldetection_graph = tf.Graph()with detection_graph.as_default(): od_graph_def = tf.GraphDef() with tf.gfile.GFile(PATH_TO_CKPT, 'rb') as fid: serialized_graph = fid.read() od_graph_def.ParseFromString(serialized_graph) tf.import_graph_def(od_graph_def, name='') Âä†ËΩΩÊ†áÁ≠æÔºö 1234# Loading label maplabel_map = label_map_util.load_labelmap(PATH_TO_LABELS)categories = label_map_util.convert_label_map_to_categories(label_map, max_num_classes=NUM_CLASSES, use_display_name=True)category_index = label_map_util.create_category_index(categories) ËØªÂÖ•ÂõæÁâáÔºö 123456789# For the sake of simplicity we will use only 2 images:# image1.jpg# image2.jpg# If you want to test the code with your images, just add path to the images to the TEST_IMAGE_PATHS.PATH_TO_TEST_IMAGES_DIR = 'test_images'TEST_IMAGE_PATHS = [ os.path.join(PATH_TO_TEST_IMAGES_DIR, 'image&#123;&#125;.jpg'.format(i)) for i in range(1, 3) ]# Size, in inches, of the output images.IMAGE_SIZE = (12, 8) Ê£ÄÊµãÁ§∫‰æã ÂÆåÊï¥‰ª£Á†ÅÁÇπÂáªÊü•ÁúãÂÆòÊñπ‰ª£Á†Å ÂèÇËÄÉÔºö[1]https://pythonprogramming.net/testing-custom-object-detector-tensorflow-object-detection-api-tutorial/?completed=/training-custom-objects-tensorflow-object-detection-api-tutorial/[2]https://github.com/tensorflow/models/blob/master/research/object_detection/object_detection_tutorial.ipynb]]></content>
      <categories>
        <category>Deep Learning</category>
      </categories>
      <tags>
        <tag>Tensorflow</tag>
        <tag>Object detection</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python--Âà§Êñ≠Â≠óÁ¨¶‰∏≤ÊòØÂê¶ÂåÖÂê´Â≠êÂ≠óÁ¨¶‰∏≤]]></title>
    <url>%2Farticle%2FPythonFindStrings.html</url>
    <content type="text"><![CDATA[‰∏∫Êñπ‰æø‰ª•ÂêéÂºÄÂèëÊü•ÈòÖÔºåÁâπËÆ∞ÂΩïÊ≠§Áõ∏ÂÖ≥‰ª£Á†Å„ÄÇÊâÄË¶ÅÂÆûÁé∞ÁöÑÂäüËÉΩÔºö Âà§Êñ≠Â≠óÁ¨¶‰∏≤ÊòØÂê¶ÂåÖÂê´Â≠êÂ≠óÁ¨¶‰∏≤ ÊñπÊ≥ï‰∏ÄÔºöIn12345string = 'helloworld'if 'world' in string: print('Exist')else: print('Not exist') ÊñπÊ≥ï‰∫åÔºöFind12345string = 'helloworld'if string.find(‚Äôworld‚Äò) &gt; -1: print('Exist')else: print('Not exist') ÊñπÊ≥ï‰∏âÔºöIndex1234if string.index(‚Äôworld‚Äò) &gt; -1: #Âõ†‰∏∫-1ÁöÑÊÑèÊÄù‰ª£Ë°®Ê≤°ÊúâÊâæÂà∞Â≠óÁ¨¶ÔºåÊâÄ‰ª•Âà§Êñ≠&gt;-1Â∞±‰ª£Ë°®ËÉΩÊâæÂà∞ print('Exist')else: print('Not exist') ‰ΩÜÊòØÔºåÂ¶ÇÊûúÊ≤°ÊâæÂà∞ÔºåÁ®ãÂ∫è‰ºöÊäõÂá∫ÂºÇÂ∏∏]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python--‰øùÂ≠òÂõæÁâáÂà∞Êñá‰ª∂Â§π]]></title>
    <url>%2Farticle%2FPythonSaveImage.html</url>
    <content type="text"><![CDATA[‰∏∫Êñπ‰æø‰ª•ÂêéÂºÄÂèëÊü•ÈòÖÔºåÁâπËÆ∞ÂΩïÊ≠§Áõ∏ÂÖ≥‰ª£Á†Å„ÄÇÊâÄË¶ÅÂÆûÁé∞ÁöÑÂäüËÉΩÔºö Â∞ÜÂõæÁâá‰øùÂ≠ò‰∫éÊåáÂÆöÊñá‰ª∂Â§π‰∏≠ÔºåÂèØÊåáÂÆöÂõæÁâáÂêéÁºÄ ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö12345678910111213def save_img(img, file_name,file_path='img'): # Save image to the file_path '\img' if not os.path.exists(file_path): print (file_path,'not exist') os.makedirs(file_path) # Image suffix # file_suffix = 'jpg' # Join image name # È°πÁõÆ‰∏≠ÁªôÂÆöÁöÑÂõæÁâáÂêç‰∏∫‚Äúhiking_125.jpg_0‚ÄùÔºåÈúÄÂëΩÂêçÂàáÁâá filename = '&#123;&#125;&#123;&#125;&#123;&#125;'.format(file_path, os.sep, file_name[:-2]) # filename = file_name[:-2] # print(filename) plt.imsave(filename, img) ÈôÑpltÂ∏∏Áî®‰øùÂ≠òÂõæÁâáÁöÑÁõ∏Â∫î‰ª£Á†ÅÔºöplt.savefig(‚Äòfile_name‚Äô) ‰øùÂ≠òÂ∏¶ÊúâÂùêÊ†áÁöÑÂõæÂÉèplt.imsave(‚Äòfile_name‚Äô, img) ‰øùÂ≠òÂéüÂßãÂõæÂÉè]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[‰∏™‰∫∫‰∏ªÈ°µÂçáÁ∫ß‰πãÂèåÁ∫øÈÉ®ÁΩ≤ + ÂÖ®Á´ôHttps]]></title>
    <url>%2Farticle%2FBlogUpdate.html</url>
    <content type="text"><![CDATA[ÂÖ≥‰∫éHttpsÂçïÁ∫øÈÉ®ÁΩ≤Âú®Github PagesÊó∂ÔºåÁî®ÁöÑÊòØcloudflareÊèê‰æõÁöÑSSLËØÅ‰π¶„ÄÇ ÂèåÁ∫øÈÉ®ÁΩ≤ÔºàGitHub Pages + Coding PagesÔºâÊó∂ÔºåCloudflareÂ∞±‰∏çËÉΩÁî®‰∫ÜÔºå‰ΩÜCoding PagesÊèê‰æõ‰∫ÜÈÄöËøáLet‚Äôs EncryptÁî≥ËØ∑SSLËØÅ‰π¶ËøõËÄåÂèØ‰ª•ÂºÄÂêØÂÖ®Á´ôHttpsÁöÑÊñπÊ≥ï„ÄÇ Coding.netÈÖçÁΩÆÁØáÊ≥®ÂÜåCoding ÂçáÁ∫ßÈì∂Áâå‰ºöÂëò ÂàõÂª∫È°πÁõÆ ÈÖçÁΩÆSSH ÈÖçÁΩÆPages Ê∑ªÂä†CNAMEËÆ∞ÂΩï‰∏∫pages.coding.meÔºåÊ≥®ÊÑèÂ∞ÜGithubÁöÑÁ∫øË∑ØÁ±ªÂûãËÆæÁΩÆ‰∏∫ÂõΩÂ§ñ„ÄÇ Áî≥ËØ∑SSLËØÅ‰π¶ Ê≥®ÊÑèÔºöÂ¶ÇÊûúÊòØGithub+CodingÂèåÁ∫øÈÉ®ÁΩ≤ÔºåÁî≥ËØ∑SSLËØÅ‰π¶ÂâçÈúÄË¶ÅÂÖàÂ∞ÜËß£ÊûêÂà∞github.ioÁöÑCNAMEËÆ∞ÂΩïÊöÇÂÅúÔºÅÔºÅÔºÅ‰∏çÁÑ∂Let‚Äôs Encrypt‰∏ªÊú∫Âú®È™åËØÅÂüüÂêçÊâÄÊúâÊùÉÊó∂‰ºöÂÆö‰ΩçÂà∞Github PagesÁöÑ‰∏ªÊú∫‰∏äÂØºËá¥SSLËØÅ‰π¶Áî≥ËØ∑Â§±Ë¥• Âº∫Âà∂ÂºÄÂêØHttps _configÊñá‰ª∂ÈÖçÁΩÆÁØá12345678# Deployment # ÈùûÂ∏∏ÈáçË¶ÅÁöÑÈÉ®ÁΩ≤ËÆæÁΩÆ## Docs: https://hexo.io/docs/deployment.htmldeploy: type: git repository: # ÂèØÈÄâÊã©ÂêåÊó∂ÈÉ®ÁΩ≤Âà∞ GitHub Âíå coding ÊàñËÄÖÂè™ÈÉ®ÁΩ≤Âà∞ Github github: git@github.com:‰Ω†ÁöÑGitHubÂêç/‰Ω†ÁöÑGitHubÂêç.github.io.git coding: git@git.coding.net:‰Ω†ÁöÑCodingÂêç/‰Ω†ÁöÑCodingÂêç.git branch: master]]></content>
      <categories>
        <category>Notes</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ROSÂêØÂä®Â§ölaunchÊñá‰ª∂ÁöÑÂ∞èÊäÄÂ∑ß]]></title>
    <url>%2Farticle%2FROSLaunchTips.html</url>
    <content type="text"><![CDATA[Âú®ROSÂ∑•Á®ã‰∏≠ÁªèÂ∏∏ÈúÄË¶ÅÂêØÂä®Â•ΩÂá†‰∏™launchÊñá‰ª∂ÔºåÊØîËæÉ‰∏çÊñπ‰æøÔºåÊúâ‰∏ãÈù¢‰∏§ÁßçÊñπÊ≥ïÂèØ‰ª•Êõ¥È´òÊïà‰∫õÔºö ÈáçÂÜô‰∏Ä‰∏™Â§ßÂûãÁöÑlaunchÊñá‰ª∂ÔºåÂ∞ÜÊâÄÊúâÁöÑËäÇÁÇπÁöÑÂêØÂä®ÈÖçÁΩÆ‰ø°ÊÅØÈÉΩÂåÖÂê´ËøõÂéª„ÄÇ ÈÄöËøábashÂÜô‰∏Ä‰∏™xxx.shÊñá‰ª∂ÔºåÂ∞ÜÂëΩ‰ª§Ë°å‰∏ÄËµ∑ÂÜôÂÖ•‰∏Ä‰∏™ËÑöÊú¨„ÄÇ launchÊñá‰ª∂‰∏≠ÂàôÂ¶Ç‰∏ãËøõË°åËÆæÁΩÆÔºöpkgÂØπÂ∫îÊñá‰ª∂ÁöÑÂåÖÂêç„ÄÇ typeÊòØCMakeList.txt‰∏≠ÂØπÂ∫îËØ•Êñá‰ª∂add_executable(pcan_test src/pcan_test)‰∏≠ÂèØÊâßË°åÊñá‰ª∂ÁöÑÂêçÁß∞ÔºåÂú®python‰∏≠ÂàôÊòØÊñá‰ª∂ÂêçÔºåÂõ†‰∏∫PythonÁöÑÂèØÊâßË°åÊñá‰ª∂Â∞±ÊòØÊñá‰ª∂Êú¨Ë∫´ÔºàËß£ÈáäÊÄßËØ≠Ë®ÄÔºåÂêåMatlabÔºâÔºåÊâÄ‰ª•Ëã•Áî®C++ÁºñÁ®ã‰∏çË¶ÅËØØÂÜô‰∏∫Êñá‰ª∂ÂêçÂÖ®Áß∞„ÄÇ nameË°®Á§∫ËäÇÁÇπÂêØÂä®ÂêéÁöÑÂêçÁß∞ÔºåËØ•ÂêçÁß∞‰ºöË¶ÜÁõñros::init‰∏≠ÂàùÂßãÂåñÁöÑÂêçÁß∞„ÄÇ outputÂêéÂèÇÊï∞Ë°®Á§∫‰ªéÂ±èÂπïËæìÂá∫ÊâìÂç∞‰ø°ÊÅØÔºåÂê¶ÂàôÊâìÂç∞‰ø°ÊÅØ‰ºöÂ≠òÂÇ®Âà∞Êüê‰∏™‰∏¥Êó∂Êñá‰ª∂Èáå„ÄÇ 1234567&lt;launch&gt; &lt;node pkg="uav_dl" name="position_control" type="position_control.py" output="screen" /&gt; &lt;node pkg="uav_dl" name="action_control" type="action_control.py" output="screen" /&gt; &lt;node pkg="uav_dl" name="goto_position_server" type="goto_position_server.py" output="screen" /&gt; &lt;node pkg="uav_dl" name="detect_object_server" type="detect_object_server.py" output="screen" /&gt; &lt;node pkg="uav_dl" name="tensorflow_detection" type="tensorflow_detection.py" output="screen" /&gt;&lt;/launch&gt; Ê≥®ÔºöÂè™ÈúÄË¶ÅÂú®src‰∏ãÂª∫Á´ãlaunchÊñá‰ª∂Â§πÔºåÁÑ∂ÂêéÂú®ÂÖ∂‰∏≠ÂàõÂª∫launchÊñá‰ª∂Âç≥ÂèØÔºå‰∏çÈúÄË¶ÅÂÅöÂÖ∂‰ªñÂ∑•‰Ωú„ÄÇ ÂèÇÊï∞ÈáånameÊòØros::param::get()‰∏≠Á¨¨‰∏Ä‰∏™Â≠óÁ¨¶‰∏≤ÂéªÊéâ‚Äú~‚ÄùÂêéÁöÑÂêçÁß∞Ôºålaunch‰ºöÂú®ËøêË°åÊó∂ËøõË°åÊü•ÊâæÂåπÈÖçÔºåtypeÊòØÂèòÈáèÁ±ªÂûãÔºåvalueÊòØÂÖ∑‰ΩìÂÄº„ÄÇ‰ª•‰∏ãlaunchÊñá‰ª∂ÔºàÂåÖÂê´ÁßÅÊúâÂèòÈáèÂíåÂÖ¨ÊúâÂèòÈáèÔºâ„ÄÇ 12345678910111213141516171819202122232425262728293031323334353637&lt;launch&gt; &lt;arg name="fcu_url" default="serial:///dev/ttyACM0:921600" /&gt; &lt;arg name="gcs_url" default="udp://:14556@192.168.150.2:14550" /&gt; &lt;arg name="tgt_system" default="1" /&gt; &lt;arg name="tgt_component" default="50" /&gt; &lt;node name="mavros" pkg="mavros" type="mavros_node" output="screen"&gt; &lt;param name="fcu_url" value="$(arg fcu_url)" /&gt; &lt;param name="gcs_url" value="$(arg gcs_url)" /&gt; &lt;param name="target_system_id" value="$(arg tgt_system)" /&gt; &lt;param name="target_component_id" value="$(arg tgt_component)" /&gt; &lt;rosparam command="load" file="$(find mavros)/launch/px4_blacklist.yaml" /&gt; &lt;!-- enable heartbeat send and reduce timeout --&gt; &lt;param name="conn_heartbeat" value="5.0" /&gt; &lt;param name="conn_timeout" value="5.0" /&gt; &lt;!-- automatically start mavlink on USB --&gt; &lt;param name="startup_px4_usb_quirk" value="true" /&gt; &lt;/node&gt; &lt;node name="camera" pkg="usb_cam" type="usb_cam_node"&gt; &lt;param name="video_device" value="/dev/video0" /&gt; &lt;param name="image_width" value="800" /&gt; &lt;param name="image_height" value="600" /&gt; &lt;param name="pixel_format" value="mjpeg" /&gt; &lt;param name="framerate" value="30" /&gt; &lt;param name="camera_frame_id" value="webcam" /&gt; &lt;/node&gt; &lt;node name="viewer" pkg="image_view" type="image_view"&gt; &lt;remap from="image" to="/camera/image_raw" /&gt; &lt;/node&gt; &lt;/launch&gt; Âú®ubuntu‰∏ãËøõË°åËäÇÁÇπÂêØÂä®È°∫Â∫èÊéßÂà∂ÁöÑÁÆÄÂçïÁ≠ñÁï•Â∞±ÊòØÈÄöËøáshellÂÆûÁé∞Êñ∞Âª∫Êñá‰ª∂ÂêéÂëΩÂêç‰∏∫xxx.sh 123456789#!/bin/bashroslaunch bhand_controller bhand_controller.launch &amp;sleep 5echo "bhand controller starting success!" roslaunch beginner_tutorials bhand_force_control.launch &amp;sleep 0.1waitexit 0 ‰ª£Á†ÅËß£ÈáäÔºöÁ¨¨‰∏ÄË°åË°®Á§∫Áî®bashÊâßË°åÔºåsleepË°®Á§∫ÊºîÁ§∫ÔºåechoÁî®Êù•ËæìÂá∫‰∏ÄÂÆöÂÜÖÂÆπÔºåÊ≥®ÊÑè‰∏çË¶ÅÂøòËÆ∞Âè•Â≠êÂêéÁöÑ‚Äù&amp;‚ÄúÁ¨¶Âè∑„ÄÇÊ≥®ÔºöËã•ROSÁöÑÂÖ≥ÈîÆËØç‰∏çËÉΩÂú®ÁªàÁ´ØËØÜÂà´ÔºåÈúÄÂÖàsource‰∏ãROSÁéØÂ¢É„ÄÇ ËäÇÁÇπÂêØÂä®È°∫Â∫èÊéßÂà∂Á≠ñÁï•Â∞±ÊòØÂ¶ÇÊûúÊüê‰∏™ËäÇÁÇπÂøÖÈ°ªÂÖàÊâßË°åÔºåÂèØ‰ª•ÂçïÁã¨‰∏∫ÂÖ∂ÂÜô‰∏Ä‰∏™launchÊñá‰ª∂ÔºåÁÑ∂ÂêéÈÄöËøáshellÊéßÂà∂ÂÖàË°åÂêØÂä®„ÄÇ ÁºñÂÜô‰øùÂ≠òÂêéÔºåÂú®ÁªàÁ´ØË¶ÅÁªôxxx.shÊâßË°åÊùÉÈôêÔºåsudo chmod a+x xxx.shÔºå‰πãÂêéÂèØÈÄöËøá./xxx.shËøõË°åÂêØÂä®Ôºåxxx‰ª£Ë°®‰ªªÊÑèÂ≠óÁ¨¶„ÄÇÊúâÂÖ≥Ubuntu shellÁöÑÂÖ∂‰ªñÊìç‰ΩúÔºåÂèØ‰ª•Ëá™Ë°åÊü•ËØ¢Áõ∏ÂÖ≥ËµÑÊñô„ÄÇ Debugs1234# Bug:ERROR: cannot launch node of type [ros_tensorflow/imgTalker.py]: can't locate node [imgTalker.py] in package [ros_tensorflow]# Debug: ‰øÆÊîπ‰∏∫ÂèØÊâßË°åsudo chmod +x imgTalker.py]]></content>
      <categories>
        <category>ROS</category>
      </categories>
      <tags>
        <tag>ROS</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[‰ΩøÁî®KreasÂÆûÁé∞ÁªèÂÖ∏CNN]]></title>
    <url>%2Farticle%2FKerasWithCNNNetworks.html</url>
    <content type="text"><![CDATA[KerasÊòØÊê≠Âª∫Ê∑±Â∫¶Á•ûÁªèÁΩëÁªúÂæàÂ•ΩÁî®ÁöÑÂ∑•ÂÖ∑ÔºåÈõÜÊàêÂ∫¶È´òÔºåÂÅöÊ∑±Â∫¶Â≠¶‰π†ÁöÑÂéüÂûãÈùûÂ∏∏Êñπ‰æøÔºåÂèØÈÄâÊã©‰ΩøÁî®TheanoÊàñTensorflow‰Ωú‰∏∫ÂêéÁ´ØÔºåÈùûÂ∏∏ÈÄÇÂêàÂ≠¶‰π†ÂíåÁ†îÁ©∂Ê∑±Â∫¶Â≠¶‰π†„ÄÇ ÂèØ‰ª•Áî® Keras ËøõË°åÂÆûÈ™åÂíåÊµãËØïÔºåÁÑ∂ÂêéËøÅÁßªÂà∞ Caffe 1 „ÄÇ LeNet12345678910111213141516171819202122232425262728293031323334353637#coding=utf-8from keras.models import Sequentialfrom keras.layers import Dense,Flattenfrom keras.layers.convolutional import Conv2D,MaxPooling2Dfrom keras.utils.np_utils import to_categoricalimport cPickleimport gzipimport numpy as npseed = 7np.random.seed(seed) data = gzip.open(r'/media/wmy/document/BigData/kaggle/Digit Recognizer/mnist.pkl.gz')train_set,valid_set,test_set = cPickle.load(data)#train_x is [0,1]train_x = train_set[0].reshape((-1,28,28,1))train_y = to_categorical(train_set[1]) valid_x = valid_set[0].reshape((-1,28,28,1))valid_y = to_categorical(valid_set[1]) test_x = test_set[0].reshape((-1,28,28,1))test_y = to_categorical(test_set[1]) model = Sequential()model.add(Conv2D(32,(5,5),strides=(1,1),input_shape=(28,28,1),padding='valid',activation='relu',kernel_initializer='uniform'))model.add(MaxPooling2D(pool_size=(2,2)))model.add(Conv2D(64,(5,5),strides=(1,1),padding='valid',activation='relu',kernel_initializer='uniform'))model.add(MaxPooling2D(pool_size=(2,2)))model.add(Flatten())model.add(Dense(100,activation='relu'))model.add(Dense(10,activation='softmax'))model.compile(optimizer='sgd',loss='categorical_crossentropy',metrics=['accuracy'])model.summary() model.fit(train_x,train_y,validation_data=(valid_x,valid_y),batch_size=20,epochs=20,verbose=2)#[0.031825309940411217, 0.98979999780654904]print model.evaluate(test_x,test_y,batch_size=20,verbose=2) AlexNet1234567891011121314151617181920212223242526#coding=utf-8from keras.models import Sequentialfrom keras.layers import Dense,Flatten,Dropoutfrom keras.layers.convolutional import Conv2D,MaxPooling2Dfrom keras.utils.np_utils import to_categoricalimport numpy as npseed = 7np.random.seed(seed) model = Sequential()model.add(Conv2D(96,(11,11),strides=(4,4),input_shape=(227,227,3),padding='valid',activation='relu',kernel_initializer='uniform'))model.add(MaxPooling2D(pool_size=(3,3),strides=(2,2)))model.add(Conv2D(256,(5,5),strides=(1,1),padding='same',activation='relu',kernel_initializer='uniform'))model.add(MaxPooling2D(pool_size=(3,3),strides=(2,2)))model.add(Conv2D(384,(3,3),strides=(1,1),padding='same',activation='relu',kernel_initializer='uniform'))model.add(Conv2D(384,(3,3),strides=(1,1),padding='same',activation='relu',kernel_initializer='uniform'))model.add(Conv2D(256,(3,3),strides=(1,1),padding='same',activation='relu',kernel_initializer='uniform'))model.add(MaxPooling2D(pool_size=(3,3),strides=(2,2)))model.add(Flatten())model.add(Dense(4096,activation='relu'))model.add(Dropout(0.5))model.add(Dense(4096,activation='relu'))model.add(Dropout(0.5))model.add(Dense(1000,activation='softmax'))model.compile(loss='categorical_crossentropy',optimizer='sgd',metrics=['accuracy'])model.summary() ZF Net1234567891011121314151617181920212223242526#coding=utf-8from keras.models import Sequentialfrom keras.layers import Dense,Flatten,Dropoutfrom keras.layers.convolutional import Conv2D,MaxPooling2Dfrom keras.utils.np_utils import to_categoricalimport numpy as npseed = 7np.random.seed(seed) model = Sequential()model.add(Conv2D(96,(7,7),strides=(2,2),input_shape=(224,224,3),padding='valid',activation='relu',kernel_initializer='uniform'))model.add(MaxPooling2D(pool_size=(3,3),strides=(2,2)))model.add(Conv2D(256,(5,5),strides=(2,2),padding='same',activation='relu',kernel_initializer='uniform'))model.add(MaxPooling2D(pool_size=(3,3),strides=(2,2)))model.add(Conv2D(384,(3,3),strides=(1,1),padding='same',activation='relu',kernel_initializer='uniform'))model.add(Conv2D(384,(3,3),strides=(1,1),padding='same',activation='relu',kernel_initializer='uniform'))model.add(Conv2D(256,(3,3),strides=(1,1),padding='same',activation='relu',kernel_initializer='uniform'))model.add(MaxPooling2D(pool_size=(3,3),strides=(2,2)))model.add(Flatten())model.add(Dense(4096,activation='relu'))model.add(Dropout(0.5))model.add(Dense(4096,activation='relu'))model.add(Dropout(0.5))model.add(Dense(1000,activation='softmax'))model.compile(loss='categorical_crossentropy',optimizer='sgd',metrics=['accuracy'])model.summary() GoogLeNet123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960#coding=utf-8from keras.models import Modelfrom keras.layers import Input,Dense,Dropout,BatchNormalization,Conv2D,MaxPooling2D,AveragePooling2D,concatenatefrom keras.layers.convolutional import Conv2D,MaxPooling2D,AveragePooling2Dimport numpy as npseed = 7np.random.seed(seed) def Conv2d_BN(x, nb_filter,kernel_size, padding='same',strides=(1,1),name=None): if name is not None: bn_name = name + '_bn' conv_name = name + '_conv' else: bn_name = None conv_name = None x = Conv2D(nb_filter,kernel_size,padding=padding,strides=strides,activation='relu',name=conv_name)(x) x = BatchNormalization(axis=3,name=bn_name)(x) return x def Inception(x,nb_filter): branch1x1 = Conv2d_BN(x,nb_filter,(1,1), padding='same',strides=(1,1),name=None) branch3x3 = Conv2d_BN(x,nb_filter,(1,1), padding='same',strides=(1,1),name=None) branch3x3 = Conv2d_BN(branch3x3,nb_filter,(3,3), padding='same',strides=(1,1),name=None) branch5x5 = Conv2d_BN(x,nb_filter,(1,1), padding='same',strides=(1,1),name=None) branch5x5 = Conv2d_BN(branch5x5,nb_filter,(1,1), padding='same',strides=(1,1),name=None) branchpool = MaxPooling2D(pool_size=(3,3),strides=(1,1),padding='same')(x) branchpool = Conv2d_BN(branchpool,nb_filter,(1,1),padding='same',strides=(1,1),name=None) x = concatenate([branch1x1,branch3x3,branch5x5,branchpool],axis=3) return x inpt = Input(shape=(224,224,3))#padding = 'same'ÔºåÂ°´ÂÖÖ‰∏∫(Ê≠•Èïø-1Ôºâ/2,ËøòÂèØ‰ª•Áî®ZeroPadding2D((3,3))x = Conv2d_BN(inpt,64,(7,7),strides=(2,2),padding='same')x = MaxPooling2D(pool_size=(3,3),strides=(2,2),padding='same')(x)x = Conv2d_BN(x,192,(3,3),strides=(1,1),padding='same')x = MaxPooling2D(pool_size=(3,3),strides=(2,2),padding='same')(x)x = Inception(x,64)#256x = Inception(x,120)#480x = MaxPooling2D(pool_size=(3,3),strides=(2,2),padding='same')(x)x = Inception(x,128)#512x = Inception(x,128)x = Inception(x,128)x = Inception(x,132)#528x = Inception(x,208)#832x = MaxPooling2D(pool_size=(3,3),strides=(2,2),padding='same')(x)x = Inception(x,208)x = Inception(x,256)#1024x = AveragePooling2D(pool_size=(7,7),strides=(7,7),padding='same')(x)x = Dropout(0.4)(x)x = Dense(1000,activation='relu')(x)x = Dense(1000,activation='softmax')(x)model = Model(inpt,x,name='inception')model.compile(loss='categorical_crossentropy',optimizer='sgd',metrics=['accuracy'])model.summary() VGG-131234567891011121314151617181920212223242526272829303132#coding=utf-8from keras.models import Sequentialfrom keras.layers import Dense,Flatten,Dropoutfrom keras.layers.convolutional import Conv2D,MaxPooling2Dimport numpy as npseed = 7np.random.seed(seed) model = Sequential()model.add(Conv2D(64,(3,3),strides=(1,1),input_shape=(224,224,3),padding='same',activation='relu',kernel_initializer='uniform'))model.add(Conv2D(64,(3,3),strides=(1,1),padding='same',activation='relu',kernel_initializer='uniform'))model.add(MaxPooling2D(pool_size=(2,2)))model.add(Conv2D(128,(3,2),strides=(1,1),padding='same',activation='relu',kernel_initializer='uniform'))model.add(Conv2D(128,(3,3),strides=(1,1),padding='same',activation='relu',kernel_initializer='uniform'))model.add(MaxPooling2D(pool_size=(2,2)))model.add(Conv2D(256,(3,3),strides=(1,1),padding='same',activation='relu',kernel_initializer='uniform'))model.add(Conv2D(256,(3,3),strides=(1,1),padding='same',activation='relu',kernel_initializer='uniform'))model.add(MaxPooling2D(pool_size=(2,2)))model.add(Conv2D(512,(3,3),strides=(1,1),padding='same',activation='relu',kernel_initializer='uniform'))model.add(Conv2D(512,(3,3),strides=(1,1),padding='same',activation='relu',kernel_initializer='uniform'))model.add(MaxPooling2D(pool_size=(2,2)))model.add(Conv2D(512,(3,3),strides=(1,1),padding='same',activation='relu',kernel_initializer='uniform'))model.add(Conv2D(512,(3,3),strides=(1,1),padding='same',activation='relu',kernel_initializer='uniform'))model.add(MaxPooling2D(pool_size=(2,2)))model.add(Flatten())model.add(Dense(4096,activation='relu'))model.add(Dropout(0.5))model.add(Dense(4096,activation='relu'))model.add(Dropout(0.5))model.add(Dense(1000,activation='softmax'))model.compile(loss='categorical_crossentropy',optimizer='sgd',metrics=['accuracy'])model.summary() VGG-161234567891011121314151617181920212223242526272829303132333435#coding=utf-8from keras.models import Sequentialfrom keras.layers import Dense,Flatten,Dropoutfrom keras.layers.convolutional import Conv2D,MaxPooling2Dimport numpy as npseed = 7np.random.seed(seed) model = Sequential()model.add(Conv2D(64,(3,3),strides=(1,1),input_shape=(224,224,3),padding='same',activation='relu',kernel_initializer='uniform'))model.add(Conv2D(64,(3,3),strides=(1,1),padding='same',activation='relu',kernel_initializer='uniform'))model.add(MaxPooling2D(pool_size=(2,2)))model.add(Conv2D(128,(3,2),strides=(1,1),padding='same',activation='relu',kernel_initializer='uniform'))model.add(Conv2D(128,(3,3),strides=(1,1),padding='same',activation='relu',kernel_initializer='uniform'))model.add(MaxPooling2D(pool_size=(2,2)))model.add(Conv2D(256,(3,3),strides=(1,1),padding='same',activation='relu',kernel_initializer='uniform'))model.add(Conv2D(256,(3,3),strides=(1,1),padding='same',activation='relu',kernel_initializer='uniform'))model.add(Conv2D(256,(3,3),strides=(1,1),padding='same',activation='relu',kernel_initializer='uniform'))model.add(MaxPooling2D(pool_size=(2,2)))model.add(Conv2D(512,(3,3),strides=(1,1),padding='same',activation='relu',kernel_initializer='uniform'))model.add(Conv2D(512,(3,3),strides=(1,1),padding='same',activation='relu',kernel_initializer='uniform'))model.add(Conv2D(512,(3,3),strides=(1,1),padding='same',activation='relu',kernel_initializer='uniform'))model.add(MaxPooling2D(pool_size=(2,2)))model.add(Conv2D(512,(3,3),strides=(1,1),padding='same',activation='relu',kernel_initializer='uniform'))model.add(Conv2D(512,(3,3),strides=(1,1),padding='same',activation='relu',kernel_initializer='uniform'))model.add(Conv2D(512,(3,3),strides=(1,1),padding='same',activation='relu',kernel_initializer='uniform'))model.add(MaxPooling2D(pool_size=(2,2)))model.add(Flatten())model.add(Dense(4096,activation='relu'))model.add(Dropout(0.5))model.add(Dense(4096,activation='relu'))model.add(Dropout(0.5))model.add(Dense(1000,activation='softmax'))model.compile(loss='categorical_crossentropy',optimizer='sgd',metrics=['accuracy'])model.summary() ResNet-34123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263#coding=utf-8from keras.models import Modelfrom keras.layers import Input,Dense,Dropout,BatchNormalization,Conv2D,MaxPooling2D,AveragePooling2D,concatenate,Activation,ZeroPadding2Dfrom keras.layers import add,Flatten#from keras.layers.convolutional import Conv2D,MaxPooling2D,AveragePooling2Dimport numpy as npseed = 7np.random.seed(seed) def Conv2d_BN(x, nb_filter,kernel_size, strides=(1,1), padding='same',name=None): if name is not None: bn_name = name + '_bn' conv_name = name + '_conv' else: bn_name = None conv_name = None x = Conv2D(nb_filter,kernel_size,padding=padding,strides=strides,activation='relu',name=conv_name)(x) x = BatchNormalization(axis=3,name=bn_name)(x) return x def Conv_Block(inpt,nb_filter,kernel_size,strides=(1,1), with_conv_shortcut=False): x = Conv2d_BN(inpt,nb_filter=nb_filter,kernel_size=kernel_size,strides=strides,padding='same') x = Conv2d_BN(x, nb_filter=nb_filter, kernel_size=kernel_size,padding='same') if with_conv_shortcut: shortcut = Conv2d_BN(inpt,nb_filter=nb_filter,strides=strides,kernel_size=kernel_size) x = add([x,shortcut]) return x else: x = add([x,inpt]) return x inpt = Input(shape=(224,224,3))x = ZeroPadding2D((3,3))(inpt)x = Conv2d_BN(x,nb_filter=64,kernel_size=(7,7),strides=(2,2),padding='valid')x = MaxPooling2D(pool_size=(3,3),strides=(2,2),padding='same')(x)#(56,56,64)x = Conv_Block(x,nb_filter=64,kernel_size=(3,3))x = Conv_Block(x,nb_filter=64,kernel_size=(3,3))x = Conv_Block(x,nb_filter=64,kernel_size=(3,3))#(28,28,128)x = Conv_Block(x,nb_filter=128,kernel_size=(3,3),strides=(2,2),with_conv_shortcut=True)x = Conv_Block(x,nb_filter=128,kernel_size=(3,3))x = Conv_Block(x,nb_filter=128,kernel_size=(3,3))x = Conv_Block(x,nb_filter=128,kernel_size=(3,3))#(14,14,256)x = Conv_Block(x,nb_filter=256,kernel_size=(3,3),strides=(2,2),with_conv_shortcut=True)x = Conv_Block(x,nb_filter=256,kernel_size=(3,3))x = Conv_Block(x,nb_filter=256,kernel_size=(3,3))x = Conv_Block(x,nb_filter=256,kernel_size=(3,3))x = Conv_Block(x,nb_filter=256,kernel_size=(3,3))x = Conv_Block(x,nb_filter=256,kernel_size=(3,3))#(7,7,512)x = Conv_Block(x,nb_filter=512,kernel_size=(3,3),strides=(2,2),with_conv_shortcut=True)x = Conv_Block(x,nb_filter=512,kernel_size=(3,3))x = Conv_Block(x,nb_filter=512,kernel_size=(3,3))x = AveragePooling2D(pool_size=(7,7))(x)x = Flatten()(x)x = Dense(1000,activation='softmax')(x) model = Model(inputs=inpt,outputs=x)model.compile(loss='categorical_crossentropy',optimizer='sgd',metrics=['accuracy'])model.summary() ResNet-50123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566#coding=utf-8from keras.models import Modelfrom keras.layers import Input,Dense,BatchNormalization,Conv2D,MaxPooling2D,AveragePooling2D,ZeroPadding2Dfrom keras.layers import add,Flatten#from keras.layers.convolutional import Conv2D,MaxPooling2D,AveragePooling2Dfrom keras.optimizers import SGDimport numpy as npseed = 7np.random.seed(seed) def Conv2d_BN(x, nb_filter,kernel_size, strides=(1,1), padding='same',name=None): if name is not None: bn_name = name + '_bn' conv_name = name + '_conv' else: bn_name = None conv_name = None x = Conv2D(nb_filter,kernel_size,padding=padding,strides=strides,activation='relu',name=conv_name)(x) x = BatchNormalization(axis=3,name=bn_name)(x) return x def Conv_Block(inpt,nb_filter,kernel_size,strides=(1,1), with_conv_shortcut=False): x = Conv2d_BN(inpt,nb_filter=nb_filter[0],kernel_size=(1,1),strides=strides,padding='same') x = Conv2d_BN(x, nb_filter=nb_filter[1], kernel_size=(3,3), padding='same') x = Conv2d_BN(x, nb_filter=nb_filter[2], kernel_size=(1,1), padding='same') if with_conv_shortcut: shortcut = Conv2d_BN(inpt,nb_filter=nb_filter[2],strides=strides,kernel_size=kernel_size) x = add([x,shortcut]) return x else: x = add([x,inpt]) return x inpt = Input(shape=(224,224,3))x = ZeroPadding2D((3,3))(inpt)x = Conv2d_BN(x,nb_filter=64,kernel_size=(7,7),strides=(2,2),padding='valid')x = MaxPooling2D(pool_size=(3,3),strides=(2,2),padding='same')(x) x = Conv_Block(x,nb_filter=[64,64,256],kernel_size=(3,3),strides=(1,1),with_conv_shortcut=True)x = Conv_Block(x,nb_filter=[64,64,256],kernel_size=(3,3))x = Conv_Block(x,nb_filter=[64,64,256],kernel_size=(3,3)) x = Conv_Block(x,nb_filter=[128,128,512],kernel_size=(3,3),strides=(2,2),with_conv_shortcut=True)x = Conv_Block(x,nb_filter=[128,128,512],kernel_size=(3,3))x = Conv_Block(x,nb_filter=[128,128,512],kernel_size=(3,3))x = Conv_Block(x,nb_filter=[128,128,512],kernel_size=(3,3)) x = Conv_Block(x,nb_filter=[256,256,1024],kernel_size=(3,3),strides=(2,2),with_conv_shortcut=True)x = Conv_Block(x,nb_filter=[256,256,1024],kernel_size=(3,3))x = Conv_Block(x,nb_filter=[256,256,1024],kernel_size=(3,3))x = Conv_Block(x,nb_filter=[256,256,1024],kernel_size=(3,3))x = Conv_Block(x,nb_filter=[256,256,1024],kernel_size=(3,3))x = Conv_Block(x,nb_filter=[256,256,1024],kernel_size=(3,3)) x = Conv_Block(x,nb_filter=[512,512,2048],kernel_size=(3,3),strides=(2,2),with_conv_shortcut=True)x = Conv_Block(x,nb_filter=[512,512,2048],kernel_size=(3,3))x = Conv_Block(x,nb_filter=[512,512,2048],kernel_size=(3,3))x = AveragePooling2D(pool_size=(7,7))(x)x = Flatten()(x)x = Dense(1000,activation='softmax')(x) model = Model(inputs=inpt,outputs=x)sgd = SGD(decay=0.0001,momentum=0.9)model.compile(loss='categorical_crossentropy',optimizer=sgd,metrics=['accuracy'])model.summary() ÂèÇËÄÉÔºö 1. ÂØπÊØîÊ∑±Â∫¶Â≠¶‰π†ÂçÅÂ§ßÊ°ÜÊû∂ÔºöTensorFlow Âπ∂ÈùûÊúÄÂ•ΩÔºü &#8617; 2. kerasÂÆûÁé∞Â∏∏Áî®Ê∑±Â∫¶Â≠¶‰π†Ê®°ÂûãLeNetÔºåAlexNetÔºåZFNetÔºåVGGNetÔºåGoogleNetÔºåResnet &#8617; Á±ª‰ººÁ®ãÂ∫èÂèØÂèÇËÄÉÔºö AlexNetÁöÑÁêÜËß£ÂèäÂÖ∂KerasÂÆûÁé∞ VGGNetÁöÑÁêÜËß£ÂèäÂÖ∂KerasÂÆûÁé∞ GoogLeNetÁöÑÁêÜËß£ÂèäÂÖ∂KerasÂÆûÁé∞ ResNetÁöÑÁêÜËß£ÂèäÂÖ∂KerasÂÆûÁé∞]]></content>
      <categories>
        <category>Deep Learning</category>
      </categories>
      <tags>
        <tag>Keras</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÁªèÂÖ∏CNNÁΩëÁªúÁªìÊûÑÊ±áÊÄª]]></title>
    <url>%2Farticle%2FCNNArchitecture.html</url>
    <content type="text"><![CDATA[Èâ¥‰∫éÂπ≥Êó∂Êé•Ëß¶ÁöÑÁü•ËØÜ„ÄÅÊ¶ÇÂøµÁ≠âÂ§™Â§öÔºå‰∏Ä‰∫õÁü•ËØÜÁÇπÊó∂Èó¥Èïø‰∫Ü‰πüÂÆπÊòìÂøòËÆ∞ÔºåÂõ†Ê≠§ËøôÈáåÂØπ‰πãÂâçÊâÄ‰∫ÜËß£ÁöÑÂêÑÁßçÂç∑ÁßØÁ•ûÁªèÁΩëÁªúÂÅö‰∏Ä‰∏™ÂΩíÁ∫≥„ÄÇ Â§ßÂêçÈºéÈºéÁöÑLeNet5 ËØûÁîü‰∫é1994Âπ¥ÔºåÊòØÊúÄÊó©ÁöÑÊ∑±Â±ÇÂç∑ÁßØÁ•ûÁªèÁΩëÁªú‰πã‰∏ÄÔºåÂπ∂‰∏îÊé®Âä®‰∫ÜÊ∑±Â∫¶Â≠¶‰π†ÁöÑÂèëÂ±ï„ÄÇ‰ªé1988Âπ¥ÂºÄÂßãÔºåÂú®Â§öÊ¨°ÊàêÂäüÁöÑËø≠‰ª£ÂêéÔºåËøôÈ°πÁî±Yann LeCunÂÆåÊàêÁöÑÂºÄÊãìÊÄßÊàêÊûúË¢´ÂëΩÂêç‰∏∫LeNet5„ÄÇLeCunËÆ§‰∏∫ÔºåÂèØËÆ≠ÁªÉÂèÇÊï∞ÁöÑÂç∑ÁßØÂ±ÇÊòØ‰∏ÄÁßçÁî®Â∞ëÈáèÂèÇÊï∞Âú®ÂõæÂÉèÁöÑÂ§ö‰∏™‰ΩçÁΩÆ‰∏äÊèêÂèñÁõ∏‰ººÁâπÂæÅÁöÑÊúâÊïàÊñπÂºèÔºåËøôÂíåÁõ¥Êé•ÊääÊØè‰∏™ÂÉèÁ¥†‰Ωú‰∏∫Â§öÂ±ÇÁ•ûÁªèÁΩëÁªúÁöÑËæìÂÖ•‰∏çÂêå„ÄÇÂÉèÁ¥†‰∏çÂ∫îËØ•Ë¢´‰ΩøÁî®Âú®ËæìÂÖ•Â±ÇÔºåÂõ†‰∏∫ÂõæÂÉèÂÖ∑ÊúâÂæàÂº∫ÁöÑÁ©∫Èó¥Áõ∏ÂÖ≥ÊÄßÔºåËÄå‰ΩøÁî®ÂõæÂÉè‰∏≠Áã¨Á´ãÁöÑÂÉèÁ¥†Áõ¥Êé•‰Ωú‰∏∫ËæìÂÖ•ÂàôÂà©Áî®‰∏çÂà∞Ëøô‰∫õÁõ∏ÂÖ≥ÊÄß„ÄÇ LeNet - 1998 AlexNet - 2012 ZF-Net - 2013 GoogLeNet - 2014 VGG - 2014 ResNet - 2015 ÊÆãÂ∑ÆÁªìÊûÑÔºö]]></content>
      <categories>
        <category>Deep Learning</category>
      </categories>
      <tags>
        <tag>Deep Learning</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[A Comprehensive Survey on Deep Learning Approaches]]></title>
    <url>%2Farticle%2FSurveyOnDL.html</url>
    <content type="text"><![CDATA[ÂâçÊÆµÊó∂Èó¥Ôºå‰∏Ä‰ΩçÂ§©Â§ßÁöÑÂ∏àÂÖÑÂàÜ‰∫´‰∫ÜËøôÁØáÊñáÁ´†ÔºåÂπ≤Ë¥ßÊª°Êª°ÔºÅ ÊÑüËßâÂçÅÂàÜ‰∏çÈîôÔºåËá™Â∑±‰πüÊåÇÂá∫Êù•ÂàÜ‰∫´‰∏ã„ÄÇ The History Began from AlexNet: A Comprehensive Survey on Deep Learning Approaches M. Z. Alom, T. M. Taha, C. Yakopcic, S. Westberg, M. Hasan, B. C. Van Esesn, A. A. S. Awwal, and V. K. Asari, ‚ÄúThe history began from alexnet: A comprehensive survey on deep learning approaches,‚Äù arXiv preprint arXiv:1803.01164, 2018. ËÆ∫ÊñáÂú∞ÂùÄÔºöhttps://arxiv.org/abs/1803.01164 A. Ê∑±Â∫¶Â≠¶‰π†ÊñπÊ≥ïÁöÑÁ±ªÂûã ÁõëÁù£Â≠¶‰π† ÂçäÁõëÁù£Â≠¶‰π† ÈùûÁõëÁù£Â≠¶‰π† Ê∑±Â∫¶Âº∫ÂåñÂ≠¶‰π†ÔºàDRLÔºâ B. ÁâπÂæÅÂ≠¶‰π†C. Â∫îÁî®Ê∑±Â∫¶Â≠¶‰π†ÁöÑÊó∂Êú∫ÂíåÈ¢ÜÂüüD. Ê∑±Â∫¶Â≠¶‰π†ÁöÑÂâçÊ≤øÂèëÂ±ï ImageNet Êï∞ÊçÆÈõÜ‰∏äÁöÑÂõæÂÉèÂàÜÁ±ª Ëá™Âä®ËØ≠Èü≥ËØÜÂà´ E. ‰∏∫‰ªÄ‰πàË¶Å‰ΩøÁî®Ê∑±Â∫¶Â≠¶‰π† ÈÄöÁî®Â≠¶‰π†ÊñπÊ≥ï È≤ÅÊ£íÊÄß Ê≥õÂåñ ÂèØÊâ©Â±ïÊÄß F. Ê∑±Â∫¶Â≠¶‰π†Èù¢‰∏¥ÁöÑÊåëÊàòÂêéÈù¢ÁöÑÁªìÊûÑÂ¶Ç‰∏ãÔºö Á¨¨‰∫åËäÇËÆ®ËÆ∫ DNN ÁöÑËØ¶ÁªÜË∞ÉÊü•ÔºõÁ¨¨‰∏âËäÇËÆ®ËÆ∫ CNNÔºõÁ¨¨ÂõõËäÇ‰ªãÁªç‰∫Ü‰∏çÂêåÁöÑÂÖàËøõÊäÄÊúØÔºå‰ª•ÊúâÊïàÂú∞ËÆ≠ÁªÉÊ∑±Â∫¶Â≠¶‰π†Ê®°ÂûãÔºõ Á¨¨‰∫îËäÇËÆ®ËÆ∫ RNNÔºõ AE Âíå RBM Âú®Á¨¨ÂÖ≠ËäÇ‰∏≠ËÆ®ËÆ∫Ôºõ GAN ÂèäÂÖ∂Â∫îÁî®Âú®Á¨¨‰∏ÉËäÇËÆ®ËÆ∫ÔºõÂº∫ÂåñÂ≠¶‰π†Âú®Á¨¨ÂÖ´ËäÇ‰∏≠‰ªãÁªçÔºõÁ¨¨‰πùËäÇËß£ÈáäËøÅÁßªÂ≠¶‰π†Ôºõ Á¨¨ÂçÅËäÇ‰ªãÁªç‰∫ÜÊ∑±Â∫¶Â≠¶‰π†ÁöÑÈ´òÊïàÂ∫îÁî®ÊñπÊ≥ïÂíåÁ°¨‰ª∂Ôºõ Á¨¨ÂçÅ‰∏ÄËäÇËÆ®ËÆ∫‰∫ÜÊ∑±Â∫¶Â≠¶‰π†Ê°ÜÊû∂ÂíåÊ†áÂáÜÂºÄÂèëÂ∑•ÂÖ∑ÂåÖÔºàSDKÔºâÔºõ Á¨¨ÂçÅ‰∫åËäÇÁªôÂá∫‰∫Ü‰∏çÂêåÂ∫îÁî®È¢ÜÂüüÁöÑÂü∫ÂáÜÊµãËØïÁªìÊûúÔºõÁ¨¨ÂçÅ‰∏âËäÇ‰∏∫ÁªìËÆ∫„ÄÇ]]></content>
      <categories>
        <category>Deep Learning</category>
      </categories>
      <tags>
        <tag>Deep Learning</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Êú∫Âô®Â≠¶‰π†Â∏∏Áî®ÁÆóÊ≥ïÊÄªÁªì]]></title>
    <url>%2Farticle%2FMachineLearningNote.html</url>
    <content type="text"><![CDATA[Âõ†‰∏∫ÊúÄËøë‰∏ÄÊÆµÊó∂Èó¥ÂáÜÂ§áÊâæÂ∑•‰ΩúÁöÑ‰∫ãÊÉÖÔºåÊâÄ‰ª•ÂØπ‰πãÂâçÊú∫Âô®Â≠¶‰π†ÁöÑÂÜÖÂÆπÂÅö‰∫Ü‰∏Ä‰∏™Ê¢≥ÁêÜ„ÄÇ ÁªìÂêàÈ∫¶Â≠êÂ≠¶Èô¢ÈáåÈù¢Â§ßÁâõÁöÑÊïôÁ®ãÔºåËøôÈáåÂØπÊú∫Âô®Â≠¶‰π†‰∏≠Â∏∏Áî®ÁöÑÁÆóÊ≥ïËøõË°åÂΩíÁ∫≥ÂíåÊÄªÁªì„ÄÇ Êú∫Âô®Â≠¶‰π†ÊÄªÁöÑÂèØ‰ª•ÂàÜ‰∏∫‰ª•‰∏ãÂõõÁ±ªÔºö ÁõëÁù£Â≠¶‰π†ÔºàSupervised LearningÔºâ ÈùûÁõëÁù£Â≠¶‰π†ÔºàUnsupervised LearningÔºâ ÂçäÁõëÁù£Â≠¶‰π†ÔºàSemi-Supervised LearningÔºâ Âº∫ÂåñÂ≠¶‰π†ÔºàReinforcement LearningÔºâ ÁõëÁù£Â≠¶‰π†ÔºàSupervised LearningÔºâ1.ÁõëÁù£Â≠¶‰π†ÔºöÂàÜÁ±ªÔºàClassificationÔºâ ÂÜ≥Á≠ñÊ†ëÔºàDecision TreeÔºâ „Äê‰ª£Á†Å„Äë KNNÔºàK Nearest NeighborÔºâ „Äê‰ª£Á†Å„Äë ÊîØÊåÅÂêëÈáèÊú∫ÔºàSupport Vector MachineÔºâ Á∫øÊÄßÂèØÂå∫ÂàÜ „Äê‰ª£Á†Å„Äë Á∫øÊÄß‰∏çÂèØÂàÜ „Äê‰ª£Á†Å„Äë Á•ûÁªèÁΩëÁªúÔºàNeural NetworkÔºâ „Äê‰ª£Á†Å‰∏Ä„Äë „Äê‰ª£Á†Å‰∫å„Äë Ê≥®ÔºöÁ•ûÁªèÁΩëÁªúÊó¢ÂèØ‰ª•Áî®Êù•ÂÅöÂàÜÁ±ªÔºàclassificationÔºâÈóÆÈ¢òÔºå‰πüÂèØ‰ª•Áî®Êù•Ëß£ÂÜ≥ÂõûÂΩíÔºàregressionÔºâÈóÆÈ¢ò„ÄÇ 2.ÁõëÁù£Â≠¶‰π†ÔºöÂõûÂΩíÔºàRegressionÔºâ Á∫øÊÄßÂõûÂΩí ÁÆÄÂçïÁ∫øÊÄßÂõûÂΩí „Äê‰ª£Á†Å„Äë Â§öÂÖÉÁ∫øÊÄßÂõûÂΩí „Äê‰ª£Á†Å„Äë ÈùûÁ∫øÊÄßÂõûÂΩí „Äê‰ª£Á†Å„Äë ÂõûÂΩí‰∏≠ÁöÑÁõ∏ÂÖ≥Â∫¶ÂíåRÂπ≥ÊñπÂÄº „Äê‰ª£Á†Å„Äë ÈùûÁõëÁù£Â≠¶‰π†ÔºàUnsupervised LearningÔºâ1.ÈùûÁõëÁù£Â≠¶‰π†ÔºöËÅöÁ±ªÔºàClusteringÔºâ Áî®K-meanÁÆóÊ≥ïËÅöÁ±ªÔºàClusteringÔºâ „Äê‰ª£Á†Å„Äë Áî®Hierarchical clusteringÁÆóÊ≥ïËÅöÁ±ª „Äê‰ª£Á†Å„Äë 2.ÈùûÁõëÁù£Â≠¶‰π†ÔºöÈôçÁª¥ÔºàDimensionality ReductionÔºâ PCA ÊµÅÂΩ¢Â≠¶‰π† SIGAIÁÆóÊ≥ïÂú∞Âõæ SK-Learn Exampleshttp://scikit-learn.org/stable/ SK-learn: Choosing the right estimator]]></content>
      <categories>
        <category>Machine Learning</category>
      </categories>
      <tags>
        <tag>Machine Learning</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÊàêÈÉΩÂèÇ‰ºö‰πãËÆ∞]]></title>
    <url>%2Farticle%2FICAIBDJourney.html</url>
    <content type="text"><![CDATA[‰∫é5Êúà26-28Êó•ÂéªÊàêÈÉΩÂèÇÂä†‰∫Ü„Äå2018 International Conference on Artificial Intelligence and Big Data„ÄçÔºåÁßÅËÆ§‰∏∫Êî∂Ëé∑È¢áÂ§öÔºåÁâπËÆ∞ÂΩïÊâÄÊÉ≥ÊâÄÊÑüÔºåÊñπÂ∞ÜÊù•ÂãâÂä±Ëá™Â∑±ÔºåÂõûËøáÂ§¥Êù•ÁúãÁúãÔºåÁªìÊûúÂº∫Ë°åÂÜôÊàê‰∫ÜÊó•ËÆ∞ÔºåÊâãÂä®ÊçÇËÑ∏„ÄÇ 5Êúà26Êó• Âé¶Èó®ÔºåËΩªÂæÆÈõæÈúæ ‰∫é26Êó•Êó©Âíå„ÄåÂê¥‰∫åÁãó„Äç‰ªéÂ≠¶Ê†°‰∏ÄÂêåÂá∫ÂèëÔºåÂéªÊú∫Âú∫ÁöÑË∑Ø‰∏äÂíåÊª¥Êª¥Âè∏Êú∫ÂêπÈÄºÂé¶Èó®ÁöÑÊàø‰ª∑ÔºåÂé¶Èó®ÁöÑÊàø‰ª∑‰ªø‰ΩõÂ¶Ç‰º¶Êï¶ÁöÑÂ§©Ê∞îËà¨ÔºåÊàê‰∫ÜÈôåÁîü‰∫∫Èó¥ÂØíÊöÑÁöÑÂøÖËÅäËØùÈ¢ò„ÄÇÂøôÁ¢å‰∏≠ÔºåËµ∂‰∏ä‰∫ÜÊó©Áè≠È£ûÊú∫„ÄÇ ÊàêÈÉΩÔºåÂ∞èÈõ®ÂàùËøá È£ûÊú∫‰∏ãÈôçÁöÑËøáÁ®ã‰∏≠ÔºåÂ∞èÈõ®ÊªãÊ∂¶ÂêéÁöÑÊàêÈÉΩÊ∏ÖÊô∞ÁöÑÊµÆÁé∞Âú®ÁúºÂâçÔºåÊï¥Â∫ßÂüéÂ∏Ç‰ªø‰ΩõË¢´Ê¥óÊ∂§‰∫Ü‰∏ÄËà¨ÔºåÁßÄËâ≤ÂèØÈ§ê„ÄÇÈöè‰∫∫ÊΩÆÊ∂åÂÖ•‰∫ÜÂú∞ÈìÅ‰∏≠ÔºåÊó¢ÈôåÁîü‰πüÁÜüÊÇâÁöÑÊñπË®ÄÔºåÊâçÊääËá™Â∑±ÊãâËøáÊù•È≠ÇÔºåÊÑèËØÜÂà∞Êù•‰∫ÜÊàêÈÉΩ„ÄÇÂíå„ÄåÂê¥‰∫åÁãó„ÄçÂú®ÊüêÂú∞ÈìÅ‰∏≠ËΩ¨Á´ôÊå•ÊâãÂàÜÈÅìÊâ¨Èï≥„ÄÇ Âõ†Êó©Ëµ∑Ôºå‰∏≠ÂçàÁâπÂú®ÈÖíÂ∫óË°•‰∫Ü‰∏™ËßâÔºåËôΩÁÑ∂Ê≤°Áù°ÁùÄ„ÄÇ2ÁÇπÂ∑¶Âè≥‰æøË°åËá≥‰ºöÂú∫Ê≥®ÂÜåÔºåÈ¢ÜÂèñ‰∫ÜÊùêÊñôÔºåË¢´ÂëäÁü•‰∫Ü‰ºöËÆÆÁõ∏ÂÖ≥ÁªÜËäÇ„ÄÇÂêéÔºåÊ≠£Â•ΩÂú®Âú∞Âõæ‰∏äÁúãÂà∞‰∫Ü‰∏çËøúÂ§ÑÂç≥Êúâ‰∏ÄÊâÄÈ´òÂ∫ô„ÄåÊñáÊÆäÈô¢„ÄçÔºåÁâπÊ≠•Ë°å‰∫éÊ≠§ÔºåË∏±Ê≠•Áõ¥Ëá≥ÂÇçÊôöÔºåÂè§Ëâ≤Âè§È¶ôÔºåÂ∫Ñ‰∏•ËÇÉÁ©ÜÔºåÁúüÊòØ‰∏™Â•ΩÂéªÂ§Ñ„ÄÇ ÂÅöÂú∞ÈìÅÂèÇËßÇ‰∫Ü‰∏ã‰∫∫Ê∞ëÂÖ¨Âõ≠ÔºåË¢´ÊàêÈÉΩÂüéÂå∫ÁªøÊÑèÊâÄÊÑüÊüìÔºåÊï¥‰∏™‰∫∫ÈÉΩ‰∏ÄÁõ¥ÊòØÂ§Ñ‰∫éÂæàËàíÊúçÁöÑÁä∂ÊÄÅ„ÄÇÈ•≠ÁÇπÁâπÂìÅÂ∞ù‰∫Ü‰∏ãËëóÂêçÁöÑÊãÖÊãÖÈù¢Ôºå‰∏çÁ¶ÅÁæéÂë≥ÔºåÈ£ü‰πã‰∏§Á¢ó„ÄÇ ÂêéÂèàÂéªÈôÑËøëÁöÑ„ÄåÂÆΩÁ™ÑÂ∑∑Â≠ê„ÄçÈÄõ‰∫ÜÈÄõÔºåÁã¨Ëá™‰∏Ä‰∫∫ÔºåËá™Â∑±‰πüÊï¥‰∏™Ê¥íËÑ±‰∫ÜËµ∑Êù•ÔºåÁ©øË°óËøáÂ∑∑ÔºåËÆøÂ∫óËøáÂùäÔºåÂ∑¥‰∏çÂæóÊØè‰∏™ËßíËêΩÈÉΩÁúã‰∏™ÈÅçÔºåÁÑ∂ËÄåÂíåË•øÂ°ò„ÄÅÈºìÊµ™Â±øÁ≠âÂπ∂Êó†‰∏§Ê†∑ÔºåÂΩ±ÂìçÊúÄÊ∑±ÂàªÁöÑÂ∞±ÊòØÊúâ‰∏™Âç∞Á´†ÁØÜÂàªÁöÑÂ∏àÂÇÖÔºåË¶Å‰ª∑ÂæàË¥µ„ÄÇ Êôö10Êó∂Â∑¶Âè≥ÔºåËøîÂõû‰ΩèÂ§Ñ„ÄÇ 5Êúà27Êó• ÊàêÈÉΩÔºåÊô¥ 9Êó∂ÊäµËææ‰ºöÂú∫ÔºåÂ§ßÁâõ‰ª¨ÁöÑÈôÜÁª≠Ê±áÊä•ÔºåËá™Â∑±ÈúáÊíº‰∫éÁßëÊäÄÁöÑËøõÊ≠•Ôºå‰º†ÊÑüÂô®ÁΩëÁªúÂú®Â§ßÊï∞ÊçÆÂèä‰∫∫Â∑•Êô∫ËÉΩ‰∏≠ÁöÑÂ∫îÁî®ËÆ©ÊàëÂæàÊòØÊÑüÂÖ¥Ë∂£„ÄÇÁßÅ‰ª•‰∏∫ÔºåÊú™Êù•ÊòØ‰∏áÁâ©‰∫íËÅîÁöÑ‰∏ñÁïåÔºåÂêÑÁ±ª„ÄåÊô∫ËÉΩ„Äç‰º†ÊÑüÂô®ÂøÖÁÑ∂ÊãÖÂΩìËµ∑ÈáçË¶ÅËßíËâ≤„ÄÇ Ê±áÊä•ÂâçÁöÑÁ≠âÂæÖÊÄªÊòØÂÖÖÊª°‰∫ÜÊøÄÂä®ÂíåÁ¥ßÂº†ÔºåÂΩìÁÑ∂ÔºåËá™ÊàëÊÉÖÁª™ÁöÑË∞ÉËäÇËøòÊòØÁ®çÂæÆÊúâÊïàÁöÑ„ÄÇ‰∏ãÂçà4Êó∂ÂêéËá™Â∑±ÁöÑÊ±áÊä•Êó∂Èó¥ÁÇπÔºåÁåõÁùÄ‰∏ÄËÇ°Âä≤‰æø‰Ωú‰∫ÜÊä•ÂëäÔºåÊ¶ÇËø∞‰∫ÜÊãôËßÅÔºå‰∫§Êç¢‰∫ÜÊÑèËßÅÔºåÊï¥‰∏™‰∫∫‰πüÊîæÊùæ‰∫ÜËµ∑Êù•„ÄÇÂØπÊô∫ËÉΩÁöÑÊú™Êù•ÔºåÂÖÖÊª°ÊúüÂæÖ„ÄÇÂè¶Â§ñÔºåÊ∑±ÊÑüÁ®øÂ≠êËøòÊòØË¶ÅÁâ¢Áâ¢ÁÜüËÉåÔºÅ Ëá™Â∑±ÁöÑ‰ºöËÆÆÊó•Á®ãÁªìÊùüÂêéÔºå‰æøÊó©Êó©ÁöÑÊ∫úËµ∞‰∫Ü„ÄÇÂ§ßÊàêÈÉΩÁöÑÁæéÔºåËøòÊòØË¶ÅÂ•ΩÂ•ΩÁöÑËä±Êó∂Èó¥ÂéªÂìÅÂë≥„ÄÇÂêé‰æøÂéª„ÄåÂ§©Â∫úÂπøÂú∫„ÄçÊ∫úËææ‰∫Ü‰∏ãÔºåÊï¥‰∏™ÂπøÂú∫Ë¢´ÁßëÊäÄÈ¶Ü„ÄÅÂõæ‰π¶È¶Ü„ÄÅÂçöÁâ©È¶ÜÁ≠âÂåÖÂõ¥ÔºåÂèØ‰ª•ÁúãÂá∫ÊàêÈÉΩ‰∫∫Ê∞ëÂØπÊñáÂåñ„ÄÅÊïôËÇ≤ÂèäÁßëÊäÄÁöÑÈáçËßÜÁ®ãÂ∫¶‰πãÊ∑±„ÄÇ Âùê‰∫ÜÁ∫¶Ëé´‰∏Ä‰∏™Â∞èÊó∂Ôºå‰∏∫N‰∏™Ê∏∏‰∫∫Êãç‰∫ÜÁÖßÔºå‰æøÊâìÁÆóÂèÇËßÇ‰∏ãÊàêÈÉΩÁöÑÊó∂Â∞ö‰πãÁæéÔºåÊ≠•Ë°åËá≥Êò•ÁÜôË∑Ø„ÄÇ‰∏∫Êñπ‰æøÊ∑±Âàª‰ΩìÈ™åÊàêÈÉΩÁöÑÊó∂Â∞öÔºå‰πüÂè™Â•ΩÁã¨Ë∫´Ê∑±ÂÖ•Ê≠•Ë°åË°óÂéªÊÑüÂèóÔºåÊàêÈÉΩÂ¶πÂ≠êÂèØ‰ª•Áß∞‰πã‰∏∫ÁßÄËâ≤ÂÆú‰∫∫„ÄÇÁâπÂéªIFSÊãúËÆø‰∫Ü‰∏ã„ÄåÁÜäÁå´Áà¨Â¢ô„ÄçÔºåÊÑüÂèπËâ∫ÊúØÁöÑ‰ºüÂ§ßÔºÅ Êôö9Êó∂‰∫éÂ§™Âè§ÈáåËøîÂõû‰ΩèÂ§ÑÔºåÁâπ‰π∞‰∫ÜÁÇπÁìúÂ≠êÔºå‰æõÊôö‰∏äÁúãÁîµÂΩ±Ê∂àÈÅ£Áî®„ÄÇ 5Êúà28Êó• ÊàêÈÉΩÔºåÊô¥ ‰∏ÄËßâÁù°Âà∞Ëá™ÁÑ∂ÈÜíÔºåÊú¨ÊâìÁÆóÂéªÁúÅÂçöÁâ©È¶ÜÂèÇËßÇ‰∏ãÔºåÊó†Â•à‰∫éÂΩìÂ§©Âë®‰∏ÄÔºåÂçöÁâ©È¶ÜÈó≠È¶ÜËÄå‰∏çÂæóÊâìÊ∂à‰∫ÜÊ≠§ËÆ°Âàí„ÄÇÂêé‰æøÂú®Âë®ËæπÁúã‰∫ÜÁúãÔºåÂØÑÂ≠ò‰∫ÜË°åÊùé„ÄÇÂçàÈ§êÂ∞ù‰∫Ü‰∏ãÊúâÂêçÁöÑ„ÄåÂ§´Â¶ªËÇ∫Áâá„ÄçÔºåÂõõÂ∑ùÁöÑËæ£ËøòÊòØ‰∏çÂêå‰∫é‰∏§ÊπòÂú∞Âå∫ÔºåÂÆûÂ±ûÈ∫ªËæ£„ÄÇÊï¥‰∏™Êù•ËØ¥ÔºåÁâ©‰ª∑ËøòÊòØÊØîÂé¶Èó®‰Ωé„ÄÇ ÂçàÈ§êÂêéÂíå„ÄåÂê¥‰∫åÁãó„Äç‰∫éÁÜäÁå´Â§ßÈÅìÂú∞ÈìÅÁ´ôÊ±áÂêàÔºåÊÑèÊâìÁÆóÂèÇËßÇ‰∏ãÊàêÈÉΩÂ§ßÁÜäÁå´ÁπÅËÇ≤Á†îÁ©∂Âü∫Âú∞„ÄÇÂΩìÊó∂ËßÅ„Äå‰∫åÁãó„ÄçÊª°Èù¢Á∫¢ÂÖâÔºåÁîö‰∏çÁü•ÂèëÁîü‰∫Ü‰ªÄ‰πàÔºåÊ∂âÂèäÈöêÁßÅÔºå‰æø‰∏çÊñπ‰æøÊâìÈóÆ„ÄÇ ‰∫å‰∫∫‰πòËΩ¶Ëá≥„ÄåÁÜäÁå´Âü∫Âú∞„ÄçÔºåÂçä‰ª∑Á•®29ÂÖÉÁîöÊòØ‰ºòÊÉ†„ÄÇÂõ≠ÂÜÖÈÄîÂæÑ„ÄåÂ§©ÈπÖÊπñ„ÄçÔºåÈªëÂ§©ÈπÖÊòØÁõ∏ÂΩìÁöÑË†¢ËêåÔºå‰∫∫Ëµ∞Âì™ÔºåÂÖ∂Ê∏∏Âì™Ôºå‰∏çÁü•ÊòØÂõ†‰∏∫Ê∏∏ÂÆ¢ÁªèÂ∏∏ÊäïÈ£üÔºåËøòÊòØÂèóÁÜäÁå´ÂΩ±ÂìçÔºåÂëÜËá≥Â¶ÇÊ≠§„ÄÇ Âê¨„ÄåÂê¥‰∫åÁãó„ÄçËØ¥ÁúãÁÜäÁå´ÂÖ®Âá≠ËøêÊ∞îÔºåÊàëÂºÄÂßã‰∏ç‰ø°„ÄÇÂêéÊ≠•Ëá≥ÂêÑÁÜäÁå´Âõ≠ÔºåË≠¨Â¶Ç„ÄåÊàêÂπ¥Â§ßÁÜäÁå´Âà´Â¢Ö„Äç„ÄÅ„ÄåÂ§ßÁÜäÂπºÁ®öÂõ≠„ÄçÁ≠âÔºåÂëäÁü•Âõ†Â§©Ê∞îÁÇéÁÉ≠ÔºåÁÜäÁå´Ë¢´Êî∂ÂõûÊàøÂÜÖÔºåÊ∑±ÊÑü„ÄåÂê¥‰∫åÁãó„ÄçÊâÄË®ÄÊûÅÊòØ„ÄÇ ËôΩÊúâÂèØÊÉúÔºå‰ΩÜ‰πüÈù¢Áùπ‰∫ÜÂõΩÂÆù‰πãÁúüÂÆπÔºå‰ªçÊÑüÊ¨£ÊÖ∞„ÄÇÂú®Âõ≠Âå∫‰∏ÄÁõ¥Ê∫úËææÂà∞ÂÇçÊôöÔºåÊúÄÁªà‰æù‰æù‰∏çËàçÁöÑÁ¶ªÂºÄ„ÄÇ Âêé‰∏§‰∫∫ÂïÜËÆÆÂéª‰ΩìÈ™å‰∏ãÊàêÈÉΩÁÅ´ÈîÖÔºåÊàêÈÉΩÁÅ´ÈîÖÂìÅÁâåÂæàÂ§öÔºåÂú®„ÄåÂê¥‰∫åÁãó„ÄçÂº∫ÁÉàÊèêËÆÆ‰∏ãÂéª‰∫Ü„ÄåÂ∞èÈæôÂùéÁÅ´ÈîÖÂ∫ó„ÄçÔºåÂè£Âë≥Á°ÆÂÆûÊ≠£ÂÆóÔºå‰∏§‰∫∫ÂêÉ‰∫Ü‰∏™Â§ßÈ•±Ôºå‰πüÊ≠£ÂÑøÂÖ´ÁªèÁöÑ‰ΩìÈ™å‰∫Ü‰∏ãÊàêÈÉΩ‰∫∫ÁöÑÊó•Â∏∏ÁîüÊ¥ª„ÄÇ ÂêÉÂÆåÁÅ´ÈîÖÔºåÊ≠•Ë°åËá≥IFSÔºå‰∏äÈ°∂Â±ÇÁ´ØËØ¶‰∫Ü‰∏ã„ÄåÁÜäÁå´Áà¨Â¢ô„ÄçÁöÑÊ≠£ËÑ∏ÔºåÂØπÂÖ∂ÂøßÈÉÅÁöÑË°®ÊÉÖÂæàÊòØ‰∏çËß£„ÄÇÂõ†Êó∂Èó¥Â§™ÊôöÔºåÂè¶Á¨¨‰∫åÂ§©Ëµ∂Êó©Áè≠È£ûÊú∫ÔºåÈöèËøîÂõû‰ΩèÂ§Ñ„ÄÇ 5Êúà29Êó• ÊàêÈÉΩÔºåÊô¥ ‰∏ÄÊó©ÔºåÈÖíÂ∫óÊ¥æËΩ¶ÈÄÅËá≥Ëà™Á´ôÊ•ºÔºåÊÑüÁÅ´ÈîÖÂêéÂä≤‰ªçÂú®ÔºåËÇ†ËÉÉÂàùÊ¨°Êé•Ëß¶ÊàêÈÉΩÊú¨Âú∞ÁÅ´ÈîÖÔºåËøòÊòØÈúÄË¶ÅÈÄÇÂ∫îÁöÑËøáÁ®ã„ÄÇ„ÄåÂê¥‰∫åÁãó„ÄçÂ£∞Áß∞Â∑ùËà™ÁöÑÂ¶πÂ≠êÂõΩÂÜÖÈ°∂Â∞ñÔºåÊûú‰∏çÂÖ∂ÁÑ∂ÔºåÂè¶È£ûÊú∫È§ê‰πüÂæàÂ§öÊ†∑„ÄÇ Âé¶Èó®ÔºåÁàÜÊôí Âà∞Âé¶Èó®Êó∂ÔºåÂ∑≤ÊòØ‰∏≠ÂçàÔºåÁàÜÊôíÔºåÁõ∏ÊØî‰πã‰∏ãÔºåÊàêÈÉΩÊõ¥‰∏∫ÂÆúÂ±Ö„ÄÇ Ê≠§Ê¨°Ë°åÁ®ãÁªàÁªì„ÄÇ ÈôÑÂõæ]]></content>
      <categories>
        <category>Notes</category>
      </categories>
      <tags>
        <tag>ÊàêÈÉΩ</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[TensorFlow Object detection APIÊïôÁ®ã‰πã‰∫åÔºöËÆ≠ÁªÉËá™Â∑±ÁöÑÊ®°Âûã]]></title>
    <url>%2Farticle%2FTensorFlowObjectDetectionAPITutorial2.html</url>
    <content type="text"><![CDATA[TensorFlow Object detection API ÊïôÁ®ãÁ≥ªÂàóÔºö TensorFlow Object detection API ÊïôÁ®ã‰πã‰∏ÄÔºöObject detection APIÂÆâË£Ö TensorFlow Object detection API ÊïôÁ®ã‰πã‰∫åÔºöËÆ≠ÁªÉËá™Â∑±ÁöÑÊ®°Âûã TensorFlow Object detection API ÊïôÁ®ã‰πã‰∏âÔºöÊµãËØïËá™Â∑±ÁöÑÊ®°Âûã Ëøô‰∏ÄËäÇÔºåÊàë‰ª¨Â∞ÜÂØπTensorFlow‰∏≠ÁöÑËÆ≠ÁªÉËøáÁ®ãÂÅö‰∏Ä‰∏™‰ªãÁªçÔºåËÆ≠ÁªÉÊ®°ÂûãÁöÑÊ≠•È™§ÂèØÂ§ß‰ΩìÂàíÂàÜ‰∏∫‰ª•‰∏ãÂá†Ê≠•Ôºö Êî∂ÈõÜÊï∞ÊçÆÂéªÊî∂ÈõÜËá≥Â∞ë100Âº†ÂåÖÂê´‰Ω†ÈúÄË¶ÅÊ£ÄÊµãÁõÆÊ†áÁöÑÂõæÂÉèÔºåÁêÜÊÉ≥ÁöÑÊÉÖÂÜµÊòØÊï∞ÊçÆË∂äÂ§öË∂äÂ•ΩÔºå‰∏çËøáÂØπ‰∏ã‰∏ÄÊ≠•ÁöÑÊâìÊ†áÁ≠æÂ∏¶Êù•Ê≤âÈáçÁöÑ‰ªªÂä°„ÄÇ Â∞ÜÊï∞ÊçÆÂÆâË£Ö9Ôºö1ÁöÑÊØî‰æãÂàíÂàÜ‰∏∫ËÆ≠ÁªÉÈõÜÂíåÊµãËØïÈõÜÔºåÂπ∂Ê†πÊçÆË¶ÅËÆ≠ÁªÉÁöÑÊï∞ÊçÆÈõÜÔºåÂàõÂª∫.pbtxtÊñá‰ª∂„ÄÇ ÊâìÊ†áÁ≠æ‰ΩøÁî®LabelImgÂØπÊï∞ÊçÆÈõÜÊâìÊ†áÁ≠æÔºåÂèØ‰ª•ÁîüÊàêPascal VOCÊ†ºÂºèÁöÑxmlÊñá‰ª∂„ÄÇ ÂÖ≥‰∫éLabelImgÁöÑÁõ∏ÂÖ≥ÊïôÁ®ãËØ∑ÂèÇËÄÉ‰∏ãÊñπ‰∏§‰∏™ÈìæÊé•Ôºö 1.LabelImg‰ªãÁªç‰∏éÂÆâË£ÖÊïôÁ®ã 2.LabelImg‰ΩøÁî®ÊïôÁ®ã Â∞ÜÊï∞ÊçÆËΩ¨Êç¢‰∏∫TF RecordsÊ†ºÂºè ÂÄüÂä©Raccon_dataset‰∏≠ÁöÑxml_to_csv.pyÂ∞ÜÊï∞ÊçÆÁî±XMLÊ†ºÂºèËΩ¨‰∏∫CSVÊ†ºÂºè„ÄÇ 12345678910111213# ÂÖ∂‰∏≠def main(): image_path = os.path.join(os.getcwd(), 'annotations') xml_df = xml_to_csv(image_path) xml_df.to_csv('raccoon_labels.csv', index=None) print('Successfully converted xml to csv.')# ‰øÆÊîπ‰∏∫Ôºödef main(): for directory in ['train','test']: image_path = os.path.join(os.getcwd(), 'images/&#123;&#125;'.format(directory)) xml_df = xml_to_csv(image_path) xml_df.to_csv('data/&#123;&#125;_labels.csv'.format(directory), index=None) print('Successfully converted xml to csv.') Ê≠§Êó∂ÁõÆÂΩïË≠¨Â¶Ç‰∏ãÊñπÁªìÊûÑÔºö 12345678910111213.‚îî‚îÄ‚îÄ Object-Detection/ ‚îú‚îÄ‚îÄ data/ ‚îÇ ‚îî‚îÄ‚îÄ test_labels.csv | ‚îî‚îÄ‚îÄ train_labels.csv ‚îî‚îÄ‚îÄ images/ | ‚îî‚îÄ‚îÄ test/ | | ‚îî‚îÄ‚îÄ testingimages.jpg | ‚îî‚îÄ‚îÄ train/ | ‚îî‚îÄ‚îÄ trainingimages.jpg | ‚îî‚îÄ‚îÄ yourimages.jpg ‚îî‚îÄ‚îÄ training/ ‚îî‚îÄ‚îÄ xml_to_csv.py ÂÄüÂä©Raccon_dataset‰∏≠ÁöÑgenerate_tfrecord.pyÂ∞ÜÊï∞ÊçÆÁî±CSVÊ†ºÂºèËΩ¨‰∏∫TF RecordsÊ†ºÂºè„ÄÇ Ê≥®ÊÑèÔºögenerate_tfrecord.pyÁöÑTodoÈÉ®ÂàÜÈúÄË¶Å‰∏é‰Ω†ÁöÑ.pbtxtÊñá‰ª∂ÂÜÖÁöÑÂÜÖÂÆπ‰∏ÄËá¥ 1234567# TO-DO replace this with label mapdef class_text_to_int(row_label): if row_label == 'macncheese': return 1 else: None# Ê≠§Â§ÑÂè™Êúâ‰∏ÄÁ±ª ÊâßË°åÔºö 123# Ë≠¨Â¶Çpython generate_tfrecord.py --csv_input=data/train_labels.csv --output_path=data/train.recordpython3 generate_tfrecord.py --csv_input=data/test_labels.csv --output_path=data/test.record Âè¶Â§ñÂú®models/research/object_detection/dataset_toolsÁõÆÂΩï‰∏≠ÔºåÂÆòÊñπÊèê‰æõ‰∫Ü‰∏Ä‰∫õÊï∞ÊçÆËΩ¨Êç¢Â∑•ÂÖ∑„ÄÇ ÈÖçÁΩÆÊ®°ÂûãÂèÇÊï∞Tensorflow Object Detection API‰∏≠Ê®°ÂûãÂèÇÊï∞„ÄÅËÆ≠ÁªÉÂèÇÊï∞„ÄÅËØÑ‰º∞ÂèÇÊï∞ÈÉΩÊòØÂú®‰∏Ä‰∏™configÊñá‰ª∂‰∏≠ÈÖçÁΩÆ„ÄÇ Âú®ÈÖçÁΩÆÊ®°ÂûãÂèÇÊï∞ÁöÑÊó∂ÂÄôÔºåÈÄöÂ∏∏Êúâ‰∏§ÁßçÊñπÂºèÔºå‰∏ÄÊòØ‰ΩøÁî®È¢ÑËÆ≠ÁªÉÁöÑÊ®°ÂûãÔºåÈÄöËøáËøÅÁßªÂ≠¶‰π†(Transfer learning )Êù•Â≠¶‰π†‰∏Ä‰∏™Êñ∞ÁõÆÊ†á(Object)ÔºåËøôÁßçËÆ≠ÁªÉÊñπÂºèÂèØ‰ª•Â§ßÂπÖÁº©ÂáèËÆ≠ÁªÉÁöÑÊó∂Èó¥Ôºå‰ΩøÁî®Â∞ëÈáèÁöÑÊï∞ÊçÆÂ∞±ÂèØ‰ª•ËææÂà∞ËæÉÂ•ΩÁöÑÊïàÊûú„ÄÇÂè¶Â§ñ‰∏ÄÁßçÊòØ‰ªéÂ§¥ÂºÄÂßãËÆ≠ÁªÉÔºåend-to-end„ÄÇ Âú®models/research/object_detection/samples/configs/ÁöÑË∑ØÂæÑ‰∏ãÔºåÂÆòÊñπÊèê‰æõ‰∫Ü‰∏Ä‰∫õobject_detectionÈÖçÁΩÆÊñá‰ª∂ÁöÑÁªìÊûÑ„ÄÇÂú®.config‰∏≠ÊêúÁ¥¢ÊâÄÊúâÁöÑPATH_TO_BE_CONFIGUREDÔºå‰øÆÊîπ‰∏∫Ëá™Â∑±Êï∞ÊçÆÊâÄÂ≠òÊîæÁöÑË∑ØÂæÑ„ÄÇÂè¶Â§ñËøòÊúâheckpointÁöÑË∑ØÂæÑ„ÄÅÂêçÁß∞Ôºånum_classesÁöÑÊï∞ÁõÆÔºålabel_map_pathÁöÑË∑ØÂæÑÁ≠âÔºåÊåâÈúÄ‰øÆÊîπ„ÄÇ ËÆ≠ÁªÉÂú®tensorflow/models/research/Ë∑ØÂæÑ‰∏ãÔºåÊâßË°åÔºö 1234567# From tensorflow/models/research/python object_detection/model_main.py --pipeline_config_path=$&#123;YOUR_DIRECTORY&#125;\object_detection\samples\configs\XXXXXXX.config --model_dir=$&#123;YOUR_DIRECTORY&#125;\object_detection\data --num_train_steps=50000 --num_eval_steps=2000 --alsologtostderr ÂÖ∂‰∏≠Ôºö--pipeline_config_path,--model_dir,--num_train_stepsÁ≠âÊåâÈúÄ‰øÆÊîπ„ÄÇ ‰ΩøÁî®TensorboardÂØπËøáÁ®ãËøõË°åÁõëËßÜ 1tensorboard --logdir=$&#123;YOUR_DIRECTORY&#125;/model_dir Âú®ÊµèËßàÂô®‰∏≠ËæìÂÖ•127.0.0.1:6006ËßÇÂØüËÆ≠ÁªÉÁöÑËøáÁ®ã„ÄÇ ÂèÇËÄÉÊñáÁåÆÔºö [1]https://pythonprogramming.net/custom-objects-tracking-tensorflow-object-detection-api-tutorial/[2]https://pythonprogramming.net/creating-tfrecord-files-tensorflow-object-detection-api-tutorial/[3]https://pythonprogramming.net/training-custom-objects-tensorflow-object-detection-api-tutorial/]]></content>
      <categories>
        <category>Deep Learning</category>
      </categories>
      <tags>
        <tag>Tensorflow</tag>
        <tag>Object detection</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[TensorFlow Object detection APIÊïôÁ®ã‰πã‰∏ÄÔºöTensorFlowÂèäÂÖ∂Object detection APIÂÆâË£Ö]]></title>
    <url>%2Farticle%2FTensorFlowObjectDetectionAPITutorial1.html</url>
    <content type="text"><![CDATA[‰πãÂâç‰∏ÄÁõ¥Âú®CaffeÂπ≥Âè∞ÂÅöobject detectionÔºåÂêéÈù¢Êü•ÈòÖÁõ∏ÂÖ≥ËµÑÊñôÊó∂ÔºåÁªèÂ∏∏ÁúãÂà∞TensorFlow‰∏ãÁöÑobject detection APIÔºåÊÄÄÁùÄÂ•ΩÂ•áÂøÉ‰∫ÜËß£‰∫Ü‰∏ãÔºåÂèëÁé∞ÊïàÊûúÂæà‰∏çÈîôÔºåÊÄª‰ΩìËÄåË®ÄÊØîCaffe‰∏ãË¶ÅÁÆÄÂçï‰∫õ„ÄÇ Google niubility ! TensorFlow Object detection API ÊïôÁ®ãÁ≥ªÂàóÔºö TensorFlow Object detection API ÊïôÁ®ã‰πã‰∏ÄÔºöObject detection APIÂÆâË£Ö TensorFlow Object detection API ÊïôÁ®ã‰πã‰∫åÔºöËÆ≠ÁªÉËá™Â∑±ÁöÑÊ®°Âûã TensorFlow Object detection API ÊïôÁ®ã‰πã‰∏âÔºöÊµãËØïËá™Â∑±ÁöÑÊ®°Âûã ÂÆâË£ÖTensorFlow12345678910111213141516# ÂÆâË£ÖTensorFlowpip install tensorflow # For CPUpip install tensorflow-gpu # For GPU# Ëã•ÂÆâË£Ö‰∏çÂêåÁâàÊú¨ÁöÑTensorFlow# pip install tensorflow==1.4.0# pip install tensorflow-gpu==1.4.0# Âç∏ËΩΩTensorFlow# pip uninstall tensorflow# È™åËØÅTensorFlowÊòØÂê¶ÂÆâË£ÖÊàêÂäü# ËæìÂá∫Hello, TensorFlow! Âàô‰ª£Ë°®ÂÆâË£ÖÊàêÂäü„ÄÇ&gt;&gt;&gt; import tensorflow as tf&gt;&gt;&gt; hello = tf.constant('Hello, TensorFlow!')&gt;&gt;&gt; sess = tf.Session()&gt;&gt;&gt; print(sess.run(hello)) ÂÆâË£ÖTensorFlow Object Detection API1234567891011121314151617181920212223242526272829303132333435363738# ÂÆâË£Ö‰æùËµñÈ°πsudo apt-get install protobuf-compiler python-pil python-lxmlsudo pip install jupytersudo pip install matplotlib# ‰∏ãËΩΩTensorFlow Object Detection APImkdir ~/tensorflowcd ~/tensorflowgit clone https://github.com/tensorflow/models.git# ÁºñËØëprotobuf# ËøõÂÖ•object_detectionÊâÄÂú®ÁõÆÂΩï# Ë≠¨Â¶ÇÔºöcd ~/tensorflow/models/research/# ÁºñËØëÊàêÂäüÊó∂,ÁïåÈù¢Êó†‰ªª‰ΩïÊòæÁ§∫protoc object_detection/protos/*.proto --python_out=.# Ê∑ªÂä†ÁéØÂ¢ÉÂèòÈáè# 1.ËøõÂÖ•object_detectionÊâÄÂú®ÁõÆÂΩï# Ë≠¨Â¶ÇÔºöcd ~/tensorflow/models/research/export PYTHONPATH=$PYTHONPATH:`pwd`:`pwd`/slim# ËøôÊù°ÂëΩ‰ª§Âú®Êñ∞ÊâìÂºÄÁöÑÁªàÁ´Ø‰∏≠ÈúÄË¶ÅÈáçÊñ∞ÊâßË°å‰∏ÄÊ¨°Êâç‰ºöÂú®Êñ∞ÁªàÁ´Ø‰∏≠ÁîüÊïà# 2.Ê∑ªÂä†Âà∞~/.bashrcgedit ~/.bashrc# Â∞Ü‰∏ãÈù¢ÂëΩ‰ª§Ê∑ªÂä†Âà∞ÊúÄÂêéÔºåÊ≥®ÊÑè'pwd'Êõ¥Êç¢‰∏∫object_detectionÁöÑË∑ØÂæÑ# export PYTHONPATH=$PYTHONPATH:`pwd`:`pwd`/slim# ËøõÂÖ•object_detectionÊâÄÂú®ÁõÆÂΩïÔºåÂú®ÁªàÁ´ØËæìÂÖ•pwdÊü•ËØ¢# ‰æãÂ¶ÇÊàëÁöÑexport PYTHONPATH=$PYTHONPATH:/root/tensorflow/models/research:/root/tensorflow/models/research/slim# Testpython object_detection/builders/model_builder_test.py# ÊàêÂäüÂàôÊòæÁ§∫Â¶Ç‰∏ãÔºö.......----------------------------------------------------------------------Ran 7 tests in 0.026sOK Debugs123456# Bugillegal instruction (sore dumped)# Debugpip uninstall tensorflowpip install tensorflow==1.5 1234567891011121314# Bugobject_detection/protos/ssd.proto:11:3: Expected "required", "optional", or "repeated".# Debug# ‰ΩøÁî®È´òÁâàÊú¨protoc#download protoc 3.3mkdir protoc_3.3cd protoc_3.3wget https://github.com/google/protobuf/releases/download/v3.3.0/protoc-3.3.0-linux-x86_64.zipchmod 775 protoc-3.3.0-linux-x86_64.zipunzip protoc-3.3.0-linux-x86_64.zip#compile proto filecd /usr/local/lib/python2.7/dist-packages/tensorflow/models/~/protoc_3.3/bin/protoc object_detection/protos/*.proto --python_out=.]]></content>
      <categories>
        <category>Deep Learning</category>
      </categories>
      <tags>
        <tag>Tensorflow</tag>
        <tag>Object detection</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÂÖ≥‰∫éÊú∫Âô®Â≠¶‰π†ÂíåÊ∑±Â∫¶Â≠¶‰π†ÁöÑ‰∏Ä‰∫õÊÄùËÄÉ]]></title>
    <url>%2Farticle%2FNotes01.html</url>
    <content type="text"><![CDATA[Áé∞Âú®ÂêÑÁßçÂ≠¶‰π†ÁÆóÊ≥ïÁÅ´ÁöÑ‰∏ÄÂ°åÁ≥äÊ∂ÇÔºåÂæàÂ§ö‰∫∫ËøõÂÖ•Ëøô‰∏™ÂúàÂ≠êÊêûÁ†îÁ©∂Ôºå‰ΩÜÊúâÂ§öÂ∞ë‰∫∫ÁúüÊ≠£ÊòéÁôΩ‰∏∫‰ªÄ‰πàË¶ÅÁî®Ëøô‰∫õÂ≠¶‰π†ÁÆóÊ≥ïÔºå‰ª•ÂèäÂ¶Ç‰ΩïÂ∞ÜÁÆóÊ≥ïËêΩÂú∞Â∫îÁî®Âà∞Â∑•Á®ã‰∏≠Ôºü ÂΩìÂâçÊú∫Âô®Â≠¶‰π†ÂèäÊ∑±Â∫¶Â≠¶‰π†ËÆ≠ÁªÉÊ®°ÂûãÈÉΩÈúÄË¶ÅÂ§ßÈáèÁöÑÊï∞ÊçÆÊàñÁâπÂæÅÔºåÂÖ¨Âè∏ÊàñÁ†îÁ©∂Êú∫ÊûÑÈÉΩÈúÄË¶ÅËä±Ë¥πÂ§ßÈáè‰∫∫ÂäõÁâ©ÂäõÂéªËé∑ÂèñÊï∞ÊçÆ„ÄÅÊ†áÊ≥®Êï∞ÊçÆÔºåËøòÈúÄË¶ÅÈ´òÊÄßËÉΩÁöÑËÆ°ÁÆóÊú∫ÊàñÊúçÂä°Âô®ÈÄöËøáÊï∞ÊçÆÊù•ËÆ≠ÁªÉÊ®°ÂûãÔºåÊÄªÊâÄËµ∞ÁùÄÁöÑÊòØËä±Ë¥πÊó∂Èó¥ÈïøÔºåÊâÄÈúÄÊàêÊú¨È´òÔºåÊ®°ÂûãËé∑ÂèñÂ§çÊùÇ„ÄÇ‚ÄãÁî±‰∏äËø∞ÊÉÖÂÜµÔºå‰∏™‰∫∫ËÆ§‰∏∫Â∞ÜÊù•Êú∫Âô®Â≠¶‰π†ÂèäÊ∑±Â∫¶Â≠¶‰π†ÊàñÂèØËÉΩÂêëËøô‰πàÂá†‰∏™ÊñπÂêëÂèëÂ±ï„ÄÇ‰∏ÄÔºåÈááÁî®Â§ßÊï∞ÊçÆÊàñGANÂæóÂà∞Â§ßÈáèÊï∞ÊçÆÔºåÈááÁî®ÊüêÁßçÊñπÊ≥ïÔºàÂæÖÊü•ÈòÖÁõ∏ÂÖ≥ËµÑÊñôÔºâÂØπÊï∞ÊçÆËá™Ë°åÊ†áÊ≥®Ôºõ‰∫åÔºåÂ≠¶‰π†ÁÆóÊ≥ïÊàñÂêëÊï∞ÊçÆÈúÄÊ±ÇÂ∞ëÔºåËÆ°ÁÆóÂ§çÊùÇÂ∫¶‰ΩéÔºåÂèØÁßªÊ§çÊÄßÈ´òÔºåÂêëÁßªÂä®Á´ØÊàñÂµåÂÖ•ÂºèËÆæÂ§áÈù†Êã¢„ÄÇÔºàÁî±‰∫é‰∏™‰∫∫Â±ÇÊ¨°ÊØîËæÉ‰ΩéÔºåÁúºÁïåÁõ∏ÂØπËæÉÁ™ÑÔºåÊúõÈòÖËØªÁöÑÂêåÂ≠¶‰∏çË¶ÅÂõ†Ê≠§ÈöèÁ¨îÊâÄÂ±ÄÈôê‰ΩèÊÄùÁª¥ÔºåËøòËØ∑‰∏çÂêùËµêÊïôÔºâ‚Äã‰ªéÊï¥‰∏™Â∑•Á®ãÁ≥ªÁªüÊù•ÁúãÔºåÊú∫Âô®Â≠¶‰π†„ÄÅÊ∑±Â∫¶Â≠¶‰π†Á≠âÂè™ÊòØ‰∏ÄÁßçÂ∑•ÂÖ∑ÔºåÁîöËá≥ÂèØ‰ª•ËØ¥ÊòØ‰∏ÄÁßçÂèØÊõø‰ª£ÁöÑÂ∑•ÂÖ∑ÔºåËøô‰∏™Â∑•ÂÖ∑Êó¢ÂèØ‰ª•Ë¢´ÔºàÊîπËâØÁöÑÔºâ‰º†ÁªüÁÆóÊ≥ïÊâÄÂèñ‰ª£ÔºàÊØïÁ´üÂèëÂ±ïÊó∂Èó¥ÈïøÔºåÂ∫îÁî®ÊàêÁÜüÔºâÔºå‰πüÂèØ‰ª•Ë¢´Êú™Êù•Êõ¥‰∏∫‰ºòÁßÄ„ÄÅÈ´òÊïàÁöÑÁÆóÊ≥ïÊâÄÂèñ‰ª£„ÄÇ‚Äã‰∏™‰∫∫ËÆ§‰∏∫ÂÅöÈ°πÁõÆÔºåÊõ¥Â∫îËØ•‰ªéÂÆèËßÇÁöÑËßíÂ∫¶Êù•ÊÄùËÄÉÊï¥‰∏™Á≥ªÁªüÔºåËÄå‰∏çÂ∫îË¢´Êüê‰∏ÄÁÆóÊ≥ïÊàñÊüê‰∏ÄÊ°ÜÊû∂ÊâÄÂ±ÄÈôê„ÄÇËÄå‰∏îÔºåË¶Å‰πê‰∫éÂéªÊã•Êä±Êñ∞ÊäÄÊúØÔºåÂéªÊé¢Á¥¢Êñ∞ÊñπÂêëÔºåÂéªÂ∞ùËØïÂà´‰∫∫Êú™ÊõæÂÅöËøáÁöÑ‰∫ãÁâ©„ÄÇ‚ÄãËá≥‰∫éÂ≠¶‰π†ÁÆóÊ≥ïÂ∞ÜÊù•‰ºö‰∏ç‰ºöÂÖ∂‰ªñÊõ¥‰ºòÁßÄ„ÄÅÊõ¥È´òÊïà„ÄÅÊõ¥ÂÆûÈôÖÁöÑÁÆóÊ≥ïÂèñ‰ª£ÔºåËøòÊúâÂæÖËßÇÊúõ„ÄÇ‰∏çËøá‰∫∫Â∑•Êô∫ËÉΩ‰ªçÁÑ∂Â∞ÜÊòØÊú™Êù•Á§æ‰ºöÁöÑÂèëÂ±ïÂä®ÂäõÔºå‰ªçÊòØÂêÑÂõΩÊîøÂ∫úÂèä‰ºÅ‰∏öÊâÄÂÖ≥Ê≥®ÁöÑÈáçË¶ÅÊñπÂêëÔºåÂõ†Ê≠§‰πüÂãâÂä±Ëá™Â∑±ËÉΩÂ§üÂú®Ëøô‰∏™ÈÅìË∑Ø‰∏äÁªßÁª≠Ëµ∞‰∏ãÂéªÔºåËΩ¨Âåñ‰∏∫Ëá™Â∑±ÁöÑÊ†∏ÂøÉÁ´û‰∫âÂäõ„ÄÇ]]></content>
      <categories>
        <category>Notes</category>
      </categories>
      <tags>
        <tag>AI</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ChromeÂ∏∏Áî®Âø´Êç∑ÈîÆ]]></title>
    <url>%2Farticle%2FChromeHotKey.html</url>
    <content type="text"><![CDATA[‰∏ä‰∏ÄÁØáË∂äÊâØË∂äËøúÔºåÊú¨ÊÉ≥ÂÅö‰∏Ä‰∏™Âø´Êç∑ÈîÆÂΩíÁ∫≥ÁöÑÊó•ÂøóÔºåÊñπ‰æø‰ª•ÂêéÂøòËÆ∞ÁöÑÊó∂ÂÄôÊü•ÈòÖ„ÄÇ Ê≤°ÊÉ≥Âà∞ÔºåÁ°¨ÁîüÁîüÂÜôÊàê‰∫Ü‰∏ÄÁØáÂêêÊßΩÊñáÔºåÊñ∞ÂºÄ‰∏ÄÁØáÁâπË¥¥‰∏äÂπ≤Ë¥ß„ÄÇ Mac Âø´Êç∑ÈîÆ ÂäüËÉΩ ‚åò + N ÊâìÂºÄÊñ∞Á™óÂè£ ‚åò+ T ÊâìÂºÄÊñ∞Ê†áÁ≠æÈ°µ ‚åò+ Shift + N Êó†ÁóïÊ®°Âºè‰∏ãÊâìÂºÄÊñ∞Á™óÂè£ ‚åò+ Èº†Ê†áÂ∑¶Âáª ÈìæÊé•Êñ∞Á™óÂè£ÊâìÂºÄ ‚åò+ R È°µÈù¢Âà∑Êñ∞ ‚åò + W ÂÖ≥Èó≠ÁΩëÈ°µ ‚åò+ Shift + T ÈáçÊñ∞ÊâìÂºÄÊúÄÂêéÂÖ≥Èó≠ÁöÑÊ†áÁ≠æÈ°µ ‚åò + D Â∞ÜÁΩëÈ°µ‰øùÂ≠ò‰∏∫‰π¶Á≠æ ‚åò + Shift + B ÊòæÁ§∫ÊàñÈöêËóè‰π¶Á≠æÊ†è ‚åò + Option + B ÊâìÂºÄ‰π¶Á≠æÁÆ°ÁêÜÂô® Win &amp; Linux Âø´Êç∑ÈîÆ ÂäüËÉΩ Ctrl + N ÊâìÂºÄÊñ∞Á™óÂè£ Ctrl + T ÊâìÂºÄÊñ∞Ê†áÁ≠æÈ°µ Ctrl + Shift + N Êó†ÁóïÊ®°Âºè‰∏ãÊâìÂºÄÊñ∞Á™óÂè£ Ctrl + Èº†Ê†áÂ∑¶Âáª ÈìæÊé•Êñ∞Á™óÂè£ÊâìÂºÄ Ctrl + R È°µÈù¢Âà∑Êñ∞ Ctrl + W ÂÖ≥Èó≠ÁΩëÈ°µ Ctrl + Shift + T ÈáçÊñ∞ÊâìÂºÄÊúÄÂêéÂÖ≥Èó≠ÁöÑÊ†áÁ≠æÈ°µ Ctrl + D Â∞ÜÁΩëÈ°µ‰øùÂ≠ò‰∏∫‰π¶Á≠æ Ctrl + Shift + B ÊòæÁ§∫ÊàñÈöêËóè‰π¶Á≠æÊ†è Ctrl + Shift + O ÊâìÂºÄ‰π¶Á≠æÁÆ°ÁêÜÂô® Êõ¥Â§öÂø´Êç∑ÈîÆÂèÇÁúãÂÆòÊñπ‰ªãÁªçÔºöChrome ÈîÆÁõòÂø´Êç∑ÈîÆ]]></content>
      <categories>
        <category>Tools</category>
      </categories>
      <tags>
        <tag>Chrome</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÈÇ£‰∫õÂπ¥ÊàëÁî®ËøáÁöÑÊêúÁ¥¢ÂºïÊìé]]></title>
    <url>%2Farticle%2FSearchEngines.html</url>
    <content type="text"><![CDATA[Êó©ÂÖàÂú®Mac‰∏ä‰∏ÄÁõ¥Áî®SafariÂíåChromeÔºåÂêéÊù•ËΩ¨WinÂºÄÂßãÁî®UCÂíåFirefox„ÄÇ ‰Ωú‰∏∫‰∏Ä‰∏™ËøΩÊ±ÇËâ∫ÊúØÂíåÈ´òÊïàÁöÑÊ±âÂ≠êÔºå‰ΩøÁî®ÊµèËßàÂô®Âàô‰∏ÄÁõ¥Âú®Ë∑Ø‰∏ä„ÄÇ ÊúÄËøë‰ΩøÁî®UCÔºåÂèëÁé∞ÂÖ∂Ë≤å‰ººÂú®Win10‰∏ãÂêØÁî®‰∫ÜEdgeÂÜÖÊ†∏ÔºåËÄå‰πãÂâçÂÖ∂‰∏ÄÁõ¥ÊòØ‰ΩøÁî®ChromeÂÜÖÊ†∏ÔºåËøôÁßçÊõ¥Êç¢‰∏•ÈáçÂΩ±Âìç‰∫ÜÊàëÁöÑÁΩëÈ°µ‰ΩìÈ™åÔºåËá¥‰ΩøGitHubÊó†ÊïÖÊâì‰∏çÂºÄ„ÄÇ Ëø´‰∏çÂæóÂ∑±ÔºåÂèàËΩ¨Âõû‰∫ÜChromeÔºåÁâπÊ≠§ÂØπChromeÁöÑÈÉ®ÂàÜÂø´Êç∑ÈîÆÂÅö‰∏™ÂΩíÁ∫≥„ÄÇ PS: UCÈÅáÂà∞ÁöÑÈóÆÈ¢òÔºåÁÜüÊÇâÁöÑÂë≥ÈÅìÔºåÁÜüÊÇâÁöÑIEÁïåÈù¢„ÄÇ ÂêéÊù•ÂéªUCÂÆòÊñπËÆ∫ÂùõÁúã‰∫ÜÁúãÔºåÊûúÁúü‚Ä¶ ÂÜôÁùÄÂÜôÁùÄÂ∞±Ë∑ëËøú‰∫ÜÔºåËµ∂Á¥ßÂõûÂ§¥ÊääÂø´Êç∑ÈîÆË¥¥‰∏ä„ÄÇ Âø´Êç∑ÈîÆ‚ÄîË∑≥ËΩ¨ÈìæÊé•]]></content>
      <categories>
        <category>Notes</category>
      </categories>
      <tags>
        <tag>Search Engines</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ROSÁõ∏ÂÖ≥ÁîªÂõæÂ∑•ÂÖ∑]]></title>
    <url>%2Farticle%2FROSPlotTools.html</url>
    <content type="text"><![CDATA[ÈÄöËøáÊü•ÈòÖÂæàÂ§öËµÑÊñôÔºåËøôÈáåÂØπROS‰∏≠ÁöÑÁîªÂõæÂ∑•ÂÖ∑ÔºàÊàñËÄÖÁß∞‰∏∫ÔºöÊó•ÂøóÂàÜÊûêÂ∑•ÂÖ∑Ôºâ‰Ωú‰∏Ä‰∏™ÊÄªÁªì„ÄÇ rxplotÂÆòÊñπ‰ªãÁªçÔºöhttp://wiki.ros.org/rxplot Since Groovy, rxplot becomes DEPRECATED and is succeeded by rqt_plot. ËØ¥ÊòéÁöÑÊòØrxplotË¢´rqt_plotÊõø‰ª£‰∫Ü„ÄÇ rqt_plotÂÆòÊñπ‰ªãÁªçÔºöhttp://wiki.ros.org/rqt_plot rqt_plot provides a GUI plugin visualizing numeric values in a 2D plot using different plotting backends. rqt_plotÊèê‰æõ‰∫Ü‰∏Ä‰∏™GUIÊèí‰ª∂Ôºå‰ΩøÁî®‰∏çÂêåÁöÑÁªòÂõæÂêéÁ´ØÂú®2DÂõæ‰∏≠ÊòæÁ§∫Êï∞ÂÄº„ÄÇ PlotJuggler‰ªãÁªçÔºöhttps://github.com/facontidavide/PlotJuggler PlotJuggler is meant to be a better alternative to rqtplot and rqtbag, providing a more user friendly interface. PlotJugglerÊó®Âú®Êàê‰∏∫rqtplotÂíårqtbagÁöÑÊõ¥Â•ΩÊõø‰ª£ÂìÅÔºåÊèê‰æõÊõ¥ÂèãÂ•ΩÁöÑÁî®Êà∑ÁïåÈù¢„ÄÇ MatlabÂè¶Â§ñ‰∏Ä‰∏™ÊñπÊ≥ïÂ∞±ÊòØÔºåÂÄüÂä©Matlab‰∏≠ËøõË°åÁîªÂõæÔºåËøôÁßçÊñπÂºèÊõ¥ÈÄÇÂêàÊêûÁ†îÁ©∂ÔºåÂÅö‰ªøÁúü„ÄÇ ÂÆòÊñπÁõ∏ÂÖ≥ÔºöWork with rosbag Logfiles, Control LBR Manipulator Motion Through Joint Torque Commands MATLAB¬Æ can read these rosbag files and help with filtering and extracting message data. ÂÖ≥‰∫éÊõ¥Â§ö ROS + Matlab Áõ∏ÂÖ≥ÊïôÁ®ãÔºåÂèÇÁúãÔºöRobotics System Toolbox Examples]]></content>
      <categories>
        <category>ROS</category>
      </categories>
      <tags>
        <tag>ROS</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Âü∫‰∫éROSËøêË°åCaffe-SSD demo„ÄêÈÄöÁî®„Äë]]></title>
    <url>%2Farticle%2FCaffeSSDDemo.html</url>
    <content type="text"><![CDATA[ÊúÄËøë‰ªîÁªÜÁ†îÁ©∂‰∫Ü‰∏ãSSDÁõ∏ÂÖ≥ÁöÑÂá†‰∏™demoÊñá‰ª∂ÔºåÂú®ËøôÈáåÂÅö‰∏Ä‰∏™ÁÆÄË¶ÅÁöÑËÆ∞ÂΩï„ÄÇ Â§ßÁ•ûweiliu89Êèê‰æõÁöÑCaffe/examples/ssd‰∏ãÊèê‰æõ‰∫ÜÂæàÂ§ödemoÁ®ãÂ∫èÔºåÂ∏∏Áî®ÁöÑÊúâ‰ª•‰∏ãËøô‰πàÂá†‰∏™„ÄÇ ÂÖ≥‰∫éÈÖçÁΩÆCaffe-SSDËØ∑ÂèÇÁúãÂÆòÊñπÊñáÊ°£ÊàñÊàë‰πãÂâçÁöÑÁ¨îËÆ∞Ôºå‰∏çËøáÊàë‰πãÂâçÁöÑÊïôÁ®ãÊòØÂü∫‰∫éROSÁöÑ„ÄÇ ‰ΩøÁî®ssd_detect.cppÁîüÊàêÂèØÊâßË°åÁ®ãÂ∫èÔºöÊ≥®ÔºöC++Á®ãÂ∫è‰∏çËá™Âä®ÊòæÁ§∫label ÂØπssd_detect.cppËøõË°åÁºñËØëÔºåÁîüÊàêÂèØÊâßË°å‰∫åËøõÂà∂Êñá‰ª∂Ôºå‰ΩøÁî®ssd_detect.binÊé•Âè£Á®ãÂ∫èÔºàË∑ØÂæÑÔºöcaffe/build/examples/ssd/ÔºâÔºåÊ£ÄÊµãimageÊàñvideoÔºõ 1234567build/examples/ssd/ssd_detect.bin models/VGGNet/VOC0712/SSD_300x300/deploy.prototxt \models/VGGNet/VOC0712/SSD_300x300/VGG_VOC0712_SSD_300x300_iter_120000.caffemodel \examples/videos/test.txt --file_type video \--out_file output.txt \--confidence_threshold 0.4 #Ê£ÄÊµãËßÜÈ¢ëÔºåÈòàÂÄº‰∏∫0.4Âπ∂‰øùÂ≠òÁªìÊûú# ‰∏ÄÂÆöË¶ÅÊ≥®ÊÑè‰∏äËø∞Ë∑ØÂæÑÔºåÊúÄÊòìÂá∫Èîô# Ê≥®ÔºöËã•Âá∫Áé∞ÈîôËØØÔºåËØ∑Â∞ÜÊç¢Ë°åÁ¨¶Âà†Èô§ ‰ΩøÁî®examples/ssd/plot_detections.pyÔºåÂØπssd_detect.cppÁöÑËæìÂá∫Êñá‰ª∂ÔºåÁªòÂà∂Ê£ÄÊµãÁªìÊûú„ÄÇ 123456python examples/ssd/plot_detections.py examples/images/result.txt \/home/catkin_ws/src/roc_caffe/caffe \--labelmap-file data/VOC0712/labelmap_voc.prototxt \--save-dir examples/# ‰∏ÄÂÆöË¶ÅÊ≥®ÊÑè‰∏äËø∞Ë∑ØÂæÑÔºåÊúÄÊòìÂá∫Èîô# Ê≥®ÔºöËã•Âá∫Áé∞ÈîôËØØÔºåËØ∑Â∞ÜÊç¢Ë°åÁ¨¶Âà†Èô§ ‰Ωú‰∏∫Á±ªÊù•Ë∞ÉÁî®Â∞Üssd_detect.cppÊîπÂÜô‰∏∫‰∏Ä‰∏™Â§¥Êñá‰ª∂ÔºàË≠¨Â¶ÇÔºöDetector.hÔºâÔºåÁÑ∂ÂêéËøõË°åË∞ÉÁî®„ÄÇ ‰ΩøÁî®ssd_detect.py12345678# ÂÖàËøõÂÖ•caffe‰∏ªË∑ØÂæÑÔºåË≠¨Â¶ÇÊàëÁöÑË∑ØÂæÑcd ~/catkin_ws/src/ros_caffe/caffe/# Ê£ÄÊµãÂçïÂº†ÂõæÁâápython examples/ssd/score_ssd_pascal.py# Ê£ÄÊµãËßÜÈ¢ëpython examples/ssd/ssd_pascal_video.py # ÈÄöËøáÊëÑÂÉèÂ§¥ÔºåÊ£ÄÊµãÂÆûÊó∂ËßÜÈ¢ëpython examples/ssd/ssd_pascal_webcam.py Debugs1234567# BugImportError:No module named caffe# Debug# Âú®py‰ª£Á†Å‰∏≠Ê∑ªÂä†import sys,oscaffe_root = '/home/cong/catkin_ws/src/ros_caffe/caffe'sys.path.insert(0, caffe_root + 'python')]]></content>
      <categories>
        <category>Deep Learning</category>
      </categories>
      <tags>
        <tag>Caffe</tag>
        <tag>SSD</tag>
        <tag>Demo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Êó†‰∫∫Êú∫Áõ∏ÂÖ≥ÂùêÊ†áÁ≥ªÁöÑËß£ÁÆó]]></title>
    <url>%2Farticle%2FUAVCoordinateSystemSolving.html</url>
    <content type="text"><![CDATA[Enter password to read. Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>UAV</category>
      </categories>
      <tags>
        <tag>UAV</tag>
        <tag>ÂùêÊ†áÁ≥ªÁªìÁÆó</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÁõÆÊ†áË∑üË∏™ÁÆóÊ≥ïÊ±áÊÄª]]></title>
    <url>%2Farticle%2FTargetTrackingAlgorithm.html</url>
    <content type="text"><![CDATA[ÁõÆÊ†áËßÜËßâË∑üË∏™(Visual Object Tracking)ÔºåÂ§ßÂÆ∂ÊØîËæÉÂÖ¨ËÆ§ÂàÜ‰∏∫‰∏§Â§ßÁ±ªÔºöÁîüÊàê(generative)Ê®°ÂûãÊñπÊ≥ïÂíåÂà§Âà´(discriminative)Ê®°ÂûãÊñπÊ≥ïÔºåÁõÆÂâçÊØîËæÉÊµÅË°åÁöÑÊòØÂà§Âà´Á±ªÊñπÊ≥ïÔºå‰πüÂè´Ê£ÄÊµãË∑üË∏™tracking-by-detectionÔºå‰ª•‰∏ãÁÆÄÂçï‰ªãÁªç„ÄÇ ÁîüÊàêÁ±ªÊñπÊ≥ïÂú®ÂΩìÂâçÂ∏ßÂØπÁõÆÊ†áÂå∫ÂüüÂª∫Ê®°Ôºå‰∏ã‰∏ÄÂ∏ßÂØªÊâæ‰∏éÊ®°ÂûãÊúÄÁõ∏‰ººÁöÑÂå∫ÂüüÂ∞±ÊòØÈ¢ÑÊµã‰ΩçÁΩÆÔºåÊØîËæÉËëóÂêçÁöÑÊúâÂç°Â∞îÊõºÊª§Ê≥¢ÔºåÁ≤íÂ≠êÊª§Ê≥¢Ôºåmean-shiftÁ≠â„ÄÇ‰∏æ‰∏™‰æãÂ≠êÔºå‰ªéÂΩìÂâçÂ∏ßÁü•ÈÅì‰∫ÜÁõÆÊ†áÂå∫Âüü80%ÊòØÁ∫¢Ëâ≤Ôºå20%ÊòØÁªøËâ≤ÔºåÁÑ∂ÂêéÂú®‰∏ã‰∏ÄÂ∏ßÔºåÊêúÁ¥¢ÁÆóÊ≥ïÂ∞±ÂÉèÊó†Â§¥ËãçËùáÔºåÂà∞Â§ÑÂéªÊâæÊúÄÁ¨¶ÂêàËøô‰∏™È¢úËâ≤ÊØî‰æãÁöÑÂå∫Âüü„ÄÇ Camshift ÁÆóÊ≥ïÂÖ®Áß∞‰∏∫ Continuiusly Adaptive Mean-SHIFTÔºå‰∏ªË¶ÅÈÄöËøáËßÜÈ¢ëÂõæÂÉè‰∏≠ËøêÂä®ÁõÆÊ†áÁöÑÈ¢úËâ≤ÁâπÂæÅËææÂà∞Ë∑üË∏™ÁõÆÁöÑ„ÄÇÈ¶ñÂÖàÔºåÂà©Áî®Èº†Ê†áÂìçÂ∫îÂáΩÊï∞ÊâãÂä®ÈÄâÊã©Âá∫ÁõÆÊ†áÁâ©‰ΩìÔºåÁÑ∂ÂêéÊèêÂèñÁõÆÊ†áÁâ©‰ΩìÁöÑÈ¢úËâ≤Áõ¥ÊñπÂõæÁâπÂæÅÔºåÂÜçÈÄöËøáÂèçÂêëÊäïÂΩ±Â∞ÜÁõÆÊ†áÈ¢úËâ≤Áõ¥ÊñπÂõæËΩ¨Êç¢‰∏∫È¢úËâ≤Ê¶ÇÁéáÂàÜÂ∏ÉÂõæÔºåÂàùÂßãÂåñ‰∏Ä‰∏™ÊêúÁ¥¢Á™óÂ§ßÂ∞èÂíå‰ΩçÁΩÆÔºåÂπ∂Ê†πÊçÆ‰∏ä‰∏ÄÂ∏ßÂæóÂà∞ÁöÑÁªìÊûúËá™ÈÄÇÂ∫îË∞ÉÊï¥ÊêúÁ¥¢Á™óÂè£ÔºåËøõËÄåÊ±ÇËß£ÁõÆÊ†áÂú®ËßÜÈ¢ëÂõæÂÉè‰∏≠ÁöÑ‰ΩçÁΩÆ„ÄÇ Á≤íÂ≠êÊª§Ê≥¢ÁÆóÊ≥ï‰∏ªË¶ÅÂà©Áî®ÁõÆÊ†áÁâ©‰ΩìÁöÑÈ¢úËâ≤Áõ¥ÊñπÂõæÁâπÂæÅÔºåÈÄöËøáÁ≤íÂ≠êÈ¢Ñ‰º∞„ÄÅÊ†°Ê≠£„ÄÅÈáçÈááÊ†∑Á≠âÊ≠•È™§ÔºåÊúÄÁªàÊèêÈ´òÁõÆÊ†áË∑üË∏™ÁÆóÊ≥ïÁöÑÊäóÂπ≤Êâ∞ËÉΩÂäõÔºåÂπ∂‰øùËØÅÁõÆÊ†áË∑üË∏™ÁöÑÂÆûÊó∂ÊÄß„ÄÇ Á≤íÂ≠êÊª§Ê≥¢ÂèàÁß∞‰∏∫Êù°‰ª∂Ê¶ÇÁéáÂØÜÂ∫¶‰º†Êí≠ÁÆóÊ≥ïÂíåÂ∫èÂàóËíôÁâπÂç°ÁΩóÊñπÊ≥ïÔºå‰ªéÊú¨Ë¥®‰∏äËÆ≤ÔºåÁ≤íÂ≠êÊª§Ê≥¢ÊòØ‰∏ÄÁßçÂü∫‰∫éËíôÁâπÂç°ÁΩó‰ªøÁúüÁöÑÊúÄ‰ºòÂõûÂΩíË¥ùÂè∂ÊñØÊª§Ê≥¢ÁÆóÊ≥ïÔºåÂÆÉÂ∞ÜÁä∂ÊÄÅÂêëÈáèË°®Á§∫‰∏∫‰∏ÄÁªÑÂ∏¶ÊúâÁõ∏Â∫îÊùÉÂÄºÁöÑÈöèÊú∫Ê†∑Êú¨ÔºåÂπ∂ÈÄöËøáËøô‰∫õÊ†∑Êú¨ÂíåÊùÉÂÄºËÆ°ÁÆóÂá∫Áä∂ÊÄÅÁöÑ‰º∞ÂÄº„ÄÇ ÂÖâÊµÅÊåáËøêÂä®ÁöÑÁâ©‰ΩìÁªèËøáÁõ∏Êú∫ÊàêÂÉèÂêéËé∑ÂæóÁöÑÂÉèÁ¥†Âú®ËøêÂä®Êó∂ÁöÑÁû¨Êó∂ÈÄüÂ∫¶ÔºåÂÖâÊµÅÁöÑËÆ°ÁÆóÊòØÈÄöËøáÂõæÂÉèÂ∫èÂàó‰∏≠ÁöÑÂÉèÁ¥†ÁÅ∞Â∫¶Âú®Áõ∏ÈÇªÂ∏ßÈó¥ÁöÑÂèòÂåñÂíåÁõ∏ÂÖ≥ÊÄßÔºåÊù•Á°ÆÂÆöÂêÑÂÉèÁ¥†‰ΩçÁΩÆÁöÑËøêÂä®ÊÉÖÂÜµÔºåÂç≥Á†îÁ©∂ÂõæÂÉèÁÅ∞Â∫¶Âú®Êó∂Èó¥‰∏äÁöÑÂèòÂåñ‰∏éÁ©∫Èó¥‰∏äÁöÑËøêÂä®ÂÖ≥Á≥ª„ÄÇ Âà§Âà´Á±ªÊñπÊ≥ïCV‰∏≠ÁöÑÁªèÂÖ∏Â•óË∑ØÂõæÂÉèÁâπÂæÅ+Êú∫Âô®Â≠¶‰π†Ôºå ÂΩìÂâçÂ∏ß‰ª•ÁõÆÊ†áÂå∫Âüü‰∏∫Ê≠£Ê†∑Êú¨ÔºåËÉåÊôØÂå∫Âüü‰∏∫Ë¥üÊ†∑Êú¨ÔºåÊú∫Âô®Â≠¶‰π†ÊñπÊ≥ïËÆ≠ÁªÉÂàÜÁ±ªÂô®Ôºå‰∏ã‰∏ÄÂ∏ßÁî®ËÆ≠ÁªÉÂ•ΩÁöÑÂàÜÁ±ªÂô®ÊâæÊúÄ‰ºòÂå∫Âüü„ÄÇ‰∏æ‰∏™‰æãÂ≠êÔºåÂú®ËÆ≠ÁªÉÊó∂ÂëäËØâtrackerÁõÆÊ†á80%ÊòØÁ∫¢Ëâ≤Ôºå20%ÊòØÁªøËâ≤ÔºåËøòÂëäËØâÂÆÉËÉåÊôØ‰∏≠ÊúâÊ©òÁ∫¢Ëâ≤ÔºåË¶ÅÊ†ºÂ§ñÊ≥®ÊÑèÂà´ÊêûÈîô‰∫ÜÔºåËøôÊ†∑ÁöÑÂàÜÁ±ªÂô®Áü•ÈÅìÊõ¥Â§ö‰ø°ÊÅØÔºåÊïàÊûú‰πüÁõ∏ÂØπÊõ¥Â•Ω„ÄÇ ÁªèÂÖ∏Âà§Âà´Á±ªÊñπÊ≥ïÊé®ËçêStruckÂíåTLDÔºåÈÉΩËÉΩÂÆûÊó∂ÊÄßËÉΩËøòË°åÔºåStruckÊòØ2012Âπ¥‰πãÂâçÊúÄÂ•ΩÁöÑÊñπÊ≥ïÔºåTLDÊòØÁªèÂÖ∏long-termÁöÑ‰ª£Ë°®ÔºåÊÄùÊÉ≥ÈùûÂ∏∏ÂÄºÂæóÂÄüÈâ¥„ÄÇ tracking-by-detectionÂíåÊ£ÄÊµãÁÆóÊ≥ïÈùûÂ∏∏Áõ∏‰ººÔºåÂ¶ÇÁªèÂÖ∏Ë°å‰∫∫Ê£ÄÊµãÁî®HOG+SVMÔºåStruckÁî®Âà∞‰∫Ühaar+structured output SVMÔºåË∑üË∏™‰∏≠‰∏∫‰∫ÜÂ∞∫Â∫¶Ëá™ÈÄÇÂ∫î‰πüÈúÄË¶ÅÂ§öÂ∞∫Â∫¶ÈÅçÂéÜÊêúÁ¥¢ÔºåÂå∫Âà´‰ªÖÂú®‰∫éË∑üË∏™ÁÆóÊ≥ïÂØπÁâπÂæÅÂíåÂú®Á∫øÊú∫Âô®Â≠¶‰π†ÁöÑÈÄüÂ∫¶Ë¶ÅÊ±ÇÊõ¥È´òÔºåÊ£ÄÊµãËåÉÂõ¥ÂíåÂ∞∫Â∫¶Êõ¥Â∞èËÄåÂ∑≤„ÄÇ Áõ∏ÂÖ≥Êª§Ê≥¢Á±ªÊñπÊ≥ïcorrelation filterÁÆÄÁß∞CFÔºåÊúÄÁªèÂÖ∏ÁöÑÈ´òÈÄüÁõ∏ÂÖ≥Êª§Ê≥¢Á±ªË∑üË∏™ÁÆóÊ≥ïCSK, KCF/DCF, CN„ÄÇ]]></content>
      <categories>
        <category>Computer Vision</category>
      </categories>
      <tags>
        <tag>Computer Vision</tag>
        <tag>Object</tag>
        <tag>Tracking</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo‰∏≠LaTeXÂÖ¨ÂºèÊ∏≤Êüì]]></title>
    <url>%2Farticle%2FHexoWihLaTeX.html</url>
    <content type="text"><![CDATA[Âú® Hexo ‰∏≠ÔºåÊó†Ê≥ïÊòæÁ§∫LaTeXÊï∞Â≠¶ÂÖ¨ÂºèÔºåËøôÂØπ‰∫é‰π¶ÂÜôÂ≠¶ÊúØÂçöÂÆ¢Êù•ËØ¥ÊòØÂæàÂ§ßÁöÑ‰∏ç‰æø„ÄÇ ‰ª•‰∏ã‰æøÊòØÈÄöËøáÂÆâË£ÖÁ¨¨‰∏âÊñπÂ∫ìÊù•Ëß£ÂÜ≥Ëøô‰∏ÄÈóÆÈ¢ò„ÄÇ ÂÆâË£ÖKramed‰ª£Á†ÅHexo ÈªòËÆ§ÁöÑÊ∏≤ÊüìÂºïÊìéÊòØ MarkedÔºå‰ΩÜÊòØ Marked ‰∏çÊîØÊåÅ Mathjax„ÄÇ Kramed ÊòØÂú® Marked ÁöÑÂü∫Á°Ä‰∏äËøõË°å‰øÆÊîπ„ÄÇÊàë‰ª¨Âú®Â∑•Á®ãÁõÆÂΩï‰∏ãÊâßË°å‰ª•‰∏ãÂëΩ‰ª§Êù•ÂÆâË£Ö Kramed. 12npm uninstall hexo-renderer-marked --savenpm install hexo-renderer-kramed --save ÁÑ∂ÂêéÔºåÊõ¥Êîπrenderer.jsÔºàË∑ØÂæÑÔºö/node_modules/hexo-renderer-kramed/lib/renderer.jsÔºâÔºå Êõ¥ÊîπÔºö 12345// Change inline math rulefunction formatText(text) &#123; // Fit kramed's rule: $$ + \1 + $$ return text.replace(/`\$(.*?)\$`/g, '$$$$$1$$$$');&#125; ‰∏∫Ôºö 1234// Change inline math rulefunction formatText(text) &#123; return text;&#125; ÂÅúÊ≠¢‰ΩøÁî® hexo-mathÈ¶ñÂÖàÔºåÂ¶ÇÊûú‰Ω†Â∑≤ÁªèÂÆâË£Ö hexo-math, ËØ∑Âç∏ËΩΩÂÆÉÔºö 1npm uninstall hexo-math --save ÁÑ∂ÂêéÂÆâË£Ö hexo-renderer-mathjax ÂåÖÔºö 1npm install hexo-renderer-mathjax --save Êõ¥Êñ∞ Mathjax ÁöÑ CDN ÈìæÊé•È¶ñÂÖàÔºåÊâìÂºÄmathjax.htmlÔºàË∑ØÂæÑÔºö/node_modules/hexo-renderer-mathjax/mathjax.htmlÔºâ ÁÑ∂ÂêéÔºåÊää&lt;script&gt;Êõ¥Êîπ‰∏∫Ôºö 1&lt;script src="//cdn.bootcss.com/mathjax/2.7.0/MathJax.js?config=TeX-AMS-MML_HTMLorMML"&gt;&lt;/script&gt; Âú®Marked‰∏≠Êõ¥ÊîπÈªòËÆ§ËΩ¨‰πâËßÑÂàôÂõ†‰∏∫ Hexo ÈªòËÆ§ÁöÑËΩ¨‰πâËßÑÂàô‰ºöÂ∞Ü‰∏Ä‰∫õÂ≠óÁ¨¶ËøõË°åËΩ¨‰πâÔºåÊØîÂ¶Ç _ ËΩ¨‰∏∫ &lt;em&gt;, ÊâÄ‰ª•Êàë‰ª¨ÈúÄË¶ÅÂØπÈªòËÆ§ÁöÑËßÑÂàôËøõË°å‰øÆÊîπ.È¶ñÂÖàÔºå ÊâìÂºÄinline.jsÔºàË∑ØÂæÑÔºönode_modules\kramed\lib\rules\inline.jsÔºâ 12# Á¨¨11Ë°åescape: /^\\([\\`*&#123;&#125;\[\]()#$+\-.!_&gt;])/, Êõ¥Êîπ‰∏∫: 1escape: /^\\([`*\[\]()# +\-.!_&gt;])/, Êää 12# Á¨¨20Ë°åem: /^\b_((?:__|[\s\S])+?)_\b|^\*((?:\*\*|[\s\S])+?)\*(?!\*)/, Êõ¥Êîπ‰∏∫: 1em: /^\*((?:\*\*|[\s\S])+?)\*(?!\*)/, ÂºÄÂêØmathjaxÂú®‰∏ªÈ¢ò _config.yml (Ë∑ØÂæÑÔºö/theme/next/_config.yml)‰∏≠ÂºÄÂêØ MathjaxÔºå ÊâæÂà∞ mathjax Â≠óÊÆµ‰øÆÊîπÂ¶Ç‰∏ã‰ª£Á†ÅÔºàfalseÊîπ‰∏∫trueÔºâÔºö 12mathjax: enable: true Âú®ÊñáÁ´†ÁöÑFront-matterÈáåÊâìÂºÄMathjaxÂºÄÂÖ≥1234567---title: Hexo‰∏≠LaTeXÂÖ¨ÂºèÊ∏≤Êüìdate: 2018-03-25 16:10:25tags: [Markdown, LaTeX, Hexo]categories: Hexomathjax: true--- ÊµãËØïLaTeXÊ∫êÁ†ÅÔºö 123456\begin&#123;eqnarray&#125;\nabla\cdot\vec&#123;E&#125; &amp;=&amp; \frac&#123;\rho&#125;&#123;\epsilon_0&#125; \\\nabla\cdot\vec&#123;B&#125; &amp;=&amp; 0 \\\nabla\times\vec&#123;E&#125; &amp;=&amp; -\frac&#123;\partial B&#125;&#123;\partial t&#125; \\\nabla\times\vec&#123;B&#125; &amp;=&amp; \mu_0\left(\vec&#123;J&#125;+\epsilon_0\frac&#123;\partial E&#125;&#123;\partial t&#125; \right)\end&#123;eqnarray&#125; ÊòæÁ§∫ÊïàÊûúÔºåÂ¶Ç‰∏ãÊâÄÁ§∫Ôºö \begin{eqnarray} \nabla\cdot\vec{E} &=& \frac{\rho}{\epsilon_0} \\ \nabla\cdot\vec{B} &=& 0 \\ \nabla\times\vec{E} &=& -\frac{\partial B}{\partial t} \\ \nabla\times\vec{B} &=& \mu_0\left(\vec{J}+\epsilon_0\frac{\partial E}{\partial t} \right) \end{eqnarray}ÂèØ‰ª•Ê≠£Â∏∏ÊòæÁ§∫È∫¶ÂÖãÊñØÈü¶ÊñπÁ®ãÁªÑ„ÄÇ]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Markdown</tag>
        <tag>LaTeX</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[LaTeXÁü©ÈòµË°®Á§∫]]></title>
    <url>%2Farticle%2FLaTeXMatrix.html</url>
    <content type="text"><![CDATA[Ââç‰∏ÄÁØáÊñáÁ´†ÔºåÂØπ LaTeX ‰∏≠Â∏∏Áî®ÁöÑÊï∞Â≠¶Á¨¶Âè∑ÂèäÂÖ¨ÂºèËøõË°å‰∫ÜÊÄªÁªìÔºåÂõ†Á†îÁ©∂‰∏≠Êó∂Â∏∏Êé•Ëß¶Âà∞Áü©ÈòµÔºåË≠¨Â¶ÇÁ©∫Èó¥ÂùêÊ†áÁ≥ªÁöÑËß£ÁÆóÔºåÊàñËÄÖÊó†Á∫øÈÄö‰ø°‰∏≠Â§öÂ§©Á∫øÂèëÂ∞ÑÂíåÊé•Êî∂‰ø°Âè∑ÁöÑËÆ°ÁÆóÔºåÁ≠âÁ≠â„ÄÇÂõ†Ê≠§Êú¨ÁØáÊñáÁ´†ÁâπÂà´ÂØπÂ∏∏Áî®ÁöÑÁü©ÈòµËøõË°å‰∫ÜÊÄªÁªì„ÄÇ ÁÆÄÂçïMatrix‰ΩøÁî®$$\begin{matrix}‚Ä¶\end{matrix}$$Êù•ÁîüÊàêÁü©ÈòµÔºåÂÖ∂‰∏≠... Ë°®Á§∫ÁöÑÊòØLaTeX ÁöÑÁü©ÈòµÂëΩ‰ª§ÔºåÁü©ÈòµÂëΩ‰ª§‰∏≠ÊØè‰∏ÄË°å‰ª• \\ ÁªìÊùüÔºåÁü©ÈòµÁöÑÂÖÉÁ¥†‰πãÈó¥Áî®&amp;Êù•ÂàÜÈöîÂºÄ„ÄÇ ‰æãÂ¶ÇÔºö 12345678$$ \begin&#123;matrix&#125; 1 &amp; 2 &amp; 3 \\ 4 &amp; 5 &amp; 6 \\ 7 &amp; 8 &amp; 9 \end&#123;matrix&#125; \tag&#123;1&#125;$$ Á§∫‰æãÔºö \begin{matrix} 1 & 2 & 3 \\ 4 & 5 & 6 \\ 7 & 8 & 9 \end{matrix} \tag{1}Â∏¶Êã¨Âè∑ÁöÑMatrix1. [‚Ä¶] ÂÆû‰æãÔºö 12345678$$ \begin&#123;bmatrix&#125; 1 &amp; 2 &amp; 3 \\ 4 &amp; 5 &amp; 6 \\ 7 &amp; 8 &amp; 9 \end&#123;bmatrix&#125; \tag&#123;2&#125;$$ Á§∫‰æãÔºö \begin{bmatrix} 1 & 2 & 3 \\ 4 & 5 & 6 \\ 7 & 8 & 9 \end{bmatrix} \tag{2}2. {‚Ä¶} ÂÆû‰æãÔºö 12345678$$ \begin&#123;Bmatrix&#125; 1 &amp; 2 &amp; 3 \\ 4 &amp; 5 &amp; 6 \\ 7 &amp; 8 &amp; 9 \end&#123;Bmatrix&#125; \tag&#123;3&#125;$$ Á§∫‰æãÔºö \begin{Bmatrix} 1 & 2 & 3 \\ 4 & 5 & 6 \\ 7 & 8 & 9 \end{Bmatrix} \tag{3}Â∏¶ÁúÅÁï•Á¨¶Âè∑ÁöÑMatrixÂ¶ÇÊûúÁü©ÈòµÂÖÉÁ¥†Â§™Â§öÔºåÂèØ‰ª•‰ΩøÁî®\cdots ‚ãØ‚ãØ \ddots ‚ã±‚ã± \vdots ‚ãÆ‚ãÆ Á≠âÁúÅÁï•Á¨¶Âè∑Êù•ÂÆö‰πâÁü©Èòµ„ÄÇ ÂÆû‰æãÔºö 123456789$$\begin&#123;bmatrix&#125; 1 &amp; 2 &amp; \cdots &amp; 4 \\ 7 &amp; 6 &amp; \cdots &amp; 5 \\ \vdots &amp; \vdots &amp; \ddots &amp; \vdots \\ 8 &amp; 9 &amp; \cdots &amp; 0 \\\end&#123;bmatrix&#125;\tag&#123;4&#125;$$ Á§∫‰æãÔºö \begin{bmatrix} 1 & 2 & \cdots & 4 \\ 7 & 6 & \cdots & 5 \\ \vdots & \vdots & \ddots & \vdots \\ 8 & 9 & \cdots & 0 \\ \end{bmatrix} \tag{4}Â∏¶ÂèÇÊï∞ÁöÑMatrixÊØîÂ¶ÇÂÜôÂ¢ûÂπøÁü©ÈòµÔºåÂèØËÉΩÈúÄË¶ÅÊúÄÂè≥Ëæπ‰∏ÄÂàóÂçïÁã¨ËÄÉËôë„ÄÇÂèØ‰ª•Áî®arrayÂëΩ‰ª§Êù•Â§ÑÁêÜ„ÄÇ ÂÆû‰æãÔºö 123456789$$ \left[ \begin&#123;array&#125;&#123;cc|c&#125; 1 &amp; 2 &amp; 3 \\ 4 &amp; 5 &amp; 6 \end&#123;array&#125;\right] \tag&#123;5&#125;$$ Á§∫‰æãÔºö \left[ \begin{array}{cc|c} 1 & 2 & 3 \\ 4 & 5 & 6 \end{array} \right] \tag{5}ÂÖ∂‰∏≠\begin{array}{cc|c}‰∏≠ÁöÑcË°®Á§∫Â±Ö‰∏≠ÂØπÈΩêÂÖÉÁ¥†,|Áî®Êù•‰Ωú‰∏∫ÂàÜÂâ≤ÂàóÁöÑÁ¨¶Âè∑„ÄÇ Ë°åÈó¥Áü©ÈòµÂèØ‰ª•‰ΩøÁî®\bigl(\begin{smallmatrix} ... \end{smallmatrix}\bigr)„ÄÇ ÂÆû‰æãÔºö 1Êàë‰ª¨‰ΩøÁî®Áü©Èòµ $\bigl( \begin&#123;smallmatrix&#125; a &amp; b \\ c &amp; d \end&#123;smallmatrix&#125; \bigr)$ ‰Ωú‰∏∫Âõ†Â≠êÁü©ÈòµÔºåÂ∞ÜÂÖ∂... Á§∫‰æãÔºö Êàë‰ª¨‰ΩøÁî®Áü©Èòµ $\bigl( \begin{smallmatrix} a &amp; b \\ c &amp; d \end{smallmatrix} \bigr)$ ‰Ωú‰∏∫Âõ†Â≠êÁü©ÈòµÔºåÂ∞ÜÂÖ∂‚Ä¶]]></content>
      <categories>
        <category>LaTeX</category>
      </categories>
      <tags>
        <tag>Markdown</tag>
        <tag>LaTeX</tag>
        <tag>Áü©Èòµ</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Markdown‰∏≠LaTeXÊï∞Â≠¶Á¨¶Âè∑ÂèäÂÖ¨Âºè]]></title>
    <url>%2Farticle%2FMarkdownWithMath.html</url>
    <content type="text"><![CDATA[ÂâçË®ÄÊï¥ÁêÜÁ¨îËÆ∞ÁöÑÊó∂ÂÄôÁªèÂ∏∏ÊÄßÁöÑËæìÂÖ•ÂÖ¨ÂºèÔºåËÄÉËôëËøáÂú®LyX‰ª•ÂèäLaTeXÈáåÈù¢ÁºñÂÜô‰πãÂêéÊà™ÂõæÊàñËÄÖÂ§çÂà∂ËøáÊù•Ôºå‰ΩÜÊÄªÊÑüËßâÊïàÊûú‰∏çÂ•ΩÂπ∂‰∏îÊØîËæÉË¥πÊó∂ÔºåÁâπÊï¥ÁêÜÁ¨¶ÂêàMarkdown‰∏≠ÁöÑÂÖ¨ÂºèÊ∫êÁ†ÅÔºå‰ª•‰æøÂêéÁª≠Êñπ‰æøÂÅöÁ¨îËÆ∞„ÄÇ Ë°åÈó¥ÂÖ¨ÂºèÔºåÂú®ËæìÂÖ•Êï∞Â≠¶ÂÖ¨ÂºèÁöÑÊó∂ÂÄôÔºåÈúÄË¶ÅÂú®Êï∞Â≠¶ÂÖ¨ÂºèÁöÑÂâçÂêéÂä†ÂÖ•$$Á¨¶Âè∑ÔºåÂ∞ÜÈúÄË¶ÅËæìÂÖ•ÁöÑÂÖ¨ÂºèÂä†ÂÖ•Âà∞$$‰∏é$$‰∏≠Èó¥„ÄÇ Ë°åÂÜÖÂÖ¨ÂºèÔºåÂú®ËæìÂÖ•Êï∞Â≠¶ÂÖ¨ÂºèÁöÑÊó∂ÂÄôÔºåÈúÄË¶ÅÂú®Êï∞Â≠¶ÂÖ¨ÂºèÁöÑÂâçÂêéÂä†ÂÖ•$Á¨¶Âè∑ÔºåÂ∞ÜÈúÄË¶ÅËæìÂÖ•ÁöÑÂÖ¨ÂºèÂä†ÂÖ•Âà∞$‰∏é$‰∏≠Èó¥„ÄÇ Âú®Typora‰∏≠ÔºåËæìÂÖ•$$ÁÑ∂ÂêéÂõûËΩ¶ÔºåÁõ¥Êé•Â∞ÜTeX‰ª£Á†ÅËæìÂÖ•ËøõÂéª„ÄÇ ‰∏ä‰∏ãÊ†á ÂêçÁß∞ Êï∞Â≠¶Ë°®ËææÂºè MarkdownÊ∫êÁ†Å ‰∏äÊ†á $a^b$ a^b ‰∏ãÊ†á $a_b$ a_b Âèå‰∏ãÊ†á $a_{b1}$ a_{b1} ÂàÜÊï∞ Á¨¨‰∏Ä‰∏™{ }ÂÜôÂàÜÂ≠êÔºåÁ¨¨‰∫å‰∏™{ }ÂÜôÂàÜÊØç„ÄÇ ÂêçÁß∞ Êï∞Â≠¶Ë°®ËææÂºè MarkdownÊ∫êÁ†Å ÂàÜÊï∞ $\frac{3+8a}{5b+6}$ \frac{3+8a}{5b+6} Á¥ØÂä† Á¥ØÂä†Âè∑ÁöÑ‰∏äÊ†á‰∏ãÊ†áÁöÑÂâçÂêéÈ°∫Â∫èÂèØ‰ª•‰∫íÊç¢„ÄÇ ÂêçÁß∞ Êï∞Â≠¶Ë°®ËææÂºè MarkdownÊ∫êÁ†Å Ê±ÇÂíåÂè∑ $\sum{3x^n}$ \sum{3x^n} Â∏¶ËåÉÂõ¥Ê±ÇÂíå $\sum_{n=1}^N{3x^n}$ \sum_{n=1}^N{3x^n} Â∏¶Ê±ÇÂíå‰∏ä‰∏ãÊ†á \sum\limits_{n=1}^N{3x^n} \sum\limits_{n=1}^N{3x^n} Á¥Ø‰πò Á¥ØÂä†Âè∑ÁöÑ‰∏äÊ†á‰∏ãÊ†áÁöÑÂâçÂêéÈ°∫Â∫èÂèØ‰ª•‰∫íÊç¢„ÄÇ ÂêçÁß∞ Êï∞Â≠¶Ë°®ËææÂºè MarkdownÊ∫êÁ†Å Ê±ÇÂíåÂè∑ $\prod{3x^n}$ \prod{3x^n} Â∏¶ËåÉÂõ¥Ê±Ç‰πò $\prod_{n=1}^N{3x^n}$ \prod_{n=1}^N{3x^n} ÂºÄÊñπ[ ]‰∏≠ÂÜôÁöÑÊòØÂºÄÂá†Ê¨°ÊñπÔºå{ }‰∏≠ÂÜôÁöÑÊòØÈúÄË¶ÅÂºÄÊñπÁöÑÊï∞ÂÄº„ÄÇ ÂêçÁß∞ Êï∞Â≠¶Ë°®ËææÂºè MarkdownÊ∫êÁ†Å ÂºÄÊñπÂè∑ $\sqrt[5]{100}$ \sqrt[5]{100} ÁßØÂàÜ ÂêçÁß∞ Êï∞Â≠¶Ë°®ËææÂºè MarkdownÊ∫êÁ†Å ÁßØÂàÜ $\int^5_1{f(x)}{\rm d}x$ \int^5_1{f(x)}{\rm d}x ‰∫åÈáçÁßØÂàÜ $\iint^5_1{f(x)}{\rm d}x$ \iint^5_1{f(x)}{\rm d}x ‰∏âÈáçÁßØÂàÜ $\iiint^5_1{f(x)}{\rm d}x$ \iiint^5_1{f(x)}{\rm d}x Ê≠£Êó†Á©∑„ÄÅË¥üÊó†Á©∑ ÂêçÁß∞ Êï∞Â≠¶Ë°®ËææÂºè MarkdownÊ∫êÁ†Å Ê≠£Êó†Á©∑ $+\infty$ +\infty Ë¥üÊó†Á©∑ $-\infty$ -\infty ÊûÅÈôê ÂêçÁß∞ Êï∞Â≠¶Ë°®ËææÂºè MarkdownÊ∫êÁ†Å Â∑¶ÁÆ≠Â§¥ $\lim_{n\rightarrow+\infty} n$ \lim_{n\rightarrow+\infty} n ÂÖ≥Á≥ªËøêÁÆóÁ¨¶ ÂêçÁß∞ Êï∞Â≠¶Ë°®ËææÂºè MarkdownÊ∫êÁ†Å Â§ß‰∫éÁ≠â‰∫é $\geq$ \geq Â∞è‰∫éÁ≠â‰∫é $\leq$ \leq ÂåÖÂê´‰∫é $\subset$ \subset ÂåÖÂê´ $\supset$ \supset Â±û‰∫é $\in$ \in ‰∫åÂÖÉËøêÁÆóÁ¨¶ ÂêçÁß∞ Êï∞Â≠¶Ë°®ËææÂºè MarkdownÊ∫êÁ†Å Âä†Âáè $\pm$ \pm ÁÇπ‰πò $\cdot$ \cdot ‰πò $\times$ \times Èô§ $\div$ \div Âê¶ÂÆöÂÖ≥Á≥ªËøêÁÆóÁ¨¶ ÂêçÁß∞ Êï∞Â≠¶Ë°®ËææÂºè MarkdownÊ∫êÁ†Å ‰∏çÁ≠â‰∫é $\not=$ \not= ‰∏çÂ∞è‰∫é $\not&lt;$ \not&lt; ‰∏çÂåÖÂê´ $\not\supset$ \not\supset ÂØπÊï∞ËøêÁÆóÁ¨¶ ÂêçÁß∞ Êï∞Â≠¶Ë°®ËææÂºè MarkdownÊ∫êÁ†Å ÂØπÊï∞ $\log$ \log ÂØπÊï∞ $\log_2{18}$ \log_2{18} ÂØπÊï∞ $\ln$ \ln ‰∏âËßíËøêÁÆóÁ¨¶ ÂêçÁß∞ Êï∞Â≠¶Ë°®ËææÂºè MarkdownÊ∫êÁ†Å ÂûÇÁõ¥ $\bot$ \bot Ëßí $\angle $ \angle 30Â∫¶Ëßí $30^\circ$ 30^\circ Ê≠£Âº¶ $\sin$ \sin ‰ΩôÂº¶ $\cos$ \cos Ê≠£Âàá $\tan$ \tan ÁÆ≠Â§¥ ÂêçÁß∞ Êï∞Â≠¶Ë°®ËææÂºè MarkdownÊ∫êÁ†Å Â∑¶ÁÆ≠Â§¥ $\leftarrow$ \leftarrow Âè≥ÁÆ≠Â§¥ $\rightarrow$ \rightarrow ÈïøÁÆ≠Â§¥ $\longrightarrow$ \longrightarrow ‰∏äÁÆ≠Â§¥ $\uparrow$ \uparrow ‰∏ãÁÆ≠Â§¥ $\downarrow$ \downarrow Áü¢Èáè ÂêçÁß∞ Êï∞Â≠¶Ë°®ËææÂºè MarkdownÊ∫êÁ†Å Áü¢Èáè $\vec{a}$ \vec{a} ÁúÅÁï•Âè∑ ÂêçÁß∞ Êï∞Â≠¶Ë°®ËææÂºè MarkdownÊ∫êÁ†Å ÁúÅÁï•Âè∑ $\cdots$ \cdots Â∏åËÖäÂ≠óÊØç Â≠óÊØçÂêçÁß∞ Â§ßÂÜô MarkdownÊ∫êÁ†Å Â∞èÂÜô MarkdownÊ∫êÁ†Å alpha $A$ A $\alpha$ \alpha beta $B$ B $\beta$ \beta gamma $\Gamma$ \Gamma $\gamma$ \gamma delta $\Delta$ \Delta $\delta$ \delta epsilon $E$ E $\epsilon$ \epsilon $\varepsilon$ \varepsilon zeta $Z$ Z $\zeta$ \zeta eta $E$ E $\eta $ \eta theta $\Theta$ \Theta $\theta$ \theta iota $I$ I $\iota$ \iota kappa $K$ K $\kappa$ \kappa lambda $\Lambda$ \Lambda $\lambda$ \lambda Mu $M$ M $\mu$ \mu nu $N$ N $\nu$ \nu xi $\Xi$ \Xi $\xi$ \xi omicron $O$ O $\omicron$ \omicron pi $\Pi$ \Pi $\pi$ \pi rho $P$ P $\rho$ \rho sigma $\Sigma $ \Sigma $\sigma$ \sigma tau $T$ T $\tau$ \tau upsilon $\Upsilon$ \Upsilon $\upsilon$ \upsilon phi $\Phi$ \Phi $\phi$ \phi $\varphi$ \varphi chi $X$ X $\chi$ \chi psi $\Psi$ \Psi $\psi$ \psi sigma $\Sigma$ \Sigma $\sigma$ \sigma Á©∫ÂøÉÂ≠óÊØç‰∏éFrakturÂ≠óÊØçA-ZÁöÜÂèØÁî® ÂêçÁß∞ Á¨¶Âè∑ MarkdownÊ∫êÁ†Å Á©∫ÂøÉÂ≠óÊØç $\mathbb{A} $ \mathbb{A} FrakturÂ≠óÊØç $\mathfrak{B}$ \mathfrak{B} ÊÆµÂÜÖÂÖ¨Âºè ÂêçÁß∞ Á§∫‰æã MarkdownÊ∫êÁ†Å Ë°åÂÜÖÂÖ¨Âºè ÊÆµÂÜÖÂÖ¨ÂºèÔºö$x+y=z$ \$x+y=z\$ Ë°åÈó¥ÂÖ¨Âºè x+y=z \$\$x+y=z\$\$ ÂàÜÊÆµÂáΩÊï∞Á§∫‰æãÔºö P_{r-j}= \begin{cases} 0 &\mbox{if r-j is odd}\\ r!\,(-1)^{(r-j)/2} &\mbox{if r-j is even} \end{cases}ÂÆû‰æãÔºö 1234567$$P_&#123;r-j&#125;= \begin&#123;cases&#125; 0 &amp;\mbox&#123;if $r-j$ is odd&#125;\\ r!\,(-1)^&#123;(r-j)/2&#125; &amp;\mbox&#123;if $r-j$ is even&#125; \end&#123;cases&#125;$$ ÂÖ¨ÂºèÊé®ÂØºËøáÁ®ãÊúâÊó∂‰∏ÄË°åÊîæ‰∏ç‰∏ãÊâÄÊúâÁöÑÊé®ÂØºËøáÁ®ãÔºåÊîæÂà∞Â§öË°åÂπ∂‰ΩøÂæóÊØèË°åÁöÑÁ≠âÂè∑ÂØπÈΩêÂèØ‰ª•Â§ßÂ§ßÂ¢ûÂä†ÂèØËØªÊÄß„ÄÇ‰∏ãÈù¢Ëøô‰∏™‰æãÂ≠êÂéüÂßãÂΩ¢ÂºèÊòØAÔºåÁÑ∂ÂêéÁªèËøá‰∏âÊ≠•Êé®ÂØºÊúÄÁªàÂæóÂà∞‰∫ÜD„ÄÇ‰ª•Á¨¶Âè∑ &amp; ÁöÑ‰∏ã‰∏Ä‰∏™Â≠óÁ¨¶ËøõË°åÂØπÈΩêÔºåÊú´Â∞æÁöÑ‰∏§‰∏™ÂèçÊñúÊù† Áî®Êù•ÂàÜÂâ≤Ë°å„ÄÇËøôÈáåÊòØÁî±‰∫éMarkdown‰∏émathjaxÁöÑÊ∏≤ÊüìÊúâÂÜ≤Á™ÅÊâçÈúÄË¶ÅÁî®‰∏â‰∏™ÂèçÊñúÊù†„ÄÇ Á§∫‰æãÔºö \begin {aligned} A&=B \\ &=C \\ &=D \end {aligned}ÂÆû‰æãÔºö 1234567$$\begin &#123;aligned&#125;A&amp;=B \\&amp;=C \\&amp;=D\end &#123;aligned&#125;$$ Â§öË°åÂÖ¨ÂºèalignÁéØÂ¢ÉÂèØ‰ª•Áî®Êù•ÂØπÈΩêÂÖ¨ÂºèÔºå‰ΩøÁî®&amp;Á¨¶Âè∑Êù•Ê†áËÆ∞ÂØπÈΩêÁöÑ‰ΩçÁΩÆ„ÄÇ ÂÆû‰æãÔºö 123456$$\begin&#123;align&#125;h(x) =&amp; \frac&#123;1&#125;&#123;\int_xt(x)\mathrm&#123;d&#125;x&#125; \tag&#123;1&#125;\\f(x) =&amp; \frac&#123;1&#125;&#123;\int_x\eta(x)\mathrm&#123;d&#125;x&#125;g(x)\tag&#123;2&#125;\end&#123;align&#125;$$ Á§∫‰æãÔºö \begin{align} h(x) =& \frac{1}{\int_xt(x)\mathrm{d}x} \tag{1}\\ f(x) =& \frac{1}{\int_x\eta(x)\mathrm{d}x}g(x)\tag{2} \end{align}ÊåÅÁª≠Êï¥ÁêÜ‰∏≠„ÄÇ„ÄÇ„ÄÇ]]></content>
      <categories>
        <category>LaTeX</category>
      </categories>
      <tags>
        <tag>Markdown</tag>
        <tag>LaTeX</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[C++‰∏éROS ÂõûË∞ÉÂáΩÊï∞Ëß£Êûê]]></title>
    <url>%2Farticle%2FCplusplusAndROSCallbackFunction.html</url>
    <content type="text"><![CDATA[C++‰∏≠ÁöÑÂõûË∞ÉÂáΩÊï∞Ôºö A ‚Äúcallback‚Äù is any function that is called by another function which takes the first function as a parameter. Áõ¥ÁôΩÁÇπËØ¥ÔºåÂ∞±ÊòØ‚ÄúÂáΩÊï∞#‚ÄùÁöÑÂèÇÊï∞ÊòØÂè¶‰∏Ä‰∏™ÂáΩÊï∞ÔºåÈÄöËøá‚ÄúÂáΩÊï∞#‚ÄùË∞ÉÁî®Âè¶‰∏Ä‰∏™ÂáΩÊï∞ÔºåËøô‰∏™‚ÄúÂáΩÊï∞#‚ÄùÂ∞±ÊòØÂõûË∞ÉÂáΩÊï∞„ÄÇ‰ª•Êï∞Â≠¶ÂΩ¢ÂºèÊù•ÁúãÔºàËôΩÁÑ∂‰∏çÂ§™ÊÅ∞ÂΩìÔºâÔºöFunction(y)ÂíåFunction(g(x))„ÄÇFunction(y)ÊòØ‰∏Ä‰∏™ÂáΩÊï∞Ôºåg(x)‰πüÊòØ‰∏Ä‰∏™ÂáΩÊï∞ÔºåÈÇ£‰πàFunction(g(x))Â∞±ÂèØ‰ª•ÁúãÊàêÊòØ‰∏Ä‰∏™ÂõûË∞ÉËøáÁ®ãÔºåg(x)Â∞±ÊòØÂõûË∞ÉÂáΩÊï∞„ÄÇ Êõ¥Áõ¥Êé•Âú∞ËØ¥ÔºåÊàë‰ª¨‰∏ÄËà¨ÈÉΩÊòØË∞ÉÁî®OpenCVÈáåÈù¢ÁöÑÂ∫ìÂáΩÊï∞ÔºåÁé∞Âú®ÂÖ≥Á≥ªÂèçËøáÊù•‰∫ÜÔºåÊàë‰ª¨Ë¶ÅËÆ©OpenCVË∞ÉÁî®‰∏Ä‰∏™Êàë‰ª¨Ëá™Â∑±ÂÜôÁöÑÂáΩÊï∞ÔºåËøô‰∏™ËøáÁ®ãÂ∞±ÊòØÂõûË∞É„ÄÇÈÇ£‰∏™Ë¢´OpenCVË∞ÉÁî®ÁöÑÔºàÊàë‰ª¨Ëá™Â∑±ÂÜôÁöÑÔºâÂáΩÊï∞Â∞±ÊòØÂõûË∞ÉÂáΩÊï∞„ÄÇÊé•‰∏ã‰æÜ‰∏æ‰æãËßÑËåÉÂú∞ËØ¥‰∏Ä‰∏ãÔºö ‰∏çÂ∏¶ÂèÇÊï∞ÁöÑÂõûË∞ÉÂáΩÊï∞Ôºö 12345678910111213141516171819//ÂõûË∞ÉÂáΩÊï∞ void wordsCallback() &#123; std::cout&lt;&lt;"Hello World!"&lt;&lt;std::endl; &#125; //ÂÆûÁé∞ÂõûË∞ÉÂáΩÊï∞ÁöÑ"Ë∞ÉÁî®ÂáΩÊï∞" void wods(void (*callfuction)()) &#123; callfuction(); &#125; int main(int argc,char* argv[]) &#123; words(wodsCallback); return 0; &#125; Á®ãÂ∫èÁöÑÊ≠£Á°ÆËæìÂá∫ÁªìÊûúÊòØÔºöHello World! Â∏¶ÂèÇÊï∞ÁöÑÂõûË∞ÉÂáΩÊï∞Ôºö 12345678910111213141516171819//ÂõûË∞ÉÂáΩÊï∞ void wordsCallback(char* s) &#123; std::cout&lt;&lt;s&lt;&lt;std::endl; &#125; //ÂÆûÁé∞Â∏¶ÂèÇÂõûË∞ÉÂáΩÊï∞ÁöÑ"Ë∞ÉÁî®ÂáΩÊï∞" void words(void (*callfuction)(char*),char* s) &#123; callfuction(s); &#125; int main(int argc,char* argv[]) &#123; words(wordsCallback,"Hello World!"); return 0; &#125; Á®ãÂ∫èÁöÑÊ≠£Á°ÆËæìÂá∫ÁªìÊûúÔºöHello World! ROS‰∏≠ÁöÑÂõûË∞ÉÂáΩÊï∞‰∏ÄËà¨Êù•ËØ¥Ëøô‰∏™ÂõûË∞ÉÂáΩÊï∞‰ºöÁî®‰∏Ä‰∫õÊØîËæÉÊòæËëó‰∏îÊØîËæÉÁªü‰∏ÄÁöÑÂêçÂ≠óÔºö**CallbackÔºàÂ¶ÇScanCallback/CameraCallbackÔºâÔºåÂÆÉÊòØÂú®ËÆ¢ÈòÖËØùÈ¢òÁöÑÊó∂ÂÄô‰ΩøÁî®ÁöÑ„ÄÇÊâÄ‰ª•Âú®‰ΩøÁî®Êó∂ÔºåÊàë‰ª¨ÈúÄË¶ÅÂ£∞ÊòéËÆ¢ÈòÖËØùÈ¢òÁöÑÂêçÁß∞ÔºåÁÑ∂ÂêéÈÄâÊã©ËØùÈ¢òÔºåÊúÄÂêéË∞ÉÁî®CallbackÂáΩÊï∞„ÄÇÔºâ ‰∏æ‰∏™Ê†óÂ≠êÔºö 1234567891011void imageCallback(const sensor_msgs::ImageConstPtr&amp; msg)&#123; try &#123; cv::imshow("view", cv_bridge::toCvShare(msg, "bgr8")-&gt;image); &#125; catch (cv_bridge::Exception&amp; e) &#123; ROS_ERROR("Could not convert from '%s' to 'bgr8'.", msg-&gt;encoding.c_str()); &#125;&#125; 1image_transport::Subscriber sub_raw_image = it.subscribe("camera/rgb/image_raw", 1, imageCallback); ÂÖàÂ£∞ÊòéËÆ¢ÈòÖÁöÑËØùÈ¢òÁöÑÂêçÁß∞Ôºö 1sub_raw_image ÁÑ∂ÂêéÔºåÈÄâÊã©Êàë‰ª¨ÈúÄË¶ÅËÆ¢ÈòÖÁöÑËØùÈ¢ò„ÄÇ 1"camera/rgb/image_raw" È¢òÂ§ñËØùÔºåROS‰∏≠ÊúâÂæàÂ§öËØùÈ¢òÔºåÊúâÁöÑÊòØËá™Â∑±ÂÜôÁöÑÔºåÊúâÁöÑÊù•Ëá™ÂÖ∂‰ªñËäÇÁÇπÂèëÂ∏ÉÁöÑ„ÄÇ 1‰ª£Ë°®Êàë‰ª¨‰∏ÄÊ¨°ÊÄßÂèØ‰ª•ÁºìÂ≠òÂ§öÂ∞ëÊ∂àÊÅØÔºåÊúÄÂêéÈÇ£‰∏™Â∞±ÊòØÂõûË∞ÉÂáΩÊï∞‰∫Ü„ÄÇ 1imageCallback ROS‰∏≠ÔºåimageCallbackÁöÑÂèÇÊï∞ÊòØ‰∏éËØùÈ¢òÊÅØÊÅØÁõ∏ÂÖ≥ÁöÑÔºåË¶ÅË∑üÊçÆËÆ¢ÈòÖÁöÑËØùÈ¢òÊù•Á°ÆÂÆöÂèÇÊï∞„ÄÇ ‰∏ÄËà¨Êù•ËØ¥ÔºåÁ®ãÂ∫èÁöÑ‰∏ªË¶ÅÂäüËÉΩ‰πüÈÉΩÊòØÂú®ÂõûË∞ÉÂáΩÊï∞‰∏≠ÂÆûÁé∞ÁöÑ„ÄÇ ÊàñËÄÖËØ¥ÔºåÂ∞ÜÊù•Ëá™„ÄêËÆ¢ÈòÖËØùÈ¢ò„Äë‰∏≠ÁöÑÊï∞ÊçÆÔºå‰º†ÈÄíÁªô„ÄêÁõÆÊ†áÂáΩÊï∞„ÄëËøõË°åÂ§ÑÁêÜ„ÄÇ ÈúÄË¶ÅÁöÑÊï∞ÊçÆÔºåÈÉΩÊòØË¶ÅÈÄöËøáËØùÈ¢òËÆ¢ÈòÖÁöÑÔºåËÄåËÆ¢ÈòÖ‰∫ÜÂ∞±ËÇØÂÆöÊúâÂõûË∞ÉÂáΩÊï∞„ÄÇÂèØ‰ª•Êää‰∏Ä‰∏™‰∏™ÂõûË∞ÉÂáΩÊï∞ÁúãÊàêÊòØ‰∏Ä‰∏™‰∏™ÂçïÁã¨ÁöÑÁ∫øÁ®ã„ÄÇ Âè™Ë¶ÅËÆ¢ÈòÖÁöÑÊ∂àÊÅØ‰∏ÄÊõ¥Êñ∞ÔºàÂΩìÊúâÊ∂àÊÅØÂà∞ËæætopicÊó∂ÔºâÔºåÂõûË∞ÉÂáΩÊï∞Â∞±‰ºöË¢´Ë∞ÉÁî®ÔºàROSÂ∞±‰ºöË∞ÉÁî®imageCallback ()ÂáΩÊï∞ÔºâÔºåÂØπÊñ∞ÁöÑÔºàÂà∞ËææÁöÑÔºâÊï∞ÊçÆËøõË°åÂ§ÑÁêÜÔºåÁ®ãÂ∫èÂ∞±Ëøô‰πà‰∏çÊñ≠ÁöÑËøõË°å‰∏ãÂéª‰∫Ü„ÄÇ ËøôÈáåÊàë‰ª¨‰ªçÊóß‰∏æ‰æãÔºö 123void forwardCallback(const nav_msgs::Odometry::ConstPtr &amp;forward_msg)&#123;&#125; void imageCallback(const sensor_msgs::ImageConstPtr &amp;image_msg)&#123;&#125; ÈúÄË¶ÅÁ°ÆÂÆöÁöÑÂ∞±ÊòØËøô‰∏™sensor_msgs::ImageConstPtrÂíånav_msgs::Odometry::ConstPtr. ‰ΩøÁî®Á±ª‰Ωú‰∏∫ÂõûË∞ÉÂáΩÊï∞Ôºö ‰∏æ‰∏™Ê†óÂ≠êÔºö 12345class Listener&#123;public: void callback(const std_msgs::String::ConstPtr&amp; msg);&#125;; 12Listener listen;ros::Subscriber sub = n.subscribe("chatter", 1000, &amp;Listener::callback, &amp;listen); Â¶ÇÊûúËÆ¢ÈòÖÂú®ListenerÂÜÖÈÉ®Ôºå‰Ω†ÊõøÊç¢ÊúÄÂêéÁöÑÂèÇÊï∞‰∏∫ÂÖ≥ÈîÆËØçthisÔºåÂÆÉÊÑèÂë≥ÁùÄËÆ¢ÈòÖ‰ºöÂºïÁî®Á±ªÁöÑ‰∏ÄÈÉ®ÂàÜ„ÄÇ ‰ª•‰∏äÔºÅ ÈôÑÔºö &amp; Êúâ ‚ÄúÂºïÁî®‚Äù Âíå ‚Äú ÂèñÂú∞ÂùÄ‚ÄùÁöÑÂê´‰πâ int a; int &amp;b = a;‰∏äËø∞‰∏§Ë°åËØ≠Âè•ÊâßË°åÂÆå‰πãÂêéÔºåa„ÄÅbË°®Á§∫Âêå‰∏Ä‰∏™ÂèòÈáèÔºåÂØπÂÖ∂‰∏≠‰∏Ä‰∏™ÁöÑÊìç‰ΩúÁõ∏ÂΩì‰∫éÂØπÂè¶‰∏Ä‰∏™ÁöÑÊìç‰Ωú„ÄÇ int a; int *b = &amp;a;Âàôb‰∏≠ÂÇ®Â≠òÁöÑÊòØaÁöÑÂú∞ÂùÄ„ÄÇÂØπ*bÁöÑ‰ªª‰ΩïÊìç‰ΩúÁõ∏ÂΩì‰∫éÂØπaÁöÑÊìç‰Ωú„ÄÇ]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>ROS</tag>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[C++ coutÊéßÂà∂ËæìÂá∫\ÊµÅÊéßÂà∂]]></title>
    <url>%2Farticle%2FCplusplusCout.html</url>
    <content type="text"><![CDATA[I/OÁöÑ‰π¶ÂÜôÊ†ºÂºèI/0ÊµÅÊòØËæìÂÖ•ÊàñËæìÂá∫ÁöÑ‰∏ÄÁ≥ªÂàóÂ≠óËäÇÔºåÂΩìÁ®ãÂ∫èÈúÄË¶ÅÂú®Â±èÂπï‰∏äÊòæÁ§∫ËæìÂá∫Êó∂ÔºåÂèØ‰ª•‰ΩøÁî®ÊèíÂÖ•Êìç ‰ΩúÁ¨¶‚Äú&lt;&lt;‚ÄùÂêëcoutËæìÂá∫ÊµÅ‰∏≠ÊèíÂÖ•Â≠óÁ¨¶„ÄÇ‰æãÂ¶ÇÔºö 1cout&lt;&lt;‚ÄùThis is a program.\n"Ôºõ ÂΩìÁ®ãÂ∫èÈúÄË¶ÅÊâßË°åÈîÆÁõòËæìÂÖ•Êó∂ÔºåÂèØ‰ª•‰ΩøÁî®ÊäΩÂèñÊìç‰ΩúÁ¨¶ ‚Äú&gt;&gt;‚Äù‰ªécinËæì‰∫∫ÊµÅ‰∏≠ÊäΩÂèñÂ≠óÁ¨¶„ÄÇ‰æãÂ¶ÇÔºö 12int myAgeÔºõcin&gt;&gt;myAgeÔºõ ‰∏çÁÆ°Êää‰ªÄ‰πàÂü∫Êú¨Êï∞ÊçÆÁ±ªÂûãÁöÑÂêçÂ≠óÊàñÂÄº‰º†ÁªôÊµÅÔºåÂÆÉÈÉΩËÉΩÊáÇ„ÄÇ‰æãÂ¶ÇÔºå‰∏ãÈù¢ÁöÑÂáΩÊï∞ËæìÂá∫Â≠óÁ¨¶‰∏≤ÂíåÊï¥Êï∞Ôºö 12345678#include &lt;iostream.h&gt;void main()&#123; cout &lt;&lt; "My name is Jone\n"; cout "the ID is"; cout &lt;&lt; 2; cout &lt;&lt; endl;&#125; ‰∏äÈù¢ÁöÑËæìÂá∫‰πüÂèØ‰ª•Âú®Âêå‰∏ÄË°å‰∏≠‰∏≤ËøûÔºå‰∏ãÈù¢ÁöÑËæìÂá∫ËØ≠Âè•‰∏é‰∏ä‰æãËæìÂá∫ÂêåÊ†∑ ÂÜÖÂÆπÔºö 1cout &lt;&lt;"My name is Jone\n" &lt;&lt;‚Äùthe ID is"&lt;&lt; 2 &lt;&lt;endlÔºõ ‰πüÂèØ‰ª•ÂàÜÂú®Âá†Ë°åÔºåÊèêÈ´òÂèØËØªÊÄßÔºå‰∏ãÂàóËØ≠Âè•‰∏é‰∏ä‰æãËæìÂá∫ÂêåÊ†∑ÁªìÊûúÔºö 1234cout&lt;&lt;"My name is Jonen" //Ë°åÊú´Êó†ÂàÜÂè∑&lt;&lt;"the ID is"&lt;&lt;2&lt;&lt;endlÔºõ cinÂèØ‰ª•Âíåcout‰∏ÄÊ†∑ÁöÑÊñπÂºèË∞ÉÊï¥Ë°åÔºåÂÆÉËá™Âä® ËØÜÂà´ÂèòÈáè‰ΩçÁΩÆÂíåÁ±ªÂûã„ÄÇ‰æãÂ¶ÇÔºö 12int iÔºõfloat fÔºõlong lÔºõcin &gt;&gt;i &gt;&gt;f &gt;&gt;lÔºõ cinËÉΩÂ§üÁü•ÈÅìÊäΩÂèñÁöÑÂèòÈáè‰πãÁ±ªÂûãÔºåÂÆÉÂ∞ÜÂØπiÔºåfÔºålÂàÜÂà´ÁªôÂá∫‰∏Ä‰∏™Êï¥Âûã„ÄÅÊµÆÁÇπÂûãÂíåÈïøÊï¥ÂûãÊï∞„ÄÇ ‰ΩøÁî®ÊéßÂà∂Á¨¶ÊµÅÁöÑÈªòËÆ§Ê†ºÂºèËæìÂá∫ÊúâÊó∂‰∏çËÉΩÊª°Ë∂≥ÁâπÊÆäË¶ÅÊ±ÇÔºåÂ¶ÇÔºö 12double average=9.400067Ôºõcout&lt;&lt;average&lt;&lt;endlÔºõ Â∏åÊúõÊòæÁ§∫ÁöÑÊòØ9.40ÔºåÂç≥‰øùÁïô‰∏§‰ΩçÂ∞èÊï∞ÔºåÂèØÊòØÂç¥ÊòæÁ§∫‰∫Ü9.40007ÔºõÈªòËÆ§ÊòæÁ§∫6‰ΩçÊúâÊïà‰Ωç„ÄÇ Áî®ÊéßÂà∂Á¨¶(manipulators)ÂèØ‰ª•ÂØπI/OÊµÅÁöÑÊ†ºÂºèËøõË°åÊéßÂà∂„ÄÇÊéßÂà∂Á¨¶ÊòØÂú®Â§¥Êñá‰ª∂iomanip.h‰∏≠ÂÆö‰πâÁöÑÂØπË±°„ÄÇÂèØ‰ª•Áõ¥Êé•Â∞ÜÊéßÂà∂Á¨¶ÊèíÂÖ•ÊµÅ‰∏≠„ÄÇÂ∏∏Áî® ÊéßÂà∂Á¨¶Â¶ÇË°®2-4ÊâÄÂàó„ÄÇ Ë°® IÔºèOÊµÅÁöÑÂ∏∏Áî®ÊéßÂà∂Á¨¶ ÊéßÂà∂Á¨¶ Êèè Ëø∞ dec hex oct setfill(c) setdivcision(n) setw(n) setiosflags(ios::fixed) setiosflags(ios::scientific) setiosflags(ios::left) setiosflags(ios::right) setiosflags(ios::skipws) setiosflags(ios::uppercase) setiosflags(ios::lowercase) ÁΩÆÂü∫Êï∞‰∏∫10 ÁΩÆÂü∫Êï∞‰∏∫16 ÁΩÆÂü∫Êï∞‰∏∫8 Ê≤°Â°´ÂÖÖÂ≠óÁ¨¶‰∏∫c Ê≤°ÊòæÁ§∫Â∞èÊï∞Á≤æÂ∫¶‰∏∫n‰Ωç ËÆæÂüüÂÆΩ‰∏∫n‰∏™Â≠óÁ¨¶ Âõ∫ÂÆöÁöÑÊµÆÁÇπÊòæÁ§∫ ÊåáÊï∞Ë°®Á§∫ Â∑¶ÂØπÈΩê Âè≥ÂØπÈΩê ÂøΩÁï•ÂâçÂØºÁ©∫ÁôΩ 16ËøõÂà∂Êï∞Â§ßÂÜôËæìÂá∫ 16 ËøõÂà∂Êï∞Â∞èÂÜôËæìÂá∫ ‰ΩøÁî®ÊéßÂà∂Á¨¶Êó∂ÔºåË¶ÅÂú®Á®ãÂ∫èÁöÑÂ§¥‰∏äÂä†Â§¥Êñá‰ª∂iomanip.h„ÄÇ ÊéßÂà∂ÊµÆÁÇπÊï∞ÂÄºÊòæÁ§∫‰ΩøÁî®setdivcision(n)ÂèØÊéßÂà∂ËæìÂá∫ÊµÅÊòæÁ§∫ÊµÆÁÇπÊï∞ÁöÑÊï∞Â≠ó‰∏™ Êï∞„ÄÇC++ÈªòËÆ§ÁöÑÊµÅËæìÂá∫Êï∞ÂÄºÊúâÊïà‰ΩçÊòØ6„ÄÇÂ¶ÇÊûúsetdivcision(n)‰∏ésetiosflags(ios::fixed)ÂêàÁî®ÔºåÂèØ‰ª•ÊéßÂà∂Â∞èÊï∞ÁÇπÂè≥ËæπÁöÑÊï∞Â≠ó‰∏™Êï∞„ÄÇsetiosflags(ios::fixed)ÊòØÁî®ÂÆöÁÇπÊñπÂºèË°®Á§∫ÂÆûÊï∞„ÄÇÂ¶ÇÊûú‰∏é setiosnags(ios::scientific)ÂêàÁî®Ôºå ÂèØ‰ª•ÊéßÂà∂ÊåáÊï∞Ë°®Á§∫Ê≥ïÁöÑÂ∞èÊï∞‰ΩçÊï∞„ÄÇsetiosflags(ios::scientific)ÊòØÁî®ÊåáÊï∞ÊñπÂºèË°®Á§∫ÂÆûÊï∞„ÄÇ‰æãÂ¶ÇÔºå‰∏ãÈù¢ÁöÑ‰ª£Á†ÅÂàÜÂà´Áî®ÊµÆ ÁÇπ„ÄÅÂÆöÁÇπÂíåÊåáÊï∞ÊñπÂºèË°®Á§∫‰∏Ä‰∏™ÂÆûÊï∞Ôºö 1234567891011121314151617181920212223//*********************//** ch2_1.cpp **//*********************#include &lt;iostream.h&gt;#include &lt;iomanip.h&gt; //Ë¶ÅÁî®Âà∞Ê†ºÂºèÊéßÂà∂Á¨¶void main()&#123; double amount = 22.0/7; cout &lt;&lt;amount &lt;&lt;endl; cout &lt;&lt;setdivcision(0) &lt;&lt;amount &lt;&lt;endl &lt;&lt;setdivcision(1) &lt;&lt;amount &lt;&lt;endl &lt;&lt;setdivcision(2) &lt;&lt;amount &lt;&lt;endl &lt;&lt;setdivcision(3) &lt;&lt;amount &lt;&lt;endl &lt;&lt;setdivcision(4) &lt;&lt;amount &lt;&lt;endl; cout&lt;&lt;setiosflags(ios::fixed); cout &lt;&lt;setdivcision(8) &lt;&lt;amount &lt;&lt;endl; cout&lt;&lt;setiosflags(ios::scientific)&lt;&lt;amount&lt;&lt;endl; cout &lt;&lt;setdivcision(6);//ÈáçÊñ∞ËÆæÁΩÆÊàêÂéüÈªòËÆ§ËÆæÁΩÆ&#125; ËøêË°åÁªìÊûú‰∏∫Ôºö 123456783.14286333.13.143.1433.142857143.14285714e+00 ËØ•Á®ãÂ∫èÂú®32‰ΩçÊú∫Âô®‰∏äËøêË°åÈÄöËøá„ÄÇÂú®Áî®ÊµÆÁÇπË°®Á§∫ÁöÑËæìÂá∫‰∏≠Ôºåsetdivcision(n)Ë°®Á§∫ÊúâÊïà‰ΩçÊï∞„ÄÇÁ¨¨1Ë°åËæìÂá∫Êï∞ÂÄº‰πãÂâçÊ≤°ÊúâËÆæÁΩÆÊúâÊïà‰ΩçÊï∞ÔºåÊâÄ‰ª•Áî®ÊµÅÁöÑÊúâÊïà‰ΩçÊï∞ÈªòËÆ§ËÆæÁΩÆÂÄº6ÔºöÁ¨¨2‰∏™ËæìÂá∫ËÆæÁΩÆ‰∫ÜÊúâÊïà‰ΩçÊï∞0ÔºåC++ÊúÄÂ∞èÁöÑÊúâÊïà‰ΩçÊï∞‰∏∫1ÔºåÊâÄ‰ª•‰Ωú‰∏∫ÊúâÊïà‰ΩçÊï∞ËÆæÁΩÆ ‰∏∫1Êù•ÁúãÂæÖÔºöÁ¨¨3ÔΩû6Ë°åËæìÂá∫ÊåâËÆæÁΩÆÁöÑÊúâÊïà‰ΩçÊï∞ËæìÂá∫„ÄÇÂú®Áî®ÂÆöÁÇπË°®Á§∫ÁöÑËæìÂá∫‰∏≠Ôºåsetdivcision(n)Ë°®Á§∫Â∞èÊï∞‰ΩçÊï∞„ÄÇÁ¨¨7Ë°åËæìÂá∫ÊòØ‰∏ésetiosflags(ios::fixed)ÂêàÁî®„ÄÇÊâÄ‰ª•setdivcision(8)ËÆæÁΩÆÁöÑÊòØÂ∞èÊï∞ÁÇπÂêéÈù¢ÁöÑ‰ΩçÊï∞ÔºåËÄåÈùûÂÖ®ÈÉ®Êï∞Â≠ó‰∏™ Êï∞„ÄÇÂú®Áî®ÊåáÊï∞ÂΩ¢ÂºèËæìÂá∫Êó∂Ôºåsetdivcision(n)Ë°®Á§∫Â∞èÊï∞‰ΩçÊï∞„ÄÇÁ¨¨8Ë°åËæìÂá∫Áî® setiosflags(ios::scientific)Êù•Ë°®Á§∫ÊåáÊï∞Ë°®Á§∫ÁöÑËæìÂá∫ÂΩ¢Âºè„ÄÇÂÖ∂ÊúâÊïà‰ΩçÊï∞Ê≤øÁî®‰∏äÊ¨°ÁöÑËÆæÁΩÆÂÄº8„ÄÇÂ∞èÊï∞‰ΩçÊï∞Êà™Áü≠ÊòæÁ§∫Êó∂ÔºåËøõË°å4Ëàç5ÂÖ•Â§ÑÁêÜ„ÄÇ ËÆæÁΩÆÂÄºÁöÑËæìÂá∫ÂÆΩÂ∫¶Èô§‰∫Ü‰ΩøÁî®Á©∫Ê†ºÊù•Âº∫Ë°åÊéßÂà∂ËæìÂá∫Èó¥ÈöîÂ§ñÔºåËøòÂèØ‰ª•Áî® setw(n)ÊéßÂà∂Á¨¶„ÄÇÂ¶ÇÊûú‰∏Ä‰∏™ÂÄºÈúÄË¶ÅÊØîsetw(n)Á°ÆÂÆöÁöÑÂ≠óÁ¨¶Êï∞Êõ¥Â§öÁöÑÂ≠óÁ¨¶ÔºåÂàôËØ•ÂÄºÂ∞Ü‰ΩøÁî®ÂÆÉÊâÄÈúÄË¶ÅÁöÑÊâÄÊúâÂ≠óÁ¨¶„ÄÇ‰æãÂ¶ÇÔºö 12float amount=3.14159Ôºõcout &lt;&lt;setw(4) &lt;&lt;amount &lt;&lt;endlÔºõ ÂÖ∂ËøêË°åÁªìÊûú‰∏∫Ôºö3.14159„ÄÇÂÆÉÂπ∂‰∏çÊåâ4‰ΩçÂÆΩÂ∫¶ÔºåËÄåÊòØÊåâÂÆûÈôÖÂÆΩÂ∫¶ËæìÂá∫„ÄÇÂ¶ÇÊûú‰∏Ä‰∏™ÂÄºÁöÑÂ≠óÁ¨¶Êï∞ÊØîsetw(n)Á°ÆÂÆöÁöÑÂ≠óÁ¨¶‰∏™Êï∞Êõ¥Â∞ëÔºåÂàôÂú®Êï∞Â≠ó Â≠óÁ¨¶ÂâçÊòæÁ§∫Á©∫ÁôΩÔºå‰∏çÂêå‰∫éÂÖ∂‰ªñÊéßÂà∂Á¨¶Ôºåsetw(n)‰ªÖ‰ªÖÂΩ±Âìç‰∏ã‰∏Ä‰∏™Êï∞ÂÄºËæìÂá∫ÔºåÊç¢Âè•ËØùËØ¥Ôºå‰ΩøÁî®setwËÆæÁΩÆÁöÑÈó¥ÈöîÊñπÂºèÂπ∂‰∏ç‰øùÁïôÂÖ∂ÊïàÂäõ„ÄÇ‰æãÂ¶ÇÔºö 123456cout&lt;&lt;setw(8)&lt;&lt;10&lt;&lt;20&lt;&lt;endlÔºõ//ËøêË°åÁªìÊûú‰∏∫Ôºö-------1020 ËøêË°åÁªìÊûú‰∏≠ÁöÑ‰∏ãÊ®™Á∫øË°®Á§∫Á©∫ Ê†º„ÄÇÊï¥Êï∞20Âπ∂Ê≤°ÊúâÊåâÂÆΩÂ∫¶8ËæìÂá∫„ÄÇsetw()ÁöÑÈªòËÆ§ÂÄº‰∏∫ÂÆΩÂ∫¶0ÔºåÂç≥setw(0)ÔºåÊÑèÊÄùÊòØÊåâËæìÂá∫Êï∞ÂÄºÁöÑË°®Á§∫ÂÆΩÂ∫¶ËæìÂá∫Ôºå ÊâÄ‰ª•20Â∞±Á¥ßÊå®10‰∫Ü„ÄÇËã•Ë¶ÅÊØè‰∏™Êï∞ÂÄºÈÉΩÊúâÂÆΩÂ∫¶8ÔºåÂàôÊØè‰∏™ÂÄºÈÉΩË¶ÅËÆæÁΩÆÔºö 12cout&lt;&lt;setw(8)&lt;&lt;10&lt;&lt;setw(8) &lt;&lt;20 &lt;&lt;endlÔºõ ËæìÂá∫8ËøõÂà∂Âíå16ËøõÂà∂Êï∞3‰∏™Â∏∏Áî®ÁöÑÊéßÂà∂Á¨¶ÊòØhexÔºåoctÂíådecÔºåÂÆÉ‰ª¨ÂàÜÂà´ÂØπÂ∫î16 ËøõÂà∂„ÄÅ8ËøõÂà∂Âíå10ËøõÂà∂Êï∞ÁöÑÊòæÁ§∫„ÄÇËøô3‰∏™ÊéßÂà∂Á¨¶Âú®iostream.hÂ§¥Êñá‰ª∂‰∏≠ÂÆö‰πâ„ÄÇ‰æãÂ¶ÇÔºö12345678910111213//*********************//** ch2_2.cpp **//*********************#include &lt;iostream.h&gt;void main()&#123;int number=1001;cout &lt;&lt;"Decimal:" &lt;&lt;dec &lt;&lt;number &lt;&lt;endl&lt;&lt;"Hexadecimal:" &lt;&lt;hex &lt;&lt;number &lt;&lt;endl&lt;&lt;"Octal:" &lt;&lt;oct &lt;&lt;number &lt;&lt;endl;&#125; ËøêË°åÁªìÊûú‰∏∫Ôºö123DecimalÔºö1001HexadecimalÔºö3e9OctalÔºö1751 1001ÊòØ‰∏Ä‰∏™10ËøõÂà∂Êï∞Ôºå‰∏çËÉΩÊääÂÆÉÁêÜËß£Êàê16ËøõÂà∂Êàñ8ËøõÂà∂Êï∞ÔºåÂõ†‰∏∫ÂÆÉ‰∏çÊòØ‰ª•0xÊàñ0ÂºÄÂ§¥„ÄÇ‰ΩÜ Âú®ËæìÂá∫Êó∂Ôºå ÊµÅÊ†πÊçÆÊéßÂà∂Á¨¶ËøõË°åËøáÊª§Ôºå ‰ΩøÂÖ∂Êåâ‰∏ÄÂÆöÁöÑËøõÂà∂Êù•ÊòæÁ§∫„ÄÇÁî®Â§¥Êñá‰ª∂iomanip.h‰∏≠ÁöÑ setiosflags(ios::uppercase)ÂèØ‰ª•ÊéßÂà∂16ËøõÂà∂Êï∞Â§ßÂÜôËæìÂá∫„ÄÇ‰æãÂ¶Ç,‰∏ä‰æã‰∏≠Â¢ûÂä†‰∏Ä‰∏™Â§¥Êñá‰ª∂,ÂØπ16ËøõÂà∂Êï∞ËøõË°åÂ§ßÂÜôÊéßÂà∂ÔºåÂç≥Ôºö1234567#include&lt;iostream.h&gt;#include&lt;iomanip.h&gt;//...cout&lt;&lt;"Hexadecimal:"&lt;&lt;hex &lt;&lt;setiosftags(ios::uppercase) &lt;&lt;number&lt;&lt;endlÔºõ ‰æøËÉΩÂæóÂà∞16ËøõÂà∂Êï∞ÁöÑÂ§ßÂÜôË°®Á§∫ÔºöHexadecimalÔºö3E9„ÄÇ ËÆæÁΩÆÂ°´ÂÖÖÂ≠óÁ¨¶setwÂèØ‰ª•Áî®Êù•Á°ÆÂÆöÊòæÁ§∫ÁöÑÂÆΩÂ∫¶„ÄÇÈªòËÆ§Êó∂ÔºåÊµÅ‰ΩøÁî®Á©∫Ê†ºÁ¨¶Êù•‰øùËØÅÂ≠óÁ¨¶Èó¥ÁöÑÊ≠£Á°ÆÈó¥Èöî„ÄÇÁî®setfillÊéßÂà∂Á¨¶ÂèØ‰ª•Á°ÆÂÆö‰∏Ä‰∏™ÈùûÁ©∫Ê†ºÁöÑÂà´ÁöÑÂ≠óÁ¨¶„ÄÇSetfillÂú®Â§¥Êñá‰ª∂iomanip¬∑h‰∏≠ÂÆö‰πâ„ÄÇ‰æãÂ¶ÇÔºö12345678910111213141516//*********************//** ch2_3.cpp **//*********************#include &lt;iostream.h&gt;#include &lt;iomanip.h&gt;void main()&#123; cout &lt;&lt;setfill('*') &lt;&lt;setw(2) &lt;&lt;21 &lt;&lt;endl &lt;&lt;setw(3) &lt;&lt;21 &lt;&lt;endl &lt;&lt;setw(4) &lt;&lt;21 &lt;&lt;endl; cout &lt;&lt;setfill(' '); // ÊÅ¢Â§çÈªòËÆ§ËÆæÁΩÆ&#125; ËøêË°åÁªìÊûú‰∏∫Ôºö12321*21**21 Â∑¶Âè≥ÂØπÈΩêËæìÂá∫ÈªòËÆ§Êó∂ÔºåI/OÊµÅÂ∑¶ÂØπÈΩêÊòæÁ§∫ÁöÑÂÜÖÂÆπ„ÄÇ‰ΩøÁî®Â§¥Êñá‰ª∂iomanip.h‰∏≠ÁöÑ setiosflags(ios::left)Âíå(ios::right)Ê†áÂøóÔºåÂèØ‰ª•ÊéßÂà∂ËæìÂá∫ÂØπÈΩê„ÄÇ‰æãÂ¶ÇÔºö12345678910111213141516171819//*********************//** ch2_4.cpp **//*********************#include &lt;iostream.h&gt;#include &lt;iomanip.h&gt;void main()&#123;cout &lt;&lt;setiosflags(ios::right) &lt;&lt;setw(5) &lt;&lt;1 &lt;&lt;setw(5) &lt;&lt;2 &lt;&lt;setw(5) &lt;&lt;3 &lt;&lt;endl;cout&lt;&lt;setiosflags(ios::left) &lt;&lt;setw(5) &lt;&lt;1 &lt;&lt;setw(5) &lt;&lt;2 &lt;&lt;setw(5) &lt;&lt;3 &lt;&lt;endl;&#125; ËøêË°åÁªìÊûú‰∏∫Ôºö12-----1-----2-----31-----2-----3----- Âº∫Âà∂ÊòæÁ§∫Â∞èÊï∞ÁÇπÂíåÁ¨¶Âè∑ÂΩìÁ®ãÂ∫èËæìÂá∫‰∏ãÈù¢ÁöÑ‰ª£Á†ÅÊó∂Ôºö 1cout&lt;&lt;10.0/5&lt;&lt;endlÔºõ ÈªòËÆ§ÁöÑI/0ÊµÅ‰ºöÁÆÄÂçïÂú∞ÊòæÁ§∫2ÔºåËÄåÈùû2.0ÔºåÂõ†‰∏∫Èô§Ê≥ïÁöÑÁªìÊûúÊòØÁ≤æÁ°ÆÁöÑ„ÄÇÂΩì ÈúÄË¶ÅÊòæÁ§∫Â∞èÊï∞ÁÇπÊó∂ÔºåÂèØ‰ª•Áî®iso::showpointÊ†áÂøó„ÄÇ‰æãÂ¶ÇÔºö1234567891011121314//*********************//** ch2_5.cpp **//*********************#include &lt;iostream.h&gt;#include &lt;iomanip.h&gt;void main()&#123;cout &lt;&lt;10.0/5 &lt;&lt;endl;cout&lt;&lt;setiosflags(ios::showpoint) &lt;&lt;10.0/5 &lt;&lt;endl;&#125; ËøêË°åÁªìÊûú‰∏∫Ôºö1222.00000 ÈªòËÆ§Êó∂ÔºåI/OÊµÅ ‰ªÖÂú®Ë¥üÊï∞‰πãÂâçÊòæÁ§∫ÂÄºÁöÑÁ¨¶Âè∑ÔºåÊ†πÊçÆÁ®ãÂ∫èÁöÑÁî®ÈÄîÔºåÊúâÊó∂‰πüÈúÄË¶ÅÂú®Ê≠£Êï∞‰πãÂâçÂä†‰∏äÊ≠£Âè∑ÔºåÂèØ‰ª•Áî®ios::showposÊ†áÂøó„ÄÇ‰æãÂ¶ÇÔºö1234567891011121314//*********************//** ch2_6.cpp **//*********************#include &lt;iostream.h&gt;#include &lt;iomanip.h&gt;void main()&#123;cout &lt;&lt;10 &lt;&lt;" " &lt;&lt;-20 &lt;&lt;endl;cout&lt;&lt;setiosflags(ios::showpos) &lt;&lt;10 &lt;&lt;" " &lt;&lt;-20 &lt;&lt;endl;&#125; ËøêË°åÁªìÊûú‰∏∫Ôºö1210 -20+10 -20 Â∞è ÁªìÂèòÈáèÊòØÁ®ãÂ∫èÂàÜÈÖçÁªôÊüê‰∏™ÂÜÖÂ≠ò‰ΩçÁΩÆÁöÑÂêçÂ≠óÔºåÂÆÉÂèØ‰ª•Â≠òÊîæ‰ø°ÊÅØ„ÄÇÁ®ãÂ∫èÂú®‰ΩøÁî®ÂèòÈáèÂâçÔºåÂøÖÈ°ªÂÖàËØ¥ÊòéÂèòÈáèÂêçÂíåÂèòÈáè Á±ªÂûã„ÄÇ‰∏çÂêåÁöÑÂèòÈáè‰∏çËÉΩÂêåÂêçÔºåÂèòÈáèÂêçÂ∫îËØ•Â∞ΩÈáèÂèçÊò†Âá∫ÂèòÈáèÁöÑÁî®ÈÄîÔºå‰ª•Â¢ûÂº∫Á®ãÂ∫èÁöÑÂèØËØªÊÄß„ÄÇÂú®Á®ãÂ∫èËøêË°å‰∏≠ÔºåÂ∏∏ÈáèÁöÑÂÄº‰∏çÂèØÊîπÂèò„ÄÇÂ∏∏Èáè‰πüÊúâÂêÑ ÁßçÊï∞ÊçÆÁ±ªÂûãÔºå‰πüÂç†ÊúâÂ≠òÂÇ®Á©∫Èó¥„ÄÇÂêÑÁßçÊï∞ÊçÆÁ±ªÂûãÁöÑÊï∞ÊçÆË°®Á§∫Êúâ‰∏ÄÂÆöÁöÑËåÉÂõ¥ÔºåË∂äËøá‰∫ÜËØ•ËåÉÂõ¥Ôºå C++Â∞±Ë¶ÅÂØπËØ•Êï∞ÊçÆËøõË°åÊà™ÂèñÔºå‰ΩøÂæóÊï∞ÊçÆ‰∏çÂÜçÊ≠£Á°Æ„ÄÇÂà©Áî®coutÂèØ‰ª•ËæìÂá∫ÂêÑÁßçÊï∞ÊçÆÁ±ªÂûãÁöÑÊï∞ÊçÆÔºåÂèØ‰ª•Â§öÁßçÊñπÂºèÂú®Â±èÂπï‰∏äÊòæÁ§∫ËæìÂá∫‰ø°ÊÅØ(ÂåÖÊã¨ÁâπÊÆäÁ¨¶Âè∑)„ÄÇC++ÂÖºÂÆπCÁöÑÂ∫ìÂáΩÊï∞ÔºåÊâÄ‰ª•printf()Âíå scanf()‰πüÂèØÁÖßÂ∏∏‰ΩøÁî®„ÄÇ]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Companion computer ÂØπUAVÁöÑÂ§ñÈÉ®ÊéßÂà∂]]></title>
    <url>%2Farticle%2FCompanionComputer2Pixhawk.html</url>
    <content type="text"><![CDATA[Enter password to read. Incorrect Password! No content to display! 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]]></content>
      <categories>
        <category>UAV</category>
      </categories>
      <tags>
        <tag>ROS</tag>
        <tag>MAVROS</tag>
        <tag>Offboard</tag>
        <tag>Pixhawk</tag>
        <tag>UAV</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[SparkÈÉ®ÁΩ≤Êû∂ÊûÑÊñπÂºè]]></title>
    <url>%2Farticle%2FSparkArchitecturalSchemes.html</url>
    <content type="text"><![CDATA[SparkÊû∂ÊûÑ Áî®SparkÊû∂ÊûÑÂÖ∑ÊúâÂ¶Ç‰∏ã‰ºòÁÇπÔºö ÂÆûÁé∞‰∏ÄÈîÆÂºèÂÆâË£ÖÂíåÈÖçÁΩÆ„ÄÅÁ∫øÁ®ãÁ∫ßÂà´ÁöÑ‰ªªÂä°ÁõëÊéßÂíåÂëäË≠¶ Èôç‰ΩéÁ°¨‰ª∂ÈõÜÁæ§„ÄÅËΩØ‰ª∂Áª¥Êä§„ÄÅ‰ªªÂä°ÁõëÊéßÂíåÂ∫îÁî®ÂºÄÂèëÁöÑÈöæÂ∫¶ ‰æø‰∫éÂÅöÊàêÁªü‰∏ÄÁöÑÁ°¨‰ª∂„ÄÅËÆ°ÁÆóÂπ≥Âè∞ËµÑÊ∫êÊ±† Ê≥®ÔºöSpark StreamingÊó†Ê≥ïÂÆûÁé∞ÊØ´ÁßíÁ∫ßÁöÑÊµÅËÆ°ÁÆóÔºåÂõ†Ê≠§ÔºåÂØπ‰∫éÈúÄË¶ÅÊØ´ÁßíÁ∫ßÂÆûÊó∂ÂìçÂ∫îÁöÑ‰ºÅ‰∏öÂ∫îÁî®ËÄåË®ÄÔºå‰ªçÁÑ∂ÈúÄË¶ÅÈááÁî®ÊµÅËÆ°ÁÆóÊ°ÜÊû∂ÔºàÂ¶ÇStormÔºâ Spark+HadoopÊû∂ÊûÑHadoopÂíåSparkÁöÑÁªü‰∏ÄÈÉ®ÁΩ≤ÁºòÁî±Ôºö HadoopÁîüÊÄÅÁ≥ªÁªü‰∏≠ÁöÑ‰∏Ä‰∫õÁªÑ‰ª∂ÊâÄÂÆûÁé∞ÁöÑÂäüËÉΩÔºåÁõÆÂâçËøòÊòØÊó†Ê≥ïÁî±SparkÂèñ‰ª£ÁöÑÔºåÊØîÂ¶ÇÔºåStorm Áé∞ÊúâÁöÑHadoopÁªÑ‰ª∂ÂºÄÂèëÁöÑÂ∫îÁî®ÂÆåÂÖ®ËΩ¨ÁßªÂà∞Spark‰∏äÈúÄË¶Å‰∏ÄÂÆöÁöÑÊàêÊú¨ ‰∏çÂêåÁöÑËÆ°ÁÆóÊ°ÜÊû∂Áªü‰∏ÄËøêË°åÂú®YARN‰∏≠ÔºåÂèØ‰ª•Â∏¶Êù•Â¶Ç‰∏ãÂ•ΩÂ§ÑÔºö ËÆ°ÁÆóËµÑÊ∫êÊåâÈúÄ‰º∏Áº© ‰∏çÁî®Ë¥üËΩΩÂ∫îÁî®Ê∑∑Êê≠ÔºåÈõÜÁæ§Âà©Áî®ÁéáÈ´ò ÂÖ±‰∫´Â∫ïÂ±ÇÂ≠òÂÇ®ÔºåÈÅøÂÖçÊï∞ÊçÆË∑®ÈõÜÁæ§ËøÅÁßª]]></content>
      <categories>
        <category>Big Data</category>
      </categories>
      <tags>
        <tag>Big Data</tag>
        <tag>Â§ßÊï∞ÊçÆ</tag>
        <tag>Spark</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Spark SQL„ÄÅStreaming and MLlib]]></title>
    <url>%2Farticle%2FSparkSQLStreamingandMLlib.html</url>
    <content type="text"><![CDATA[Spark SQL ÊîØÊåÅÂ§öÁßçÁªìÊûÑÂåñÊï∞ÊçÆÔºåÂ¶ÇJSON, Hive, ParquetÁ≠â Can be created from external data sources, from the results of queries, or from regular RDDs Spark Streaming Spark MLlibÊîØÊåÅÂ§öÁ±ªÊú∫Âô®Â≠¶‰π†ÁÆóÊ≥ï„ÄÇ]]></content>
      <categories>
        <category>Big Data</category>
      </categories>
      <tags>
        <tag>Big Data</tag>
        <tag>Â§ßÊï∞ÊçÆ</tag>
        <tag>Spark</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Spark RDDÂ≠¶‰π†Á¨îËÆ∞]]></title>
    <url>%2Farticle%2FSparkRDD.html</url>
    <content type="text"><![CDATA[RDDÔºöResilient Distributed DatasetÔºàÂºπÊÄßÂàÜÂ∏ÉÂºèÊï∞ÊçÆÈõÜÔºâÔºåÊòØÂàÜÂ∏ÉÂºèÂÜÖÂ≠òÁöÑ‰∏Ä‰∏™ÊäΩË±°Ê¶ÇÂøµÔºåÊèê‰æõ‰∫Ü‰∏ÄÁßçÈ´òÂ∫¶ÂèóÈôêÁöÑÂÖ±‰∫´ÂÜÖÂ≠òÊ®°Âûã„ÄÇ RDDÂàÜ‰∏∫ActionÔºàÂä®‰ΩúÔºâÂíåTransformationÔºàËΩ¨Êç¢Ôºâ‰∏§ÁßçÊìç‰ΩúÁ±ªÂûã„ÄÇ RDDÁöÑËΩ¨Êç¢Êé•Âè£ÈÉΩÈùûÂ∏∏ÁÆÄÂçïÔºåÈÉΩÊòØÁ±ª‰ººmap„ÄÅfilter„ÄÅgroupBy„ÄÅjoinÁ≠âÁ≤óÁ≤íÂ∫¶ÁöÑÊï∞ÊçÆËΩ¨Êç¢Êìç‰Ωú„ÄÇ ÊâßË°åÊñπÂºèLazy FashionÔºàÊÉ∞ÊÄßË∞ÉÁî®Ôºâ ‚Äã DAGÔºöDirected Acyclic GraphÔºàÊúâÂêëÊó†ÁéØÂõæÔºâÔºåÂèçÊò†RDD‰πãÈó¥ÁöÑ‰æùËµñÂÖ≥Á≥ª„ÄÇ RDDËøêË°åËøáÁ®ã ÂàõÂª∫RDDÂØπË±°Ôºõ SparkContextË¥üË¥£ËÆ°ÁÆóRDD‰πãÈó¥ÁöÑ‰æùËµñÂÖ≥Á≥ªÔºåÊûÑÂª∫DAGÔºõ DAGSchedulerË¥üË¥£ÊääDAGÂõæÂàÜËß£ÊàêÂ§ö‰∏™StageÔºåÊØè‰∏™Stage‰∏≠ÂåÖÂê´‰∫ÜÂ§ö‰∏™TaskÔºåÊØè‰∏™Task‰ºöË¢´TaskSchedulerÂàÜÂèëÁªôÂêÑ‰∏™WorkerNode‰∏äÁöÑExecutorÂéªÊâßË°å„ÄÇ ÂèÇËÄÉÁ§∫‰æã12345text_file = sc.textFile("hdfs://skn-0exybxsb-hadoop-master:9000/use/ubuntu/sample1")counts = text_file.flatMap(lambda line: line.split(" "))\ .map(lambda word: (word, 1))\ .reduceByKey(lambda a, b: a + b)counts.collect()]]></content>
      <categories>
        <category>Big Data</category>
      </categories>
      <tags>
        <tag>Big Data</tag>
        <tag>Â§ßÊï∞ÊçÆ</tag>
        <tag>Spark</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[SparkÈõÜÁæ§ÁÆ°ÁêÜÊû∂ÊûÑ]]></title>
    <url>%2Farticle%2FSparkCluster.html</url>
    <content type="text"><![CDATA[SparkÈõÜÁæ§ÁÆ°ÁêÜÊû∂ÊûÑÂåÖÊã¨Ôºö ÈõÜÁæ§ËµÑÊ∫êÁÆ°ÁêÜÂô®ÔºàClusterManagerÔºâ ËøêË°å‰Ωú‰∏ö‰ªªÂä°ÁöÑÂ∑•‰ΩúËäÇÁÇπÔºàWorker NodeÔºâ ÊØè‰∏™Â∫îÁî®ÁöÑ‰ªªÂä°ÊéßÂà∂ËäÇÁÇπÔºàDriverÔºâ ÊØè‰∏™Â∑•‰ΩúËäÇÁÇπ‰∏äË¥üË¥£ÂÖ∑‰Ωì‰ªªÂä°ÁöÑÊâßË°åËøõÁ®ãÔºàExecutorÔºâ where ËµÑÊ∫êÁÆ°ÁêÜÂô®ÂèØ‰ª•Ëá™Â∏¶ÊàñMesosÊàñYARN SparkÈõÜÁæ§ÁÆ°ÁêÜÊµÅÁ®ã È¶ñÂÖà‰∏∫Â∫îÁî®ÊûÑÂª∫Ëµ∑Âü∫Êú¨ÁöÑËøêË°åÁéØÂ¢ÉÔºåÂç≥Áî±DriverÂàõÂª∫‰∏Ä‰∏™SparkContextÔºåËøõË°åËµÑÊ∫êÁöÑÁî≥ËØ∑„ÄÅ‰ªªÂä°ÁöÑÂàÜÈÖçÂíåÁõëÊéß„ÄÇ ËµÑÊ∫êÁÆ°ÁêÜÂô®‰∏∫ExecutorÂàÜÈÖçËµÑÊ∫êÔºåÂπ∂ÂêØÂä®ExecutorËøõÁ®ã„ÄÇ SparkContextÊ†πÊçÆRDDÁöÑ‰æùËµñÂÖ≥Á≥ªÊûÑÂª∫DAGÂõæÔºåDAGÂõæÊèê‰∫§ÁªôDAGSchedulerËß£ÊûêÊàêStageÔºåÁÑ∂ÂêéÊää‰∏Ä‰∏™‰∏™TaskSetÊèê‰∫§ÁªôÂ∫ïÂ±ÇË∞ÉÂ∫¶Âô®TaskSchedulerÂ§ÑÁêÜÔºõExecutorÂêëSparkContextÁî≥ËØ∑TaskÔºåTaskSchedulerÂ∞ÜTaskÂèëÊîæÁªôExecutorËøêË°åÔºåÂπ∂Êèê‰æõÂ∫îÁî®Á®ãÂ∫è‰ª£Á†Å„ÄÇ TaskÂú®Executor‰∏äËøêË°åÔºåÊääÊâßË°åÁªìÊûúÂèçÈ¶àÁªôTaskSchedulerÔºåÁÑ∂ÂêéÂèçÈ¶àÁªôDAGSchedulerÔºåËøêË°åÂÆåÊØïÂêéÂÜôÂÖ•Êï∞ÊçÆÂπ∂ÈáäÊîæÊâÄÊúâËµÑÊ∫ê „ÄÇ ‰ºòÁÇπ‰∏éHadoop MapReduceËÆ°ÁÆóÊ°ÜÊû∂Áõ∏ÊØîÔºåSparkÊâÄÈááÁî®ÁöÑExecutorÊúâ‰∏§‰∏™‰ºòÁÇπÔºö Âà©Áî®Â§öÁ∫øÁ®ãÊù•ÊâßË°åÂÖ∑‰ΩìÁöÑ‰ªªÂä°ÔºåÂáèÂ∞ë‰ªªÂä°ÁöÑÂêØÂä®ÂºÄÈîÄ„ÄÇ Executor‰∏≠Êúâ‰∏Ä‰∏™BlockManagerÂ≠òÂÇ®Ê®°ÂùóÔºå‰ºöÂ∞ÜÂÜÖÂ≠òÂíåÁ£ÅÁõòÂÖ±Âêå‰Ωú‰∏∫Â≠òÂÇ®ËÆæÂ§áÔºåÊúâÊïàÂáèÂ∞ëIOÂºÄÈîÄ„ÄÇ]]></content>
      <categories>
        <category>Big Data</category>
      </categories>
      <tags>
        <tag>Big Data</tag>
        <tag>Â§ßÊï∞ÊçÆ</tag>
        <tag>Spark</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[‰ªÄ‰πàÊòØSparkÔºü]]></title>
    <url>%2Farticle%2FWhatsSpark.html</url>
    <content type="text"><![CDATA[ÁÆÄ‰ªãÔºö‰∏Ä‰∏™Âõ¥ÁªïÈÄüÂ∫¶„ÄÅÊòìÁî®ÊÄßÂíåÂ§çÊùÇÂàÜÊûêÊûÑÂª∫ÁöÑÈÄöÁî®Â§ßÊï∞ÊçÆËÆ°ÁÆóÊ°ÜÊû∂„ÄÇ Êù•Ê∫êÔºöSparkÊúÄÂàùÁî±ÁæéÂõΩÂä†Â∑û‰ºØÂÖãÂà©Â§ßÂ≠¶ÔºàUCBerkeleyÔºâÁöÑAMPÂÆûÈ™åÂÆ§‰∫é2009Âπ¥ÂºÄÂèëÔºåÊòØÂü∫‰∫éÂÜÖÂ≠òËÆ°ÁÆóÁöÑÂ§ßÊï∞ÊçÆÂπ∂Ë°åËÆ°ÁÆóÊ°ÜÊû∂ÔºåÂèØÁî®‰∫éÊûÑÂª∫Â§ßÂûãÁöÑ„ÄÅ‰ΩéÂª∂ËøüÁöÑÊï∞ÊçÆÂàÜÊûêÂ∫îÁî®Á®ãÂ∫è„ÄÇ ‚Äã 2013Âπ¥SparkÂä†ÂÖ•ApacheÂ≠µÂåñÂô®È°πÁõÆÂêéÂèëÂ±ïËøÖÁåõÔºåÂ¶Ç‰ªäÂ∑≤Êàê‰∏∫ApacheËΩØ‰ª∂Âü∫Èáë‰ºöÊúÄÈáçË¶ÅÁöÑ‰∏âÂ§ßÂàÜÂ∏ÉÂºèËÆ°ÁÆóÁ≥ªÁªüÂºÄÊ∫êÈ°πÁõÆ‰πã‰∏ÄÔºàHadoop„ÄÅSpark„ÄÅStormÔºâ„ÄÇ ËøêË°åÈÄüÂ∫¶Âø´ÔºåÊ∂àËÄóËµÑÊ∫êÂ∞ë Âü∫‰∫éÂÜÖÂ≠òËÆ°ÁÆóÔºåÂÖ®Â±Ä‰ºòÂåñÁöÑÂ∑•‰ΩúÊµÅÁºñÊéí ÊØîMapReduceÂø´100ÂÄçÔºàÂÜÖÂ≠òÔºâÔºåÊàñ10ÂÄçÔºàÁ£ÅÁõòÔºâ ËÆ°ÁÆóË∑üÁùÄÊï∞ÊçÆËµ∞ ÁÆÄÂçïÊòìÁî®ÔºåÊîØÊåÅ‰∫§‰∫íÂºèÊü•ËØ¢ ÊòìÁî®ÁöÑAPIsÔºàPython, JAVA, Scala, and SQLÔºâ ‰∏∞ÂØåÁöÑÂÜÖÁΩÆÂ∫ìÂáΩÊï∞ ÂåÖÂê´Â§ö‰∏™Â∫ìÁöÑÂÖ®Ê†àÂºèÂπ≥Âè∞ÔºåËâØÂ•ΩÁöÑÁîüÊÄÅÁ≥ªÁªü ÂáèËΩªËøêÁª¥Ôºå‰∏îÂêÑÁªÑ‰ª∂‰πãÈó¥Êòì‰∫éÈõÜÊàê ÊîØÊåÅÊâÄÊúâHadoopÁîüÊÄÅÁ≥ªÁªü‰∏≠ÁöÑÊï∞ÊçÆÊ∫ê ÂèØ‰ª•Âü∫‰∫é‰∫ëËÆ°ÁÆó SparkÁîüÊÄÅÁ≥ªÁªüÁªÑ‰ª∂Â∫îÁî®Âú∫ÊôØ]]></content>
      <categories>
        <category>Big Data</category>
      </categories>
      <tags>
        <tag>Big Data</tag>
        <tag>Â§ßÊï∞ÊçÆ</tag>
        <tag>Spark</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MapReduce On YarnÂ∑•‰ΩúÂéüÁêÜ]]></title>
    <url>%2Farticle%2FMapReduceWihtYARN.html</url>
    <content type="text"><![CDATA[Áî®Êà∑ÂêëYarnÊèê‰∫§‰∏Ä‰∏™MapReduceÂ∫îÁî®ÔºåYarn‰ºöÂàÜ‰∏§‰∏™Èò∂ÊÆµËøêË°åÔºö ResourceManagerÂêØÂä®MRAppMaster ÂÖ∂‰∏≠ÔºåMapReduceÁöÑApplicationMasterË¥üË¥£ÁÆ°ÁêÜ‰Ωú‰∏öÁîüÂëΩÂë®Êúü MRAppMasterÂàõÂª∫Â∫îÁî®Á®ãÂ∫èÔºåÁî≥ËØ∑ËµÑÊ∫êÔºåÂπ∂ÁõëÊéßÂÖ∂ËøêË°åËøáÁ®ãÔºåÁõ¥Âà∞ËøêË°åÊàêÂäü MRAppMasterÁöÑ3ÁßçËøêË°åÊ®°ÂºèÔºöÊú¨Âú∞ÔºåuberÔºåÈùûuberÔºõ MapReduce on YarnÂ∑•‰ΩúÊµÅÁ®ãÔºö Áî®Êà∑ÂêëYARN‰∏≠Êèê‰∫§Â∫îÁî®Á®ãÂ∫è/‰Ωú‰∏öÔºåÂåÖÊã¨MRAppMasterÁ®ãÂ∫è„ÄÅÂêØÂä®MRAppMasterÁöÑÂëΩ‰ª§„ÄÅÁî®Êà∑Á®ãÂ∫èÁ≠âÔºõ ResourceManager‰∏∫‰Ωú‰∏öÂàÜÈÖçÁ¨¨‰∏Ä‰∏™ContainerÔºåÂπ∂‰∏éÂØπÂ∫îÁöÑNodeManagerÈÄö‰ø°ÔºåË¶ÅÊ±ÇÂÆÉÂú®Ëøô‰∏™Containter‰∏≠ÂêØÂä®ËØ•‰Ωú‰∏öÁöÑMRAppMasterÔºõ MRAppMasterÈ¶ñÂÖàÂêëResourceManagerÊ≥®ÂÜåÔºåËøôÊ†∑Áî®Êà∑ÂèØ‰ª•Áõ¥Êé•ÈÄöËøáResourceManagerÊü•ËØ¢‰Ωú‰∏öÁöÑËøêË°åÁä∂ÊÄÅÔºõÁÑ∂ÂêéÂÆÉÂ∞Ü‰∏∫ÂêÑ‰∏™‰ªªÂä°Áî≥ËØ∑ËµÑÊ∫êÂπ∂ÁõëÊéß‰ªªÂä°ÁöÑËøêË°åÁä∂ÊÄÅÔºåÁõ¥Âà∞ËøêË°åÁªìÊùü„ÄÇÂç≥ÈáçÂ§çÊ≠•È™§4-7Ôºõ MRAppMasterÈááÁî®ËΩÆËØ¢ÊñπÂºèÈÄöËøáRPCËØ∑Ê±ÇÂêëRMÁî≥ËØ∑ÂíåÈ¢ÜÂèñËµÑÊ∫êÔºõ MRAppMasterÁî≥ËØ∑Âà∞ËµÑÊ∫êÂêéÔºå‰æø‰∏éÂØπÂ∫îÁöÑNMÈÄö‰ø°ÔºåË¶ÅÊ±ÇÂÆÉÂêØÂä®‰ªªÂä°Ôºõ NodeManager‰ΩøÁî®ËÑöÊú¨ÂêØÂä®‰ªªÂä°ÔºàÁéØÂ¢ÉÂèòÈáèÔºåjarÂåÖÁ≠âÔºâÔºõ ÂêÑ‰∏™‰ªªÂä°ÈÄöËøáRPCÂçèËÆÆÂêëMRAppMasterÊ±áÊä•Ëá™Â∑±ÁöÑÁä∂ÊÄÅÂíåËøõÂ∫¶Ôºå‰ª•ËÆ©MRAppMaster ÈöèÊó∂ÊéåÊè°ÂêÑ‰ªªÂä°ÁöÑËøêË°åÁä∂ÊÄÅÔºå‰ªéËÄåÂèØ‰ª•Âú®‰ªªÂä°Â§±Ë¥•Êó∂ÈáçÊñ∞ÂêØÂä®‰ªªÂä°ÔºõÂú®‰Ωú‰∏öËøêË°åËøáÁ®ã‰∏≠ÔºåÁî®Êà∑ÂèØÈöèÊó∂ÈÄöËøáRPCÂêëApplicationMasterÊü•ËØ¢‰Ωú‰∏öÂΩìÂâçËøêË°åÁä∂ÊÄÅÔºõ ‰Ωú‰∏öÂÆåÊàêÂêéÔºåMRAppMasterÂêëResourceManagerÊ≥®ÈîÄÂπ∂ÂÖ≥Èó≠Ëá™Â∑±Ôºõ]]></content>
      <categories>
        <category>Big Data</category>
      </categories>
      <tags>
        <tag>Big Data</tag>
        <tag>Â§ßÊï∞ÊçÆ</tag>
        <tag>Hadoop</tag>
        <tag>MapReduce</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[‰ªÄ‰πàÊòØÂ§ßÊï∞ÊçÆÔºü]]></title>
    <url>%2Farticle%2FWhatsBigData.html</url>
    <content type="text"><![CDATA[‰ªÄ‰πàÊòØÂ§ßÊï∞ÊçÆÔºüÂõõ‰∏™‚ÄúV‚ÄùÔºö Êµ∑ÈáèÁöÑÊï∞ÊçÆËßÑÊ®°ÔºàVolumeÔºâ Âø´ÈÄüÁöÑÊï∞ÊçÆÊµÅËΩ¨ÂíåÂä®ÊÄÅÁöÑÊï∞ÊçÆ‰ΩìÁ≥ªÔºàVelocityÔºâ Â§öÊ†∑ÁöÑÊï∞ÊçÆÁ±ªÂûãÔºàVarietyÔºâ Â∑®Â§ßÁöÑÊï∞ÊçÆ‰ª∑ÂÄºÔºàValueÔºâ WikipediaÔºöÂ§ßÊï∞ÊçÆÊòØÊåáÁî®Â∏∏Áî®ÁöÑËΩØ‰ª∂Ëé∑Âèñ„ÄÅÁÆ°ÁêÜÂíåÂ§ÑÁêÜÊï∞ÊçÆÊâÄËÄóÊó∂Èó¥Ë∂ÖËøáÂèØÂÆπÂøçÊó∂Èó¥ÁöÑÊï∞ÊçÆÈõÜÔºõ Êï∞ÊçÆ‰ªìÂ∫ìorÁîüÂëΩÂë®Êúü]]></content>
      <categories>
        <category>Big Data</category>
      </categories>
      <tags>
        <tag>Big Data</tag>
        <tag>Â§ßÊï∞ÊçÆ</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÂºÄÊú∫Âá∫Áé∞‚ÄúCPU fan error‚ÄùÈîôËØØÁöÑËß£ÂÜ≥ÊñπÊ°à]]></title>
    <url>%2Farticle%2FCPUFanError.html</url>
    <content type="text"><![CDATA[ÈóÆÈ¢òÊèèËø∞ÔºöÂºÄÊú∫Âá∫Áé∞‚ÄúCPU fan error‚ÄùÈîôËØØÁöÑËß£ÂÜ≥ÊñπÊ°à ÂéüÂõ†ÂàÜÊûêÔºö CPUÈ£éÊâáÁ∫øÊé•Ëß¶‰∏çËâØ Á≥ªÁªüBIOSÊ£ÄÊµã‰∏çÂà∞CPUÈ£éÊâáÁöÑËΩ¨ÈÄü È£éÊâáÂ∑•‰Ωú‰∏çÊ≠£Â∏∏ÊàñËΩ¨ÈÄüÂ§™‰Ωé È£éÊâáÁîµÊ∫êÁ∫øÊé•Èîô‰∫Ü ‰∏ªÊùøÁîµÊ±†Ê≤°Áîµ‰∫Ü Ëß£ÂÜ≥ÊñπÊ°àÔºö CPUÈ£éÊâáÁ∫øÊé•Ëß¶‰∏çËâØ ÈáçÊñ∞Â∞ÜCPUÈ£éÊâáÁ∫øÊãîÊèí‰∏ã Á≥ªÁªüBIOSÊ£ÄÊµã‰∏çÂà∞CPUÈ£éÊâáÁöÑËΩ¨ÈÄü ÂºÄÊú∫ÂêéÊåâ„ÄêDel„ÄëËøõÂÖ•„ÄêBIOS„ÄëÈÄâÈ°πÔºåËøõÂÖ•„ÄêPower‚ÜíHardware monitor„ÄëÔºå‰Ω†‰ºöÁúãÂà∞Êúâ‰∏â‰∏™Âú®‰∏ÄËµ∑ÁöÑÂàÜÂà´ÊòØCPU FAN SPEED;CHASSIS FANSPEED;POWER FAN SPEEDÔºåÂ∞ÜÁ¨¨‰∏ÄÈ°πÊîπÊàê„ÄêIGNORED„ÄëÔºåÁ¨¨‰∫åÈ°πÊîπÊàê„ÄêN/A„ÄëÔºåÁ¨¨‰∏âÈ°πÊîπÊàê„ÄêIGNORED„Äë„ÄÇ È£éÊâáÂ∑•‰Ωú‰∏çÊ≠£Â∏∏ÊàñËΩ¨ÈÄüÂ§™‰Ωé È£éÊâáÂ∑•‰ΩúÊó∂Èó¥ËøáÈïøÔºåÈáåÈù¢ÁöÑÊ∂¶ÊªëÊ≤πÂπ≤‰∫ÜÔºåÂØºËá¥È£éÊâáËΩ¨ÈÄüÂèòÊÖ¢‰∫ÜÔºåÂú®È£éÊâáÁöÑÂÜÖÈÉ®Âä†ÁÇπÊ∂¶ÊªëÊ≤πÔºåÂä†Â§ßÈ£éÊâáÁöÑËΩ¨ÈÄü‰ºöÈôç‰ΩéÊÇ®Êú∫ÁÆ±ÂÜÖÈÉ®ÁöÑÊ∏©Â∫¶Ôºå‰ª•Ëá≥‰∫é‰∏ç‰ºö‰Ωø„ÄêCPU„ÄëÁÉßÂùè„ÄÇ È£éÊâáÁîµÊ∫êÁ∫øÊé•Èîô‰∫Ü ‰∏ÄËà¨‰∏ªÊùø‰∏äÈÉΩÊúâÂ§ö‰∏™È£éÊâáÁöÑÊèíÂè£Ôºå„ÄêCPU„ÄëÁöÑÈ£éÊâáÂ∫îËØ•ÊèíÂú®„ÄêCPU_F„ÄëËøô‰∏™‰∏äÈù¢ÔºåÂ¶ÇÊûú‰∏çÊèíÂú®ËøôÈáåËôΩÁÑ∂È£éÊâáÊ≠£Â∏∏Ôºå‰ΩÜÊòØ‰∏ªÊùø‰ºöÊèêÁ§∫ÈîôËØØ„ÄÇÂ∞Ü„ÄêCPU„ÄëÈ£éÊâáÁöÑÁîµÊ∫êÊèíÂ§¥ÊèíÂà∞Áõ∏Â∫îÁöÑ‰ΩçÁΩÆÔºå‰∏ÄËà¨ÈóÆÈ¢òÂèØ‰ª•Ëß£ÂÜ≥„ÄÇ ‰∏ªÊùøÁîµÊ±†Ê≤°Áîµ‰∫Ü Â∞Ü‰∏ªÊùø‰∏äÁöÑ„ÄêCOMS„ÄëÁîµÊ±†ÊãÜ‰∏ãÊù•ÔºåÁÑ∂ÂêéÁ≠âÂá†ÂàÜÈíüÂêéË£ÖÂõûÂéªÔºåÂ∞±ÂèØ‰ª•Â∞Ü‰∏ªÊùø„ÄêCOMS„ÄëÊîæÁîµÊÅ¢Â§çÈªòËÆ§;ÊúÄÂêéÂú®„ÄêBIOS„ÄëÈáåÈù¢‰ΩøÁî®ÈªòËÆ§ËÆæÁΩÆ„ÄÇ ‰ª•‰∏äÂá†ÁÇπÂ∞±ÊòØÂºÄÊú∫Âá∫Áé∞„ÄêCPU fan error„ÄëÁöÑÊèêÁ§∫ÁöÑÂéüÂõ†ÂíåËß£ÂÜ≥ÂäûÊ≥ïÔºåCPUÂíåÈ£éÊâá‰πãÈó¥Á°ÖËÉ∂Ê≤°‰∫ÜÔºåÂØºËá¥ÁÉ≠ÈáèÊï£Âèë‰∏çÂá∫ÂéªÔºåÊú∫ÁÆ±ÂÜÖÁÅ∞Â∞òÂ§™Â§ö‰πü‰ºöÂØºËá¥ÂºÄÊú∫Âá∫Áé∞„ÄêCPU fan error„ÄëÁöÑÊèêÁ§∫]]></content>
      <categories>
        <category>Issues</category>
      </categories>
      <tags>
        <tag>Issues</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Âü∫‰∫éROSÊµãËØïCaffe MobileNet-SSD„ÄêÈÄöÁî®„Äë]]></title>
    <url>%2Farticle%2FTestCaffeMobileNetSSD.html</url>
    <content type="text"><![CDATA[Âú®ÊµãËØïÁöÑËøáÁ®ã‰∏≠ÂíåÁæ§Âèã‰ª¨‰ªîÁªÜÁöÑÊé¢ËÆ®‰∫Ü‰∏ãÔºåÂæàÂø´ÁöÑËß£ÂÜ≥‰∫ÜÊµãËØï‰∏≠ÈÅáËßÅÁöÑ‰∏Ä‰∫õÁªÜËäÇÈóÆÈ¢òÔºåÂ≠¶‰∏úË•øËøòÊòØÂ∞ΩÈáèÂíåÂë®Âõ¥ÁöÑ‰∫∫‰∏ÄËµ∑Â≠¶ÔºåÊØïÁ´üËÄÅËØùËØ¥Ëøá‚Äú‰∫∫Â§öÂäõÈáèÂ§ßÔºÅ‚Äù„ÄÇ Ëá™Â∑±‰∏Ä‰∏™‰∫∫‰πü‰∏çÊòØ‰∏çÂèØ‰ª•Ôºå‰ΩÜÊòØÂæÄÂæÄË¶ÅÊØîÂæàÂ§ö‰∫∫‰∏ÄËµ∑Êé¢ËÆ®Ëä±Ë¥π‰∏§ÂÄçÊàñËÄÖ‰∫îÂÖ≠ÂÄçÁöÑÊó∂Èó¥ÔºåÊâÄ‰ª•Âº∫ÁÉàÂª∫ËÆÆË¶ÅÊúâÈÇ£‰πàÂá†‰∏™ÂÖ±ÂêåÂ≠¶‰π†ÁöÑÂ∞èÂúàÂ≠ê„ÄÇ ‰øÆÊîπdemo.py12# ËÆæÁΩÆÊàêÁªùÂØπË∑ØÂæÑcaffe_root = '/home/cong/catkin_ws/src/ros_caffe/caffe/' ‰øÆÊîπsolver_test.prototxtÊúâGPUÔºåÂàô‰∏çÈúÄË¶Å‰øÆÊîπÈÖçÁΩÆÊñá‰ª∂ÔºåÂ¶ÇÊûúÊ≤°ÊúâGPUÔºåÂàôÈúÄË¶Å‰øÆÊîπÈÖçÁΩÆÊñá‰ª∂ solver_test.prototxt 123# Â∞Üsolver_mode:GPU Êîπ‰∏∫ solver_mode:CPU# solver_mode:GPUsolver_mode:CPU ËøêË°ådemo.py12cd catkin_ws/src/ros_caffe/caffe/examples/MobileNet-SSD/python demp.py Âú®ÂõæÂÉèÊ£ÄÊµãËæìÂá∫ÁöÑÁïåÈù¢ÔºåÊåâÂõûËΩ¶ÊàñËÄÖÂÖ∂‰ªñÊåâÈîÆÔºå‰ºöÊ£ÄÊµã‰∏ã‰∏ÄÂº†„ÄÇ Debugs1234# BugImportError: No module named skimage.io# Debugpip install scikit-image 1234# BugImportError: No module google.protobuf.internal# Debugpip install protobuf ÂÆåÊàê‰∏äÈù¢ÂÆâË£ÖÊ≠•È™§ÂêéÔºåÊâßË°å‰ª•‰∏ãÂëΩ‰ª§ÈáçÊñ∞ÁºñËØëÔºö 1234make cleanmake -j8make pymake test -j8]]></content>
      <categories>
        <category>Deep Learning</category>
      </categories>
      <tags>
        <tag>Caffe</tag>
        <tag>SSD</tag>
        <tag>ROS</tag>
        <tag>MobileNet</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Âü∫‰∫éROSÂÆâË£ÖCaffeÂíåSSD„ÄêÈÄöÁî®„Äë]]></title>
    <url>%2Farticle%2FROSCaffeSSDMobileNet.html</url>
    <content type="text"><![CDATA[Enter password to read. Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>ROS</category>
      </categories>
      <tags>
        <tag>Caffe</tag>
        <tag>SSD</tag>
        <tag>ROS</tag>
        <tag>MobileNet</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ros::spin()Âíåros::spinOnce()Ëß£Êûê]]></title>
    <url>%2Farticle%2FROSSpinAndSpinOnce.html</url>
    <content type="text"><![CDATA[ros::spin()ËøôÂè•ËØùÁöÑÊÑèÊÄùÊòØÂæ™ÁéØ‰∏îÁõëÂê¨ÂèçÈ¶àÂáΩÊï∞ÔºàcallbackÔºâ„ÄÇÂæ™ÁéØÂ∞±ÊòØÊåáÁ®ãÂ∫èËøêË°åÂà∞ËøôÈáåÔºåÂ∞±‰ºö‰∏ÄÁõ¥Âú®ËøôÈáåÂæ™ÁéØ‰∫Ü„ÄÇÁõëÂê¨ÂèçÈ¶àÂáΩÊï∞ÁöÑÊÑèÊÄùÊòØÔºåÂ¶ÇÊûúËøô‰∏™ËäÇÁÇπÊúâcallbackÂáΩÊï∞ÔºåÈÇ£ÂÜô‰∏ÄÂè•ros::spin()Âú®ËøôÈáåÔºåÂ∞±ÂèØ‰ª•Âú®ÊúâÂØπÂ∫îÊ∂àÊÅØÂà∞Êù•ÁöÑÊó∂ÂÄôÔºåËøêË°åcallbackÂáΩÊï∞ÈáåÈù¢ÁöÑÂÜÖÂÆπ„ÄÇÂ∞±ÁõÆÂâçËÄåË®ÄÔºå‰ª•ÊàëÊÑöËßÅÔºåÊàëËßâÂæóÂÜôËøôÂè•ËØùÈÄÇÁî®‰∫éÂÜôÂú®Á®ãÂ∫èÁöÑÊú´Â∞æÔºàÂõ†‰∏∫ÂÜôÂú®ËøôÂè•ËØùÂêéÈù¢ÁöÑ‰ª£Á†Å‰∏ç‰ºöË¢´ÊâßË°åÔºâÔºåÈÄÇÁî®‰∫éËÆ¢ÈòÖËäÇÁÇπÔºå‰∏îËÆ¢ÈòÖÈÄüÂ∫¶Ê≤°ÊúâÈôêÂà∂ÁöÑÊÉÖÂÜµ„ÄÇ ros::spinOnce()ËøôÂè•ËØùÁöÑÊÑèÊÄùÊòØÁõëÂê¨ÂèçÈ¶àÂáΩÊï∞ÔºàcallbackÔºâ„ÄÇÂè™ËÉΩÁõëÂê¨ÂèçÈ¶àÔºå‰∏çËÉΩÂæ™ÁéØ„ÄÇÊâÄ‰ª•ÂΩì‰Ω†ÈúÄË¶ÅÁõëÂê¨‰∏Ä‰∏ãÁöÑÊó∂ÂÄôÔºåÂ∞±Ë∞ÉÁî®‰∏Ä‰∏ãËøô‰∏™ÂáΩÊï∞„ÄÇËøô‰∏™ÂáΩÊï∞ÊØîËæÉÁÅµÊ¥ªÔºåÂ∞§ÂÖ∂ÊòØÊàëÊÉ≥ÊéßÂà∂Êé•Êî∂ÈÄüÂ∫¶ÁöÑÊó∂ÂÄô„ÄÇÈÖçÂêàros::ok()ÊïàÊûúÊûÅ‰Ω≥„ÄÇ‰æãÂ¶Ç 123456ros::Rate loop_rate(10);while(ros::ok())&#123; ros::spinOnce(); loop_rate.sleep();&#125; ÂèØ‰ª•ÊéßÂà∂10HzÈÄüÂ∫¶ÔºåËøêË°åcallbackÂáΩÊï∞ÔºåÈùûÂ∏∏Êñπ‰æø„ÄÇÂ¶ÇÊûúÂè™Êúâ 1234while(ros::ok())&#123; ros::spinOnce();&#125; ËøôÂ∞±Á≠â‰∫éros::spin()„ÄÇ Ê≥®ÊÑèËøô‰∏§‰∏™ÂáΩÊï∞Âè™ÂíåÊé•Êî∂ÂõûË∞ÉÂáΩÊï∞ÔºàcallbackÔºâÊúâÂÖ≥ÔºåÂíåÂèëÂ∏ÉÂπ∂Ê≤°ÊúâÂÖ≥Á≥ª„ÄÇÂ¶ÇÊûúÊÉ≥Âæ™ÁéØÂèëÂ∏ÉÔºåÂè™ËÉΩÂæ™ÁéØÂÜôpublish()„ÄÇËßÅÂèÇËÄÉÊñáÁåÆ[1]ÁöÑÂèëÂ∏ÉËäÇÁÇπÁ§∫‰æã„ÄÇÊàëËøôÊ¨°Âá∫ÈóÆÈ¢òÂ∞±ÊòØÂíåÂèëÂ∏ÉÂºÑÊ∑∑‰∫Ü„ÄÇÊàë‰ª•‰∏∫ÂÜô‰∫Üspin()ÂèØ‰ª•Âæ™ÁéØÂèëÂ∏ÉÁöÑÔºåÂêéÊù•ÂèëÁé∞Âπ∂‰∏çÊòØ„ÄÇ ÂèÇËÄÉÊñáÁåÆ Writing a Simple Publisher and Subscriber (C++) Significance of ros::spinOnce()]]></content>
      <categories>
        <category>ROS</category>
      </categories>
      <tags>
        <tag>ROS</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Âü∫‰∫éROS‰∏éGazeboÁöÑPixhawk‰ªøÁúü]]></title>
    <url>%2Farticle%2FROSGazeboPixhawk.html</url>
    <content type="text"><![CDATA[ÂøÉË∑ØÂéÜÁ®ã Âõ†‰∏∫Âú®‰πãÂâçÊê≠Âª∫Ê∑±Â∫¶Â≠¶‰π†CaffeÊ°ÜÊû∂ÁöÑËøáÁ®ã‰∏≠ÂÆâË£Ö‰∫ÜAnacondaÔºåÂõ†Ê≠§ÂêéÈù¢Êê≠Âª∫Pixhawk+Gazebo‰ªøÁúüÁéØÂ¢ÉÊó∂Ôºå‰∏çÊñ≠Âá∫ÈîôÔºàÈîôËØØÂ¶Ç‰∏ãÊñπÊâÄÁ§∫Ôºâ„ÄÇ ÂèçÂèçÂ§çÂ§çÂç∏ËΩΩÂÆâË£ÖÁõ∏ÂÖ≥ÁªÑ‰ª∂ÔºåÂ∞ùËØï‰∫ÜÂêÑÁßçÂäûÊ≥ïÔºåËä±‰∫ÜËá≥Â∞ë4Â§©Êó∂Èó¥ÔºåÊúÄÁªàËøòÊòØÊ≤°ËÉΩËß£ÂÜ≥ÈóÆÈ¢ò„ÄÇ ‰πãÂêéÔºå‰∏∫‰∫ÜÊéíÈô§ÂÖ∂‰ªñÂõ†Á¥†ÂΩ±ÂìçÔºåÊàëÂú®Windows‰∏ãÈù¢Áõ¥Êé•Êê≠‰∫ÜËôöÊãüÊú∫ÔºåÂ∞ùËØïÁùÄ‰∏ÄÊ≠•Ê≠•Êê≠Âª∫ÔºåÁªà‰∫éÂèØ‰ª•Ë∑ëÈÄö‰∫Ü„ÄÇ Âú®ËøôÂá†Â§©ÁöÑÊë∏Áà¨ÊªöÊâìÁöÑËøáÁ®ã‰∏≠ÔºåËøáÁ®ãËôΩÁÑ∂ÁÖéÁÜ¨Ôºå‰ΩÜËá™Â∑±‰πüÂ≠¶‰π†‰∫Ü‰∏çÂ∞ëLinuxÁõ∏ÂÖ≥Áü•ËØÜÔºåÂØπËøô‰∏™Á≥ªÁªü‰∫ÜËß£ÁöÑÁ®ãÂ∫¶‰πüÊØî‰ª•ÂâçÊ∑±‰∫Ü‰∫õ„ÄÇ 123456789&gt;/home/cong/src/Firmware/build/posix_sitl_default/build_gazebo/Float.pb.h:12:2: error: &gt;#error This file was generated by a newer version of protoc which is&gt; ^&gt;/home/cong/src/Firmware/build/posix_sitl_default/build_gazebo/Float.pb.h:13:2: error: &gt;#error incompatible with your Protocol Buffer headers. Please update&gt; ^&gt;/home/cong/src/Firmware/build/posix_sitl_default/build_gazebo/Float.pb.h:14:2: error: &gt;#error your headers.&gt; ÂÆâË£ÖROS‰∏ÄÂÆöË¶ÅÁ°ÆÂÆöUbuntu‰∏éROSÁöÑÁâàÊú¨ÂØπÂ∫î Â¶ÇÊûúÂÆâË£ÖÁöÑÊòØros-kinetic-desktop-fullÔºåÂÖ∂Ëá™Â∏¶gazebo7 ROSÂèëÂ∏ÉÊó•Êúü ROSÁâàÊú¨ ÂØπÂ∫îUbutnuÁâàÊú¨ 2016.3 ROS Kinetic Kame Ubuntu 16.04 (Xenial) / Ubuntu 15.10 (Wily) 2015.3 ROS Jade Turtle Ubuntu 15.04 (Wily) / Ubuntu LTS 14.04 (Trusty) 2014.7 ROS Indigo Igloo Ubuntu 14.04 (Trusty) 2013.9 ROS Hydro Medusa Ubuntu 12.04 LTS (Precise) 2012.12 ROS Groovy Galapagos Ubuntu 12.04 (Precise) ‚Ä¶ ‚Ä¶ ‚Ä¶ Ê∑ªÂä†Ê∫êÔºö 1sudo sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" &gt; /etc/apt/sources.list.d/ros-latest.list' ÊàñÊ∑ªÂä†ÂõΩÂÜÖÊ∫êÔºö 1sudo sh -c '. /etc/lsb-release &amp;&amp; echo "deb http://mirrors.ustc.edu.cn/ros/ubuntu/ $DISTRIB_CODENAME main" &gt; /etc/apt/sources.list.d/ros-latest.list' ËÆæÁΩÆÁßòÈí•Ôºö 1sudo apt-key adv --keyserver hkp://ha.pool.sks-keyservers.net:80 --recv-key 0xB01FA116 ÂÆâË£ÖÊúÄÊñ∞Ê°åÈù¢ÁâàÔºö 1234# Êõ¥Êñ∞Ê∫êsudo apt-get update# ÂÆâË£Ö ros-kinetic-desktopsudo apt-get install ros-kinetic-desktop-full ÂàùÂßãÂåñROSÂàùÂßãÂåñrosdepÔºö 12sudo rosdep initrosdep update ÂàùÂßãÂåñÁéØÂ¢ÉÂèòÈáè: 12echo "source /opt/ros/kinetic/setup.bash" &gt;&gt; ~/.bashrcsource ~/.bashrc ‰∏äÈù¢‰∏§Âè•ÈùûÂ∏∏ÈùûÂ∏∏ÈáçË¶ÅÔºåÂæàÂ§öÂ∞è‰ºô‰º¥Âú®Êó•Â∏∏ÁöÑÂºÄÂèëËøáÁ®ã‰∏≠ÔºåÊúâÁöÑÊâæ‰∏çÂà∞ Package, Êâæ‰∏çÂà∞node, ÂæàÂ§öÊÉÖÂÜµ‰∏ãÈÉΩÊòØÊ≤°ÊúâÊ∑ªÂä†source„ÄÇ ÂàõÂª∫catkinÂ∑•‰ΩúÁ©∫Èó¥Ôºö 1234mkdir -p ~/catkin_ws/srccd ~/catkin_ws#ÂèØ‰ª•ÊµãËØï‰∏ãcatkin_make ÂÆâË£ÖMAVROS1sudo apt-get install ros-kinetic-mavros ros-kinetic-mavros-extras ros-kinetic-control-toolbox ‰∏ãËΩΩ‰∏Ä‰∫õGeoid Model datasetÔºö 1sudo /opt/ros/kinetic/lib/mavros/install_geographiclib_datasets.sh Â§ñÈÉ®ÊéßÂà∂Á®ãÂ∫èÂàõÂª∫Â§ñÈÉ®ÊéßÂà∂Á®ãÂ∫èÂåÖ 12cd ~/catkin_ws/srccatkin_create_pkg offboard roscpp mavros geometry_msgs Ëøô‰∏ÄÊ≠•‰ºöÂàõÂª∫‰∏Ä‰∏™Âêç‰∏∫offboardÁöÑÊñ∞Á®ãÂ∫èÂåÖÔºåËøô‰∏™Á®ãÂ∫èÂåÖ‰æùËµñ‰∫éroscpp „ÄÅmavros‰ª•Âèägeometry_msgs„ÄÇ Âú®offboardÁõÆÂΩï‰∏ãÁîüËá™Âä®Êàê‰∏§‰∏™Êñá‰ª∂Â§πincludeÂíåsrc„ÄÇ Â∞ÜÂ§ñÈÉ®ÊéßÂà∂‰æãÁ®ãoffboard_node.cppÊîæÂÖ•ÂàöÂàöÁîüÊàêÁöÑsrcÁõÆÂΩï‰∏ã„ÄÇÁÑ∂Âêé‰øÆÊîπ/catkin_ws/src/offboardÁõÆÂΩï‰∏ãÁöÑCMakeLists.txtÊñá‰ª∂„ÄÇÂèñÊ∂àÊéâ‰∏Ä‰∫õÊ≥®ÈáäÔºåÁîüÊàêÁõ∏Â∫îËäÇÁÇπÔºàÂê¶Âàô‰ºöÂá∫Áé∞Êâæ‰∏çÂà∞ËäÇÁÇπÁöÑÈîôËØØÔºâ„ÄÇ ÁºñËØë 12cd ~/catkin_wscatkin_make ‰ªøÁúü1234567891011# Terminal 1 ÂàáÊç¢Âà∞Âõ∫‰ª∂ÁõÆÂΩïcd ~/src/Firmware# ÂêØÂä®gazebo‰ªøÁúümake posix_sitl_default gazebo# Terminal 2 ÂêØÂä®MAVROS,ÈìæÊé•Âà∞Êú¨Âú∞ROSroslaunch mavros px4.launch fcu_url:="udp://:14540@127.0.0.1:14557"# Terminal 3 ËøêË°åÂ§ñÈÉ®ÊéßÂà∂Á®ãÂ∫èrosrun offboard offboard_node# Ëã•Âá∫Áé∞ [rospack] Error: package 'offboard' not found ÊâßË°å‰∏ãÈù¢‰∏§Ë°åÂëΩ‰ª§# echo "source ~/catkin_ws/devel/setup.bash" &gt;&gt; ~/.bashrc# source ~/.bashrc Debugs123456789101112# Bug[FATAL] [1524021465.593366921]: UAS: GeographicLib exception: File not readable /usr/share/GeographicLib/geoids/egm96-5.pgm | Run install_geographiclib_dataset.sh script in order to install Geoid Model dataset!===============================================================================REQUIRED process [mavros-2] has died!process has finished cleanlylog file: /home/cong/.ros/log/0f7b4d4e-42b7-11e8-b72f-3464a913a149/mavros-2*.logInitiating shutdown!===============================================================================# Debugsudo /opt/ros/kinetic/lib/mavros/install_geographiclib_datasets.sh 123456# BugÊâæ‰∏çÂà∞empyÊàñtoml# Debugsudo apt-get install python-pippip install toml]]></content>
      <categories>
        <category>UAV</category>
      </categories>
      <tags>
        <tag>ROS</tag>
        <tag>Pixhawk</tag>
        <tag>Gazebo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Ubuntu‰∏ãPixhawkÁéØÂ¢ÉÊê≠Âª∫]]></title>
    <url>%2Farticle%2FPixhawkOnUbuntu.html</url>
    <content type="text"><![CDATA[ÁΩë‰∏äÂæàÂ§öÂçöÂÆ¢‰∏≠‰ªãÁªçÁöÑÊñπÊ≥ïÂ§ßÂ§öÊØîËæÉ‰πÖËøúÁöÑ‰∫ÜÔºåËá™Â∑±ÁªºÂêàÂèÇËÄÉ‰∫Ü‰∏çÂ∞ëÂçöÂÆ¢ÁöÑËøáÁ®ã‰∏≠ÔºåËøòÊòØË∏©‰∫ÜÂæàÂ§öÂùëÔºåÁâπÊÄªÁªì‰∏ãÊù•Ôºå‰ª•‰æøÂêéÈù¢ÈáçÊê≠ÁéØÂ¢ÉÊó∂‰πãÈúÄ„ÄÇ ÂÆòÊñπÁöÑÈÖçÁΩÆÊïôÁ®ã ÂâçÊúüÂáÜÂ§á ËÆæÁΩÆÊùÉÈôê 1sudo usermod -a -G dialout $USER ÂÆâË£ÖÁõ∏ÂÖ≥Â∑•ÂÖ∑ 123456789sudo add-apt-repository ppa:george-edison55/cmake-3.x -ysudo apt-get update# ÂøÖÂ§áËΩØ‰ª∂ python git qtsudo apt-get install python-argparse git-core wget zip python-empy qtcreator cmake build-essential genromfs -y# ‰ªøÁúüÂ∑•ÂÖ∑sudo add-apt-repository ppa:openjdk-r/ppasudo apt-get updatesudo apt-get install openjdk-8-jresudo apt-get install ant protobuf-compiler libeigen3-dev libopencv-dev openjdk-8-jdk openjdk-8-jre clang-3.5 lldb-3.5 -y Âç∏ËΩΩÊ®°ÂºèÁÆ°ÁêÜÂô® 1sudo apt-get remove modemmanager Êõ¥Êñ∞ÂåÖÂàóË°®ÂíåÂÆâË£Ö‰∏ãÈù¢ÁöÑ‰æùËµñÂåÖ 1234567sudo add-apt-repository ppa:terry.guo/gcc-arm-embedded -ysudo add-apt-repository ppa:team-gcc-arm-embedded/ppasudo apt-get updatesudo apt-get install python-serial openocd \ flex bison libncurses5-dev autoconf texinfo build-essential \ libftdi-dev libtool zlib1g-dev \ python-empy -y Â∑•ÂÖ∑ÈìæÂÆâË£ÖÔºàËã•gcc-arm-none-eabiÁâàÊú¨‰∏çÂØπÔºâÔºàÈùûÂøÖÈ°ªÔºâ Â¶ÇÊûú‰ª•ÂâçË£ÖËøáÂ∑•ÂÖ∑ÈìæÔºåÂà†Èô§ÊÆã‰Ωô 12sudo apt-get remove gcc-arm-none-eabi gdb-arm-none-eabi binutils-arm-none-eabi gcc-arm-embeddedsudo add-apt-repository --remove ppa:team-gcc-arm-embedded/ppa ÂÆâË£ÖÂ∑•ÂÖ∑Èìæ ÁâπÊÆäÂéüÂõ†ÔºåÊé®Ëçê‰ΩøÁî®ÊµèËßàÂô®‰∏ãËΩΩÔºöhttps://launchpad.net/gcc-arm-embedded/5.0/5-2016-q2-update/+download/gcc-arm-none-eabi-5_4-2016q2-20160622-linux.tar.bz2 1234567pushd .cd ~tar -jxf gcc-arm-none-eabi-5_4-2016q2-20160622-linux.tar.bz2exportline="export PATH=$HOME/gcc-arm-none-eabi-5_4-2016q2/bin:\$PATH"if grep -Fxq "$exportline" ~/.profile; then echo nothing to do ; else echo $exportline &gt;&gt; ~/.profile; fi. ~/.profilepopd ËøôÊòØÂÆâË£ÖÊúÄÊñ∞ÁöÑÂ∑•ÂÖ∑ÈìæÔºåÁâàÊú¨ÊòØ5.4„ÄÇ ÂÆâË£ÖËøáÁ®ã ‰∏ãËΩΩ‰ª£Á†Å 123mkdir -p ~/srccd ~/srcgit clone https://github.com/PX4/Firmware.git ÂàùÂßãÂåñ 123cd Firmware# ‰∏ãËΩΩÁõ∏ÂÖ≥Â≠êÊ®°Âùógit submodule update --init --recursive ÁºñËØë 1make px4fmu-v2_default ÊàêÂäüÂêéÊòæÁ§∫Ôºö 12345[100%] Built target nuttx_px4fmu-v2_default.elfScanning dependencies of target px4[100%] Generating px4fmu-v2.bin[100%] Creating /home/cong/src/Firmware/build/px4fmu-v2_default/px4fmu-v2_default.px4[100%] Built target px4 Ëã•Êä•ÈîôÔºö 1234-- Configuring incomplete, errors occurred!make[1]: *** /root/src/Firmware/build/nuttx_px4fmu-v2_default: No such file or directory. Stop.Makefile:154: recipe for target 'px4fmu-v2_default' failedmake: *** [px4fmu-v2_default] Error 2 Ëß£ÂÜ≥ÂäûÊ≥ïÔºöÂÆâË£ÖÊúÄÊñ∞gcc-arm-none-eabiÁâàÊú¨ ‰∏ä‰º†Pixhawk1sudo make px4fmu-v2_default upload Debug:ÂÜÖÂ≠òÊ∫¢Âá∫Ôºö https://dev.px4.io/en/debug/faq.html 12345678910region `flash' overflowed by 24405 bytescollect2: error: ld returned 1 exit statusplatforms/nuttx/CMakeFiles/nuttx_px4fmu-v2_default.elf.dir/build.make:187: recipe for target 'nuttx_px4fmu-v2_default.elf' failedmake[3]: *** [nuttx_px4fmu-v2_default.elf] Error 1CMakeFiles/Makefile2:5057: recipe for target 'platforms/nuttx/CMakeFiles/nuttx_px4fmu-v2_default.elf.dir/all' failedmake[2]: *** [platforms/nuttx/CMakeFiles/nuttx_px4fmu-v2_default.elf.dir/all] Error 2Makefile:105: recipe for target 'all' failedmake[1]: *** [all] Error 2Makefile:153: recipe for target 'px4fmu-v2_default' failedmake: *** [px4fmu-v2_default] Error 2 Ëß£ÂÜ≥ÊñπÊ≥ïÔºö ÁºñËØëÂô®ÁâàÊú¨Â§™‰Ωé„ÄÇÂ∞Üarm-none-eabiÂçáÁ∫ßÂà∞ÊúÄÊñ∞ÁâàÊú¨ ÂèÇËÄÉÊú¨Êñá‰∏äÈù¢ÁöÑÊïôÁ®ã ÂáèÂ∞ë‰∏çÂøÖË¶ÅÁöÑÊ®°Âùó /Firmware/cmake/configs/nuttx_px4fmu-v2_default.cmake Ê≥®ÈáäÔºö 123456789#drivers/px4flow#drivers/distance_sensor/ll40ls#drivers/distance_sensor/mb12xx#drivers/distance_sensor/sf0x#drivers/distance_sensor/sf1xx#drivers/distance_sensor/srf02#drivers/distance_sensor/srf02_i2c#drivers/distance_sensor/teraranger#drivers/distance_sensor/tfmini ‚Äã]]></content>
      <categories>
        <category>UAV</category>
      </categories>
      <tags>
        <tag>Pixhawk</tag>
        <tag>Ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Âü∫‰∫éROSÂíå MAVROSÂØπPixhawkËøõË°åÂ§ñÈÉ®ÊéßÂà∂]]></title>
    <url>%2Farticle%2FUsingROSAndMAVROSOffboardControlPixhawk.html</url>
    <content type="text"><![CDATA[Ê¶ÇËø∞PIxhawkÔºà‰∏≠ÊñáËØë‰∏∫PX4ÔºâÊòØ‰∏Ä‰∏™ËΩØ„ÄÅÁ°¨‰ª∂ÂºÄÊ∫êÈ°πÁõÆÔºàÈÅµÂÆàBSDÂçèËÆÆÔºâÔºåÁõÆÁöÑÂú®‰∫é‰∏∫Â≠¶ÊúØ„ÄÅÁà±Â•ΩÂíåÂ∑•‰∏öÂõ¢‰ΩìÊèê‰æõ‰∏ÄÊ¨æ‰ΩéÊàêÊú¨È´òÊÄßËÉΩÁöÑÈ´òÁ´ØÁöÑËá™È©æ‰ª™„ÄÇËøô‰∏™È°πÁõÆÊ∫ê‰∫é ETH Zurich (ËãèÈªé‰∏ñËÅîÈÇ¶ÁêÜÂ∑•Â§ßÂ≠¶)ÁöÑËÆ°ÁÆóÊú∫ËßÜËßâ‰∏éÂá†‰ΩïÂÆûÈ™åÂÆ§ÁöÑPIXHAWKÈ°πÁõÆ„ÄÅÂπ∂ÂæóÂà∞‰∫ÜËá™‰∏ªÁ≥ªÁªüÂÆûÈ™åÂÆ§Âíå Ëá™Âä®ÊéßÂà∂ÂÆûÈ™åÂÆ§ÁöÑÊîØÊåÅ Ôºå‰ª•Âèä‰∏Ä‰∫õÂá∫Ëâ≤ÁöÑ‰∏™‰∫∫(Contact and Credits)‰πüÂèÇ‰∏éÂÖ∂‰∏≠ÔºåÂåÖÊã¨ 3D Robotics Âíå international 3DR distributorsÁöÑÊàêÂëò„ÄÇ Âçè‰ΩúËÆ°ÁÆóÊú∫ÔºàCompanion computerÔºâÂèØ‰ª•‰∏éPixhawkÈ£ûÊéßÁõ∏ËøûÔºåËØªÂèñÈ£ûÊéß‰∏≠ÁöÑÁä∂ÊÄÅ‰ø°ÊÅØÔºåÂêåÊó∂ÂØπÈ£ûÊéßÂèëÈÄÅÊåá‰ª§„ÄÇÂπ∂‰∏îÂèØ‰ª•‰Ωú‰∏∫‰∏Ä‰∏™Êõ¥È´òÊÄßËÉΩÁöÑËÆ°ÁÆóÂπ≥Âè∞ÔºåÂèØ‰ª•ËøêË°åÂõæÂÉèËØÜÂà´„ÄÅÊú∫Âô®Â≠¶‰π†„ÄÅÂÆûÊó∂Ë∑ØÂæÑËßÑÂàíÁ≠âÁ®ãÂ∫èÔºå‰∏∫ÂºÄÊ∫êÊó†‰∫∫Êú∫Â∏¶Êù•‰∫ÜÊó†ÈôêÂèØËÉΩ„ÄÇ Êú¨ÊñáÂ∞Ü‰ªãÁªçÂ¶Ç‰Ωï‰ΩøÁî®ROSÊéßÂà∂Êó†‰∫∫Êú∫ÂíåÂçè‰ΩúËÆ°ÁÆóÊú∫ÔºàCompanion computerÔºâÔºå‰ª•‰æøËΩªÊùæÂú∞ËøûÊé•ÁîµËÑë„ÄÇPX4ÁΩëÁ´ô‰∏äÊúâÂéüÂßãÁöÑÊïôÁ®ãÔºå‰ΩÜÊòØÈÄªËæë‰∏äÊúâÁÇπÊ∑∑‰π±Ôºå‰ª•‰∏ãÊòØÊàëÊü•ÈòÖ‰∫ÜÂæàÂ§öËµÑÊñôÂÅöÂá∫ÁöÑ‰∏Ä‰∏™ÂΩíÊ°£ÂíåÊÄªÁªìÔºå‰ª•ÂèäËá™Â∑±ÁöÑ‰∏Ä‰∏ãÊÄùË∑Ø„ÄÇ ‰ªÄ‰πàÊòØROSÔºüROSÔºàRobot Operating SystemÔºåÁÆÄÁß∞‚ÄúROS‚ÄùÔºâÊòØ‰∏Ä‰∏™ÈÄÇÁî®‰∫éÊú∫Âô®‰∫∫ÁöÑÂºÄÊ∫êÁöÑÂÖÉÊìç‰ΩúÁ≥ªÁªü„ÄÇ ROS ÁöÑ‰∏ªË¶ÅÁõÆÊ†áÊòØ‰∏∫Êú∫Âô®‰∫∫Á†îÁ©∂ÂíåÂºÄÂèëÊèê‰æõ‰ª£Á†ÅÂ§çÁî®ÁöÑÊîØÊåÅ„ÄÇÂÆÉÊèê‰æõÁ±ª‰ººÊìç‰ΩúÁ≥ªÁªüÊâÄÊèê‰æõÁöÑÂäüËÉΩÔºåÂåÖÂê´Á°¨‰ª∂ÊäΩË±°ÊèèËø∞„ÄÅÂ∫ïÂ±ÇÈ©±Âä®Á®ãÂ∫èÁÆ°ÁêÜ„ÄÅÂÖ±Áî®ÂäüËÉΩÁöÑÊâßË°å„ÄÅÁ®ãÂ∫èÈó¥ÁöÑÊ∂àÊÅØ‰º†ÈÄí„ÄÅÁ®ãÂ∫èÂèëË°åÂåÖÁÆ°ÁêÜÔºåÂÆÉ‰πüÊèê‰æõ‰∏Ä‰∫õÂ∑•ÂÖ∑Á®ãÂ∫èÂíåÂ∫ìÁî®‰∫éËé∑Âèñ„ÄÅÂª∫Á´ã„ÄÅÁºñÂÜôÂíåËøêË°åÂ§öÊú∫Êï¥ÂêàÁöÑÁ®ãÂ∫è„ÄÇ Â≠¶‰π†ROSÁõ∏ÂÖ≥ÈìæÊé•ÔºöROSÊé¢Á¥¢ÊÄªÁªì ‰ªÄ‰πàÊòØ MAVROSÔºüMAVROSÊòØROSÁöÑ‰∏Ä‰∏™ËΩØ‰ª∂ÂåÖÔºåÂÖÅËÆ∏Âú®ËøêË°åROSÁöÑËÆ°ÁÆóÊú∫„ÄÅÊîØÊåÅMAVLinkÁöÑÈ£ûÊéßÊùø‰ª•ÂèäÊîØÊåÅMAVLinkÁöÑÂú∞Èù¢Á´ô‰πãÈó¥ÈÄöËÆØ„ÄÇ MAVlinkÁî±17‰∏™Â≠óËäÇÁªÑÊàêÔºåÂåÖÊã¨Ê∂àÊÅØID„ÄÅÁõÆÊ†áIDÂíåÊï∞ÊçÆ„ÄÇÂÖ∂‰∏≠Ê∂àÊÅØIDÊòæÁ§∫ÊòØ‰ªÄ‰πàÊï∞ÊçÆÔºåÂèØ‰ª•Âú®messageIDÂëΩ‰ª§ÈõÜ‰∏≠ÁúãÂà∞Ê∂àÊÅØID„ÄÇ Ëøô‰ΩøÂæóMAVLinkËÉΩÂ§ü‰ªéÂêå‰∏Ä‰∏™ÈÄöÈÅì‰º†Ëæì‰ø°ÊÅØÔºå‰ªéÂ§ö‰∏™Êó†‰∫∫Êú∫Ëé∑Âèñ‰ø°ÊÅØ„ÄÇÂè¶Â§ñÔºåÊ∂àÊÅØ‰πüÂèØ‰ª•ÈÄöËøáÊó†Á∫ø‰ø°Âè∑ËøõË°å‰º†Ëæì„ÄÇ]]></content>
      <categories>
        <category>ROS</category>
      </categories>
      <tags>
        <tag>ROS</tag>
        <tag>MAVROS</tag>
        <tag>Offboard</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Jetson TK1 or TX1 Âà∑Á≥ªÁªü‰ª•ÂèäÈÖçÁΩÆCaffeÊïôÁ®ã]]></title>
    <url>%2Farticle%2FJetsonTKoTXWithCaffe.html</url>
    <content type="text"><![CDATA[JetPack 3.1 remains the current production release, supporting Jetson TX2, Jetson TX1, and Jetson TK1 Developer Kits. ÈÖçÁΩÆ JetPack 2.3JetPack 2.3 ÊòØNVIDIAÊúÄÊñ∞ÂèëÂ∏ÉÁöÑÁî®‰∫éÂú®JetsonÁ≥ªÂàóÂµåÂÖ•ÂºèÂπ≥Âè∞‰∏äÈÉ®ÁΩ≤ÂºÄÂèëÁéØÂ¢ÉÁöÑÂºÄÂèëÂåÖÔºåÂÆÉÂåÖÂê´ 64bit ÁöÑ Ubuntu16.04 Êìç‰ΩúÁ≥ªÁªüÔºåCUDA 8.0ÔºåcuDNN 5.1Ôºå‰ª•ÂèäÁî®Êù•Âä†ÈÄüCNNÊé®Êñ≠ÈÄüÂ∫¶ÁöÑTensorRT. ÂØπ‰∫éJetPack 2.3Êõ¥ËØ¶ÁªÜÁöÑ‰ªãÁªçÂèÇËßÅ NVIDIA JetPack 2.3 ‰ªãÁªç ÈÖçÁΩÆ JetPack 2.3 ÈúÄË¶ÅÔºö ‰∏ÄÂè∞Ë£ÖÊúâ Ubuntu 64‰ΩçÊìç‰ΩúÁ≥ªÁªüÁöÑ‰∏ªÊú∫ÔºöÁî±‰∫é JetPack ÊòØÂÖàÂú®‰∏ªÊú∫‰∏ä‰∏ãËΩΩÂπ∂ÂÆâË£ÖÁõ∏ÂÖ≥ÁöÑÂåÖÔºåÁÑ∂ÂêéÂà∑Âà∞ TX 1‰∏äÔºåÊâÄ‰ª•ÈúÄË¶Å‰∏ÄÂè∞‰∏ªÊú∫„ÄÇÊú¨‰∫∫Âú®14.04‰∏äÊµãËØïÊ≤°ÊúâÈóÆÈ¢òÔºåÂÖ∂ÂÆÉÁ≥ªÁªüÊ≤°ÊúâÊµãËØï„ÄÇ ‰∏ÄÊ†πÁΩëÁ∫øÔºöËøûÊé• TX 1 ‰∏éË∑ØÁî±Âô® ÊòæÁ§∫Âô®ÔºåÈîÆÈº† Á≠â ‰∏ãËΩΩ JetPack 2.3Âú®‰∏ªÊú∫‰∏äÈÄöËøá NVIDIA ÂÆòÊñπÈìæÊé• ‰∏ãËΩΩ JetPack 2.3ÔºåÂπ∂Êñ∞Âª∫‰∏Ä‰∏™Êñá‰ª∂Â§πÂ≠òÊîæ‰∏ãËΩΩ‰∏ãÊù•ÁöÑÊñá‰ª∂ÔºåÊñá‰ª∂ÂêçÂ§ßÊ¶Ç‰∏∫ JetPack-L4T-2.3-linux-x64.runÂú®/home/usrname/ÁõÆÂΩï‰∏ãÊñ∞Âª∫Êñá‰ª∂Â§πÔºåÂèØ‰ª•ÂëΩÂêç‰∏∫ JetPack : 123cd ~mkdir JetPackcp ~/Downloads/JetPack-L4T-2.3-linux-x64.run ~/JetPack ÂÆâË£Ö JetPack 2.3‰∏∫ JetPack-L4T-2.3-linux-x64.run Â¢ûÂä†ÊâßË°åÊùÉÈôê12cd ~/JetPackchmod +x JetPack-L4T-2.3-linux-x64.run ÊâßË°å JetPack-L4T-2.3-linux-x64.run ÔºåÁÇπÂáª Next1./JetPack-L4T-2.3-linux-x64.run ÊåáÊòéÂÆâË£ÖË∑ØÂæÑÂêéÈÄâÊã©ÈÉ®ÁΩ≤ÁöÑÂºÄÂèëÂπ≥Âè∞Ê≠§Â§ÑÊàë‰ª¨ÈÄâÊã© Jetson TX1ÔºåÂêåÊ†∑‰πüÊîØÊåÅ TK 1ÁöÑÈÉ®ÁΩ≤ ÂºπÂá∫ JetPack L4T Component Manager ÂØπËØùÊ°ÜÁî±‰∫éÊàëÂ∑≤ÁªèÂÆâË£ÖÂ•Ω‰∫ÜÊâÄÊúâÁöÑÂåÖÔºåÊâÄ‰ª•ËøôËæπÁöÑAction‰∏ÄÊ†èÊòØno actionÔºåÂ¶ÇÊûúÊ≤°ÊúâÂÆâË£ÖËøáÁöÑËØùÔºå‰ºöÊòæÁ§∫install xxx„ÄÇËøôÈáåÁÇπÂáªNextÂêéÔºåÊé•ÂèóÊâÄÊúâÁöÑÁî≥ÊòéÔºåÂ∞±ÂºÄÂßã‰∫ÜÊº´ÈïøÁöÑ‰∏ãËΩΩ‰∏éÂÆâË£Ö‚Ä¶ÔºàÊàëÁ≠â‰∫Ü10Â§ö‰∏™Â∞èÊó∂Ôºâ ËøôÈáåÂ§ßÂÆ∂ÂèØ‰ª•ÈÄâÊã©‰∏çÂÆâË£ÖOpenCV for TegraÔºåÂõ†‰∏∫Ëøô‰∏™ÁâàÊú¨ÊòØ2.4.13ÔºåÂØπ‰∫éUSBÊëÑÂÉèÂ§¥ÁöÑËØªÂèñÊîØÊåÅ‰∏çÊòØÂæàÂ•ΩÔºåÂè¶Â§ñÂØπ‰∫éCUDAÈùôÊÄÅÂ∫ìÁöÑËØªÂèñ‰πüÊúâ‰∫õÈóÆÈ¢òÔºåÊâÄ‰ª•‰∏çÊé®ËçêÂÆâË£ÖÔºåÁ®çÂêé‰ºöÊèêÁ§∫Â§ßÂÆ∂ÂÆâË£Ö OpenCV 3.1 ÁΩëÁªúÈÖçÁΩÆÂíåÁ´ØÂè£ÈÄâÊã©ÂÆâË£ÖÂÆåÊàêÂêéËøõÂÖ•ÁΩëÁªúÈÖçÁΩÆÈÄâÈ°πÔºåÈÄâÊã©ÈÄöËøáË∑ØÁî±Âô®ËøûÊé•‰∫íËÅîÁΩëÔºåÂêåÊó∂Â∞ÜTX1ËøûÊé•Âà∞‰∏é‰∏ªÊú∫Âêå‰∏Ä‰∏™Ë∑ØÁî±Âô®‰∏ä ÈÄâÊã©eth0Á´ØÂè£ÔºåÁÇπÂáªNext ËÆæÁΩÆ TX 1 ‰∏∫ Force USB Recovery Mode (Âº∫Âà∂USBÊÅ¢Â§çÊ®°Âºè)ÂºπÂá∫Â¶ÇÂõæÊâÄÁ§∫ÁªàÁ´ØÁ™óÂè£Ôºö ÊåâÁÖßÊèêÁ§∫ÔºåÂ∞ÜTX1ËÆæÁΩÆ‰∏∫Âº∫Âà∂USBÊÅ¢Â§çÊ®°Âºè ÂÖ≥Èó≠ËÆæÂ§áÔºåÁßªÈô§ÁîµÊ∫êÈÄÇÈÖçÂô® Áî®Ëá™Â∏¶ÁöÑMicro USB ËΩ¨ USB Êï∞ÊçÆÁ∫øËøûÊé•‰∏ªÊú∫‰∏éTX1 ËøûÊé•ÁîµÊ∫êÈÄÇÈÖçÂô® Êåâ‰∏ãPOWERÊåâÈíÆ Êåâ‰ΩèFORCE RECOVERY ÊåâÈíÆ‰∏çÊîæÂºÄÔºåÂêåÊó∂Êåâ‰∏Ä‰∏ãRESETÊåâÈíÆÔºåÁ≠âÂæÖ‰∏§ÁßíÈíüÔºåÊùæÂºÄFORCE RECOVERY ÊåâÈíÆ ÂÆåÊàê‰∏äËø∞Ê≠•È™§ÂêéÔºåÂèØ‰ª•Âú®‰∏ªÊú∫‰∏äÈÄöËøá lsusbÂëΩ‰ª§Êü•ÁúãÊòØÂê¶Âê´ÊúâNvidia CorpËÆæÂ§áÔºåÁ°ÆËÆ§Â≠òÂú®ÂêéÊï≤ÂáªEnterÔºåÂºÄÂßãÂ∞ÜÊìç‰ΩúÁ≥ªÁªü‰ª•ÂèäÂºÄÂèëÂåÖÊã∑Ë¥ùÂà∞TX1Ôºå‰∏≠ÈÄîËøûÊé•TX1ÁöÑÊòæÁ§∫Âô®‰ºöÊòæÁ§∫Ubuntu 16.04 Ê°åÈù¢Á≥ªÁªü ÂæÖÂÆâË£ÖÈÉ®ÁΩ≤ÂÆåÊàêÂêéÔºåÂú®‰∏ªÊú∫‰∏äÈÄÄÂá∫ JetPack L4T Âç≥ÂèØÔºåËøôÊ†∑Â∞±ÂÆåÊàê‰∫Ü JetPack 2.3 ÁöÑÈÖçÁΩÆ ËøêË°åÁ§∫‰æãÊàë‰ª¨ÂèØ‰ª•Âú®TX1‰∏äËøêË°åÂá†‰∏™Á§∫‰æãÔºåÈ™åËØÅ‰∏ã CUDA 8.0 ÊòØÂê¶ÂÆâË£ÖÊàêÂäü 1./NVIDIA_CUDA-8.0_Samples/bin/aarch64/linux/release/smokeParticles ÈÖçÁΩÆ OpenCV 3.1OpenCV 3.1 ÊòØÁõÆÂâçËæÉ‰∏∫Á®≥ÂÆöÁöÑÁâàÊú¨ÔºåÂõ†Ê≠§Êé®ËçêÂ§ßÂÆ∂Âú®TX1‰∏äÂÆâË£ÖOpenCV 3.1 ÂÆâË£ÖOpenCVÊúâ‰∏§ÁßçÊñπÂºèÔºö ÂÆâË£ÖÈ¢ÑÂª∫ÁöÑOpenCV4TegraÂ∫ìÔºàÊòØOpenCVÁöÑCPUÂíåGPU‰ºòÂåñÁâàÊú¨Ôºâ Ê∫êÁ†ÅÂÆâË£ÖÔºàÂ¶ÇÊûúÊÇ®ÊÉ≥Ë¶ÅÊúÄÊñ∞ÁöÑOpenCV‰ª£Á†ÅÔºåÊàñËÄÖÊÇ®ÊÉ≥Ë¶ÅËá™ÂÆö‰πâOpenCVÂ∫ìÔºåÂπ∂‰∏î‰∏çÂ∏åÊúõNVIDIAÁöÑOpenCV4TegraÁöÑCPUÂíåÂ§öÊ†∏‰ºòÂåñ„ÄÇËØ∑Ê≥®ÊÑèÔºåÊÇ®Â∞ÜÊó†Ê≥ïËé∑ÂæóÂ¶ÇOpenCV4TegraÁöÑÂÖ®ÈÉ®‰ºòÂåñÊÄßËÉΩ„ÄÇÔºâ ÂèÇËÄÉÊñáÁåÆÔºöTK1ÂÖ•Èó®ÊïôÁ®ãËΩØ‰ª∂ÁØá-ÂÆâË£ÖOpenCV ‰∏ãËΩΩ OpenCV 3.1‰∏ãËΩΩ OpenCV for Linux/Mac (Version 3.1) ÂÆâË£Ö‰æùËµñÂ∫ì123456sudo apt-add-repository universesudo apt-get updatesudo apt-get install -y build-essential make cmake cmake-curses-gui g++sudo apt-get install -y libavformat-dev libavutil-dev libswscale-devsudo apt-get install -y libv4l-dev libeigen3-dev libglew1.6-dev libgtk2.0-dev ÁºñËØëÂÆâË£ÖOpenCV 3.11234567cd ~unzip opencv-3.1.0.zipcd opencv-3.1.0mkdir buildcd buildcmake -DWITH_CUDA=ON -DCUDA_ARCH_BIN="5.3" -DCUDA_ARCH_PTX="" -DBUILD_TESTS=OFF -DBUILD_PERF_TESTS=OFF -DCUDA_FAST_MATH=ON ..sudo make -j4 install ÁºñËØëÂ•ΩÁöÑOpenCVÂ∫ì‰ºöÈªòËÆ§ÂÆâË£ÖÂà∞ /usr/local/Êñá‰ª∂Â§π‰∏ã Ê≥®ÊÑèÔºöÁî±‰∫éCUDA 8.0‰∏çÊîØÊåÅOpenCVÁöÑ GraphCut ÁÆóÊ≥ïÔºåÂèØËÉΩÂá∫Áé∞‰ª•‰∏ãÈîôËØØÔºö 123456789/home/usrname/opencv-3.1.0/modules/cudalegacy/src/graphcuts.cpp:120:54: error: ‚ÄòNppiGraphcutState‚Äô has not been declared typedef NppStatus (*init_func_t)(NppiSize oSize, NppiGraphcutState** ppStat ^/home/usrname/opencv-3.1.0/modules/cudalegacy/src/graphcuts.cpp:135:18: error: ‚ÄòNppiGraphcutState‚Äô does not name a type operator NppiGraphcutState*() ^/home/usrname/opencv-3.1.0/modules/cudalegacy/src/graphcuts.cpp:141:9: error: ‚ÄòNppiGraphcutState‚Äô does not name a type NppiGraphcutState* pState;....... Ê≠§Êó∂ÈúÄË¶Å‰øÆÊîπOpenCVÊ∫êÁ†ÅÔºå‰ΩøÂÖ∂‰∏çÁºñËØëgraphcuts.cpp Âç≥ÂèØËøõÂÖ•opencv-3.1.0/modules/cudalegacy/src/ÁõÆÂΩïÔºå‰øÆÊîπgraphcuts.cppÊñá‰ª∂ÔºåÂ∞ÜÔºö 12#include "precomp.hpp"#if !defined (HAVE_CUDA) || defined (CUDA_DISABLER) ‰øÆÊîπ‰∏∫ 12#include "precomp.hpp"#if !defined (HAVE_CUDA) || defined (CUDA_DISABLER) || (CUDART_VERSION &gt;= 8000) ÈáçÊñ∞ÁºñËØëÂç≥ÂèØ ÈÖçÁΩÆ Caffe ÂºÄÂèëÁéØÂ¢ÉÊ≠§Â§ÑÊúâÂæàËØ¶ÁªÜÁöÑÊåáÂØºÔºåÂ§çÂà∂ËøáÊù• ÂÆâË£Ö‰æùËµñÂ∫ì12345678910111213sudo add-apt-repository universesudo apt-get update -ysudo apt-get install cmake -y# General Dependenciessudo apt-get install libprotobuf-dev libleveldb-dev libsnappy-dev \libhdf5-serial-dev protobuf-compiler -ysudo apt-get install --no-install-recommends libboost-all-dev -y# BLASsudo apt-get install libatlas-base-dev -y# Remaining Dependenciessudo apt-get install libgflags-dev libgoogle-glog-dev liblmdb-dev -ysudo apt-get install python-dev python-numpy -y ÁºñËØë Caffe123git clone https://github.com/BVLC/caffe.git cd caffe cp Makefile.config.example Makefile.config ‰øÆÊîπMakefile.config: 12345678# cuDNN acceleration switch (uncomment to build with cuDNN).USE_CUDNN := 1# Uncomment if you're using OpenCV 3OPENCV_VERSION := 3# Uncomment to support layers written in Python (will link against Python libs)WITH_PYTHON_LAYER := 1 Áî±‰∫éhdf5Â∫ìÁõÆÂΩïÊõ¥ÊîπÔºåÊâÄ‰ª•ÈúÄË¶ÅÂçïÁã¨Ê∑ªÂä†Ôºö 12INCLUDE_DIRS := $(PYTHON_INCLUDE) /usr/local/include /usr/include/hdf5/serial/LIBRARY_DIRS := $(PYTHON_LIB) /usr/local/lib /usr/lib /usr/lib/aarch64-linux-gnu/hdf5/serial/ ‰πãÂêéÁºñËæëÂç≥ÂèØ 12make -j4 allmake -j4 runtest ‰∏∫‰∫ÜÊõ¥Â•ΩÂú∞‰ΩøÁî®pycaffe ÔºåÂª∫ËÆÆÂÆâË£ÖÔºö 123sudo apt-get install python-numpy python-setuptools python-pip cython python-skimage python-protobufmake pycaffe Âà∞ËøôÈáåCaffeÂºÄÂèëÁéØÂ¢ÉÂ∞±ÈÖçÁΩÆÂ•Ω‰∫ÜÔºÅÂèØ‰ª•ÊµãËØï‰∏Ä‰∏ãÔºåËæìÂá∫AlexNetÁöÑÊó∂Èó¥ÊµãËØïÁªìÊûúÔºö 12cd ~/caffe./build/tools/caffe time --gpu 0 --model ./models/bvlc_alexnet/deploy.prototxt]]></content>
      <categories>
        <category>Deep Learning</category>
      </categories>
      <tags>
        <tag>Caffe</tag>
        <tag>Deep Learning</tag>
        <tag>Ê∑±Â∫¶Â≠¶‰π†</tag>
        <tag>Jetson TK1</tag>
        <tag>Jetson TX1</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[OpenCV 3.3 DNNÊ®°ÂùóÁöÑËÆ§ËØÜ]]></title>
    <url>%2Farticle%2FOpenCVWithDNN.html</url>
    <content type="text"><![CDATA[Âú®OpenCV3.3ÁâàÊú¨ÂèëÂ∏É‰∏≠ÊääDNNÊ®°Âùó‰ªéÊâ©Â±ïÊ®°ÂùóÁßªÂà∞‰∫ÜOpenCVÊ≠£ÂºèÂèëÂ∏ÉÊ®°Âùó‰∏≠ÔºåÂΩìÂâçDNNÊ®°ÂùóÊúÄÊó©Êù•Ëá™Tiny-dnnÔºåÂèØ‰ª•Âä†ËΩΩÈ¢ÑÂÖàËÆ≠ÁªÉÂ•ΩÁöÑCaffeÊ®°ÂûãÊï∞ÊçÆÔºåOpenCVÂÅö‰∫ÜËøë‰∏ÄÊ≠•Êâ©Â±ïÊîØÊåÅÊâÄÊúâ‰∏ªÊµÅÁöÑÊ∑±Â∫¶Â≠¶‰π†Ê°ÜÊû∂ËÆ≠ÁªÉÁîüÊàê‰∏éÂØºÂá∫Ê®°ÂûãÊï∞ÊçÆÂä†ËΩΩ„ÄÇ ÊåâÁÖßÂÆòÊñπ‰ªãÁªçÔºåDNNÁé∞Âú®Êúâ‰∏ãÈù¢Âá†ÁÇπÁâπÊÄßÔºö Êó†ÈúÄ‰ªª‰Ωï‰æùËµñÊñ∞Âä†ÂÖ•ÁöÑDNNÊ®°Âùó‰∏çÈúÄË¶Å‰ªª‰Ωï‰æùËµñÔºåÈô§‰∫Üprotobuf‚Ä¶‚Ä¶ËÄåprotobufË¢´Âä†ÂÖ•Âà∞OpenCVÁöÑthirdparty‰∫Ü„ÄÇÁÆÄÁõ¥ÊòØË¥¥ÂøÉËá≥ÊûÅÊúâÊ≤°ÊúâÔºü ÊîØÊåÅ‰ª•‰∏ãÊ°ÜÊû∂ Caffe 1 TensorFlow Torch/PyTorch ËôΩÁÑ∂ËøòÊ≤°ÊúâÊîØÊåÅcaffe2Ôºå‰∏çËøáÊàëÁé∞Âú®Â∞±Â∑≤ÁªèÂæàÊª°Ë∂≥‰∫Ü„ÄÇ ÊîØÊåÅÂæàÂ§öÁßçÁ±ªÁöÑÂ±Ç AbsVal AveragePooling BatchNormalization Concatenation Convolution (including dilated convolution) Crop Deconvolution, a.k.a. transposed convolution or full convolution DetectionOutput (SSD-specific layer) Dropout Eltwise (+, *, max) Flatten FullyConnected ‚Ä¶‚Ä¶ ËøòÊúâÂæàÂ§öÔºåÂ∞±‰∏ç‰∏Ä‰∏ÄÂàó‰∏æ‰∫ÜÔºå ‰º∞ËÆ°ÁªùÂ§ßÈÉ®ÂàÜ‰∫∫‰πüÁî®‰∏ç‰∏ä„ÄÇ„ÄÇ„ÄÇ ‰ª•‰∏ãÁΩëÁªúÁªèËøá‰∫ÜÊµãËØï‰∏îÂèØÁî® AlexNet GoogLeNet v1 (also referred to as Inception-5h) ResNet-34/50/‚Ä¶ SqueezeNet v1.1 VGG-based FCN (semantical segmentation network) ENet (lightweight semantical segmentation network) VGG-based SSD (object detection network) MobileNet-based SSD (light-weight object detection network) ‰ΩÜÊòØÁé∞Âú®OpenCVË≤å‰ººÂè™ËÉΩÂä†ËΩΩËÆ≠ÁªÉÂ•ΩÁöÑÁΩëÁªúÔºåcaffeÁöÑÔºåTFÁöÑÔºåTorchÁöÑÔºåÂè™ËÉΩËÆ≠ÁªÉÂ•Ω‰πãÂêéÊãøÊù•Áî®Ôºå‰ΩÜÊòØ‰∏çËÉΩËá™Â∑±ËÆ≠ÁªÉÁΩëÁªú„ÄÇ Áé∞Âú®ÁúãÊù•Âä†ÂÖ•DNNÊ®°ÂùóÁÆóÊòØ‰ºóÊúõÊâÄÂΩíÔºåËôΩÁÑ∂ÊúâÁÇπÊôöÔºåËôΩÁÑ∂ÂäüËÉΩËøò‰∏çÂ§üÂÆåÂñÑÔºå‰ΩÜÊòØ‰ªçÁÑ∂ÂÄºÂæóÊúüÂæÖ„ÄÇ ‰ª•GoogleNet CaffeÊ®°Âûã‰∏æ‰æãËØ¥ÊòéOpenCVÈÄöËøáÊîØÊåÅÂä†ËΩΩËøô‰∫õÈ¢ÑÂÖàËÆ≠ÁªÉÂ•ΩÁöÑÊ®°ÂûãÔºåÂÆûÁé∞ÂõæÂÉèÂàÜÁ±ª„ÄÅÂØπË±°Ê£ÄÊµã„ÄÅËØ≠‰πâÂàÜÂâ≤„ÄÅÈ£éÊ†ºËøÅÁßªÁ≠âÂäüËÉΩ„ÄÇÊîØÊåÅAndroid/iOSÁ≠âÁßªÂä®Á´ØÂπ≥Âè∞ÂºÄÂèë„ÄÇ‰∏ãÈù¢Êàë‰ª¨Â∞±‰ª•OpenCV3.3 ‰ΩøÁî®CaffeÁöÑGoogleNetÊï∞ÊçÆÊ®°Âûã‰∏∫‰æãÔºåÂÆûÁé∞ÂØπÂõæÂÉèÂ∏∏ËßÅÂàÜÁ±ªÔºåOpenCV3.3ÁöÑDNNÊ®°Âùó‰ΩøÁî®ÁöÑÊ®°ÂûãÊîØÊåÅ1000ÁßçÂ∏∏ËßÅÂõæÂÉèÂàÜÁ±ª„ÄÅgooglenetÊ∑±Â∫¶Â≠¶‰π†ÁΩëÁªúÊ®°ÂûãÊòØ2014ÂõæÂÉèÂàÜÁ±ªÊØîËµõÁöÑÂÜ†ÂÜõ„ÄÅÈ¶ñÂÖàÊòØ‰∏ãËΩΩÁõ∏ÂÖ≥ÁöÑÊï∞ÊçÆÊ®°ÂûãÊñá‰ª∂ bvlc_googlenet.caffemodel bvlc_googlenet.prototxt ÂÖ∂‰∏≠ÔºöprototxtÂÆö‰πâ‰∫ÜÁΩëÁªúÁªìÊûÑÔºåcaffemodelÊòØËÆ≠ÁªÉÂêéÁöÑÊùÉÈáç„ÄÇ ÊñáÊú¨Êñá‰ª∂Âè™Êúâ‰Ω†‰∏ãËΩΩ‰∫ÜOpenCV3.3Ëß£ÂéãÁº©‰πãÂêéÂ∞±‰ºöÂú®ÂØπÂ∫îÁöÑÁõÆÂΩïÂèëÁé∞„ÄÇÊ®°ÂûãÊñá‰ª∂ÈúÄË¶Å‰ªé‰ª•‰∏ãÂú∞ÂùÄ‰∏ãËΩΩÂç≥ÂèØÔºö http://dl.caffe.berkeleyvision.org/bvlc_googlenet.caffemodel]]></content>
      <categories>
        <category>Computer Vision</category>
      </categories>
      <tags>
        <tag>ËÆ°ÁÆóÊú∫ËßÜËßâ</tag>
        <tag>Computer Vision</tag>
        <tag>OpenCV</tag>
        <tag>DNN</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÊâπÈáèÁΩëÈ°µÂõæÁâá‰∏ãËΩΩÂô® NeoDownloader]]></title>
    <url>%2Farticle%2FNeoDownloader.html</url>
    <content type="text"><![CDATA[NeoDownloaderÂäüËÉΩ‰ªãÁªçÔºöÂÆÉËøòÂèØ‰ª•Âç≥Êó∂È¢ÑËßàÂõæÁâá„ÄÅÂπªÁÅØÊòæÁ§∫„ÄÅÊ°åÂ∏ÉËÆæÁΩÆ‚Ä¶‚Ä¶ Á≠âÂäüËÉΩÔºåÈÖçÂêà Express Thumbnail Creator ËΩØ‰ª∂Êõ¥ÊòØÂèØ‰ª•Âø´Êç∑Âú∞Âà∂‰ΩúÁΩëÁªúÁõ∏Á∞øÔºÅÊé®Ëçê‰ΩøÁî®ÔºÅNeoDownloaderÂèØ‰ª•ÊâπÈáè‰ªé‰ªª‰ΩïÁΩëÁ´ô‰∏ãËΩΩ‰ªª‰ΩïÊñá‰ª∂ÔºåÂÆÉ‰∏ªË¶ÅÊòØ‰∏∫‰∫ÜÂ∏ÆÂä©ÊÇ®Ëá™Âä®‰∏ãËΩΩÂíåÊü•ÁúãÊÇ®ÊúÄÂñúÁà±ÁöÑÂõæÁâáÔºåÁÖßÁâáÔºåÂ£ÅÁ∫∏ÔºåËßÜÈ¢ëÔºåMP3Èü≥‰πêÔºåÂíå‰ªª‰ΩïÂÖ∂‰ªñÊñá‰ª∂„ÄÇ NeoDownloaderÈÖçÂ§á‰∫Ü‰∏Ä‰∏™Â§ßÂûãÁöÑÂú®Á∫øÊï∞ÊçÆÂ∫ìÔºåÈöèÊó∂ÂèØ‰ª•‰∏ãËΩΩÁöÑÈ°πÁõÆÔºöÊï∞‰ª•ÂçÉËÆ°ÁöÑÂêÑÁßçÂ£ÅÁ∫∏ÔºåÈ´òÂìÅË¥®ÁöÑÁÖßÁâáÔºåÂêç‰∫∫ÂíåÁæé‰∏ΩÁöÑÂ•≥Â≠©ÔºåÁî±ËëóÂêçËâ∫ÊúØÂÆ∂ÂíåÊëÑÂΩ±Â∏àÔºåÊúâË∂£ÁöÑÂõæÁâáÂíåGIFÂä®ÁîªÁöÑ‰ΩúÂìÅ„ÄÇ ‰∏ãËΩΩÂú∞ÂùÄÔºöÈìæÊé•Ôºöhttps://pan.baidu.com/s/1jIH334U ÂØÜÁ†ÅÔºö0z64 NeoDownloaderÊÄé‰πàÁî®Ôºü Êñ∞Âª∫ÊñπÊ°àÔºö ËÆæÁΩÆ‰∏ãËΩΩÂõæÁâá‰øùÂ≠òÁõÆÂΩïÂú∞ÂùÄÔºå‰ª•ÂèäÂãæ‰∏äÂ§çÂà∂ÁΩëÁ´ôÁöÑÊñá‰ª∂Â§πÁªìÊûÑÔºÅ ÂºÄÂßãÊñπÊ°àÔºö Êñá‰ª∂ËßÑÂæãÈáçÂëΩÂêç‰∏ãËΩΩÂú∞ÂùÄÔºöÈìæÊé•Ôºöhttps://pan.baidu.com/s/1gfs7hLL ÂØÜÁ†ÅÔºölnhp]]></content>
      <categories>
        <category>Tools</category>
      </categories>
      <tags>
        <tag>Áà¨Âõæ</tag>
        <tag>NeoDownloader</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÁõÆÊ†áÊ£ÄÊµãÊñπÊ≥ïÊ±áÊÄª]]></title>
    <url>%2Farticle%2FTargetDetectionAlgorithm.html</url>
    <content type="text"><![CDATA[ÁõÆÊ†áÊ£ÄÊµãÊñπÊ≥ïÂàÜÁ±ªÁ¨¨‰∏ÄÔºåÂ∑≤Áü•ÁõÆÊ†áÁöÑÂÖàÈ™åÁü•ËØÜ„ÄÇ Âú®ËøôÁßçÊÉÖÂÜµ‰∏ãÊ£ÄÊµãÁõÆÊ†áÊúâ‰∏§Á±ªÊñπÊ≥ïÔºåÁ¨¨‰∏ÄÁ±ªÊñπÊ≥ïÊòØÁî®ÁõÆÊ†áÁöÑÂÖàÈ™åÁü•ËØÜËÆ≠ÁªÉ‰∏ÄÂ†ÜÂº±ÂàÜÁ±ªÂô®ÔºåÁÑ∂ÂêéËøô‰∫õÂº±ÂàÜÁ±ªÂô®‰∏ÄËµ∑ÊäïÁ•®Êù•Ê£ÄÊµãÁõÆÊ†áÔºåÂ¶ÇBoosting, Random forest ÈÉΩÊòØËøô‰∏™ÊÄùË∑ØÔºåÂ§ßÂÆ∂ÁÜüÁü•ÁöÑAdaboost‰∫∫ËÑ∏Ê£ÄÊµã‰πüÊòØÂ¶ÇÊ≠§„ÄÇÁ¨¨‰∫åÁ±ªÊñπÊ≥ïÊòØÊ†πÊçÆÂÖàÈ™åÁü•ËØÜÊâæÂà∞ÁõÆÊ†áÂíåÈùûÁõÆÊ†áÁöÑÊúÄ‰Ω≥ÂàíÂàÜÁ∫øÔºåÂ¶ÇSVM.Ëøô‰∏§Á±ªÊñπÊ≥ïÂêÑÊàê‰∏ÄÂÆ∂ÔºåÂêÑÊúâÊâÄÈïøÔºåÈÉΩÊúâÁùÄ‰∏çÈîôÁöÑË°®Áé∞„ÄÇ Á¨¨‰∫åÔºåÊú™Áü•ÁõÆÊ†áÁöÑÂÖàÈ™åÁü•ËØÜ„ÄÇ Ê≠§Êó∂‰∏çÁü•ÈÅìË¶ÅÊ£ÄÊµãÁöÑÁõÆÊ†áÊòØ‰ªÄ‰πàÔºå‰∫éÊòØ‰ªÄ‰πàÊòØÁõÆÊ†áÂ∞±Êúâ‰∫Ü‰∏çÂêåÁöÑÂÆö‰πâ„ÄÇ‰∏ÄÁßçÊñπÊ≥ïÊòØÊ£ÄÊµãÂú∫ÊôØ‰∏≠ÁöÑÊòæËëóÁõÆÊ†áÔºåÂ¶ÇÈÄöËøá‰∏Ä‰∫õÁâπÂæÅË°®ËææÂá∫Âú∫ÊôØ‰∏≠ÊØè‰∏™ÂÉèÁ¥†ÁöÑÊòæËëóÊÄßÊ¶ÇÁéáÔºåÁÑ∂ÂêéÊâæÂà∞ÊòæËëóÁõÆÊ†á„ÄÇÂè¶‰∏ÄÁßçÊñπÊ≥ïÂ∞±ÊòØÊ£ÄÊµãÂú∫ÊôØÂΩì‰∏≠ÁöÑËøêÂä®ÁõÆÊ†á‰∫Ü„ÄÇ ÁªèÂÖ∏ÁõÆÊ†áÊ£ÄÊµãÊñπÊ≥ï1„ÄÅËÉåÊôØÂ∑ÆÂàÜÊ≥ï Âú®Ê£ÄÊµãËøêÂä®ÁõÆÊ†áÊó∂ÔºåÂ¶ÇÊûúËÉåÊôØÊòØÈùôÊ≠¢ÁöÑÔºåÂà©Áî®ÂΩìÂâçÂõæÂÉè‰∏éÈ¢ÑÂ≠òÁöÑËÉåÊôØÂõæÂÉè‰ΩúÂ∑ÆÂàÜÔºåÂÜçÂà©Áî®ÈòàÂÄºÊù•Ê£ÄÊµãËøêÂä®Âå∫ÂüüÁöÑ‰∏ÄÁßçÂä®ÊÄÅÁõÆÊ†áËØÜÂà´ÊäÄÊúØ„ÄÇ ËÉåÊôØÂ∑ÆÂàÜÁÆóÊ≥ïÈÄÇÁî®‰∫éËÉåÊôØÂ∑≤Áü•ÁöÑÊÉÖÂÜµÔºå‰ΩÜÈöæÁÇπÊòØÂ¶Ç‰ΩïËá™Âä®Ëé∑ÂæóÈïø‰πÖÁöÑÈùôÊÄÅËÉåÊôØÊ®°Âûã„ÄÇ Matlab‰∏≠ÂçïÁ∫ØÁöÑËÉåÊôØÂ∑ÆÂàÜÁõ¥Êé•ÊòØÂáΩÊï∞imabsdiffÔºàX,YÔºâÂ∞±ÂèØ‰ª•„ÄÇ 2„ÄÅÂ∏ßÂ∑ÆÂàÜÊ≥ï Âà©Áî®ËßÜÈ¢ëÂ∫èÂàó‰∏≠ËøûÁª≠ÁöÑ‰∏§Â∏ßÊàñÂá†Â∏ßÂõæÂÉèÁöÑÂ∑ÆÊù•ËøõË°åÁõÆÊ†áÊ£ÄÊµãÂíåÊèêÂèñ„ÄÇÂú®ËøêÂä®ÁöÑÊ£ÄÊµãËøáÁ®ã‰∏≠ÔºåËØ•ÊñπÊ≥ïÂà©Áî®Êó∂Èó¥‰ø°ÊÅØÔºåÈÄöËøáÊØîËæÉÂõæÂÉè‰∏≠Ëã•Âπ≤ËøûÁª≠Â∏ßËé∑ÂæóÂØπÂ∫îÂÉèÁ¥†ÁÇπÁöÑÁÅ∞Â∫¶Â∑ÆÂÄºÔºåÂ¶ÇÊûúÂùáÂ§ß‰∫é‰∏ÄÂÆöÁöÑÈòàÂÄºT2ÔºåÂàôÂèØ‰ª•Âà§Êñ≠ËØ•‰ΩçÁΩÆÂ≠òÂú®ËøêÂä®ÁöÑÁõÆÊ†á„ÄÇÈÄÇÂêà‰∫éÂä®ÊÄÅÂèòÂåñÂú∫ÊôØ„ÄÇ 3„ÄÅÂÖâÊµÅÂú∫Ê≥ï Âà©Áî®Áõ∏ÈÇª‰∏§Â∏ß‰∏≠ÂØπÂ∫îÂÉèÁ¥†ÁöÑÁÅ∞Â∫¶‰øùÊåÅÂéüÁêÜÊù•ËØÑ‰º∞‰∫åÁª¥ÂõæÂÉèÁöÑÂèòÂåñ„ÄÇËÉΩÂ§üËæÉÂ•ΩÁöÑ‰ªéËÉåÊôØ‰∏≠Ê£ÄÊµãÂà∞Áõ∏ÂÖ≥ÂâçÊôØÁõÆÊ†áÔºåÁîöËá≥ÊòØËøêÂä®Â±ãÈáå‰∏≠ÁöÑÈÉ®ÂàÜËøêÂä®ÁõÆÊ†áÔºåÈÄÇÁî®‰∫éÊëÑÂÉèÊú∫ËøêÂä®ËøáÁ®ã‰∏≠Áõ∏ÂØπËøêÂä®ÁõÆÊ†áÁöÑÊ£ÄÊµã„ÄÇ ÂºÄÂè£ÈóÆÈ¢ò„ÄÅÂÖâÊµÅÂú∫Á∫¶ÊùüÊñπÁ®ãÁöÑËß£ÁöÑ‰∏çÂîØ‰∏ÄÊÄßÈóÆÈ¢òÔºå‰∏çËÉΩÊ≠£Á°ÆÁöÑË°®Á§∫ÂÆûÈôÖÁöÑËøêÂä®Âú∫„ÄÇ ‰æãÂ≠êÂ¶Ç‰∏ãÔºö È¶ñÂÖàÔºåÂú®‰∏ÄÂ∏ßÂõæÂÉèÂÜÖÈöèÊú∫ÂùáÂåÄÈÄâÂèñk‰∏™ÁÇπÔºåÂπ∂Êª§Èô§ÈÇ£‰∫õÈÇªÂüüÁ∫πÁêÜÂ§™ÂÖâÊªëÁöÑÁÇπÔºåÂõ†‰∏∫Ëøô‰∫õÁÇπ‰∏çÂà©‰∫éËÆ°ÁÆóÂÖâÊµÅ„ÄÇ ÁÑ∂ÂêéÔºåËÆ°ÁÆóËøô‰∫õÁÇπ‰∏é‰∏ä‰∏ÄÂ∏ßÂõæÂÉèÁöÑÂÖâÊµÅÁü¢ÈáèÔºåÂ¶Ç‰∏äÂè≥ÂõæÔºåÊ≠§Êó∂Â∑≤ÁªèÂèØ‰ª•ÁúãÂá∫ËÉåÊôØËøêÂä®ÁöÑÂ§ßÊ¶ÇÊñπÂêë‰∫Ü„ÄÇ Êé•‰∏ãÊù•ÁöÑËøô‰∏ÄÊ≠•ÊñπÊ≥ïÂõ†‰∫∫ËÄåÂºÇ‰∫Ü„ÄÇ 2007Âπ¥CVPRÁöÑ‰∏ÄÁØáÊñáÁ´†Detection and segmentation of moving objects in highly dynamic scenesÁöÑÊñπÊ≥ïÊòØÊääËøô‰∫õÂÖâÊµÅÁÇπÁöÑÔºàx, y, dx, dy, Y, U, V)7‰∏™ÁâπÂæÅÈÄöËøáMeanshiftËÅöÁ±ªÊù•ËÅöÂêàÂà∞‰∏ÄËµ∑ÔºåÊúÄÂêéÂΩ¢ÊàêËøêÂä®ÁõÆÊ†áËΩÆÂªì„ÄÇ Êñ∞ÁõÆÊ†áÊ£ÄÊµãÊñπÊ≥ïÂÖ∂ÂÆûÂÜôÂà∞ËøôÈáåÊÉ≥‰∫ÜÊÉ≥Âà∞Â∫ïËÉΩ‰∏çËÉΩÂè´ÁõÆÊ†áÊ£ÄÊµãÔºåÂçö‰∏ªËÆ§‰∏∫ÂõæÂÉèÁöÑÂâçËÉåÊôØÂàÜÁ¶ª‰πüÊòØÁõÆÊ†áÊ£ÄÊµãÁöÑ‰∏ÄÁßçÔºàÂçö‰∏ªÊâçÁñèÂ≠¶ÊµÖÔºåÊ±ÇËµêÊïôÔºâ„ÄÇ 1„ÄÅÂÉèÁ¥†ÁÇπÊìç‰Ωú ÂØπÊØè‰∏™ÂÉèÁ¥†ÁÇπËøõË°åÊìç‰ΩúÔºåÂà§Âà´‰∏∫ÂâçÊôØÊàñËÄÖËÉåÊôØ‰∏§Á±ª„ÄÇÂ¶Ç‰∏ãÈù¢ÁöÑÂõæÁâáÊâÄÁ§∫Ôºö 2„ÄÅ‰ΩéÁß©Áü©ÈòµÂ∫îÁî® ËÉåÊôØÂª∫Ê®°ÊòØ‰ªéÊãçÊëÑÁöÑËßÜÈ¢ë‰∏≠ÂàÜÁ¶ªÂá∫ËÉåÊôØÂíåÂâçÊôØ„ÄÇ‰∏ãÈù¢ÁöÑ‰æãÂ≠êÂ∞±ÊòØÂ∞ÜËÉåÊôØ‰∏éÂâçÊôØÂàÜÁ¶ªÂºÄ„ÄÇ‰ΩøÁî®ÁöÑÊñπÊ≥ïÊòØRPCAÁöÑÊñπÊ≥ï„ÄÇ ÂÖ∂ÁΩëÂùÄ‰ª•ÂèäÊïàÊûúÂ¶Ç‰∏ãÔºö http://perception.csl.illinois.edu/matrix-rank/introduction.html 3„ÄÅÊ∑±Â∫¶Â≠¶‰π† FCN + DenseCRFÁ≤æÁ°ÆÂàÜÂâ≤+ËØ≠‰πâÊ†áÁ≠æ„ÄÇÂõæÂÉè‰∏≠ÁöÑÂâçÊôØÁõÆÊ†áÊ£ÄÊµãÂàÜÂâ≤ÂÅöÁöÑÂæàÂ•ΩÔºå‰∏ãÈù¢ËøòËÉΩÂÅöÂá∫ËØ≠‰πâÊ£ÄÊµãÔºåÂà§Êñ≠Âá∫Âõæ‰∏≠ÁöÑ‰∏úË•øÂ±û‰∫é‰ªÄ‰πà„ÄÇICCV 2015 paper ÔºöConditional Random Fields as Recurrent Neural Networks ÊµãËØïÁΩëÂùÄ‰ª•ÂèäÊµãËØïÂõæÂÉèÂ¶Ç‰∏ãÔºö http://www.robots.ox.ac.uk/~szheng/crfasrnndemo]]></content>
      <categories>
        <category>Computer Vision</category>
      </categories>
      <tags>
        <tag>Computer Vision</tag>
        <tag>Object</tag>
        <tag>Detection</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Ubuntu16.04ÂÆâË£ÖL2TP Client]]></title>
    <url>%2Farticle%2FUnderUbuntuInstallL2TP.html</url>
    <content type="text"><![CDATA[Ê∑ªÂä†Ê∫ê1sudo add-apt-repository ppa:nm-l2tp/network-manager-l2tp Update1sudo apt update ÂÆâË£Önetwork-manager-l2tp1sudo apt install network-manager-l2tp ÂÆâË£ÖUI1sudo apt install network-manager-l2tp-gnome]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>VPN</tag>
        <tag>L2TP</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[LabelImg‰ΩøÁî®ÊïôÁ®ã]]></title>
    <url>%2Farticle%2FlabelImgUsing.html</url>
    <content type="text"><![CDATA[Steps È¶ñÂÖàÊñ∞Âª∫‰∏Ä‰∏™Â≠òÊîæÊ†áÂÆöÁªìÊûúxmlÁöÑÁõÆÊ†áÊñá‰ª∂Â§πÔºàÂëΩÂêç‰∏çË¶ÅÊúâ‰∏≠ÊñáÔºâ„ÄÇ ÁÇπÂáª fileÔºåÈÄâÊã© Change default saved annotation folderÔºåÈÄâÊã©Â≠òÊîæxmlÊñá‰ª∂ÁöÑÁõÆÊ†áÊñá‰ª∂Â§π„ÄÇ ÁÇπÂáª Open DirÔºåÊâìÂºÄÂõæÂÉèÊï∞ÊçÆÁõÆÂΩïÔºà‰∏çË¶ÅÊúâ‰∏≠ÊñáÔºâ ÁÇπÂáª Create RectBoxÔºåÂÖâÊ†áÁΩÆ‰∫éÁõÆÊ†áÂ∑¶‰∏äËßíÔºåÊåâ‰ΩèÂ∑¶ÈîÆÂêëÂè≥‰∏ãËßíÊãñÂä®„ÄÇÊñπÊ°ÜÁªòÂà∂ÂÆåÊàêÂêéÔºåÂèåÂáªÈÄâÊã©ÂºπÁ™ó‰∏≠Áõ∏Â∫îÁöÑÁ±ªÂà´ÂêçÁß∞„ÄÇ Ê†áÊ≥®ÂÆåÊàêÂêéÔºåÂÖâÊ†áÊîæËá≥ÊñπÊ°ÜÂÜÖÔºåËØ•ÊñπÊ°ÜÂèØÁßªÂä®‰ΩçÁΩÆ‰ª•ÂèäÂè≥ÈîÆÂà†Èô§. Ê†áÊ≥®ÂÆåÊàêÂêéÔºåÁÇπÂáªÂ∑¶ËæπÊ†èÁöÑ saveËøõË°å‰øùÂ≠òÔºàÂä°ÂøÖ‰øùÂ≠òÔºâ Hotkeys Ctrl + u Load all of the images from a directory Ctrl + r Change the default annotation target dir Ctrl + s Save Ctrl + d Copy the current label and rect box Space Flag the current image as verified w Create a rect box d Next image a Previous image del Delete the selected rect box Ctrl++ Zoom in Ctrl‚Äî Zoom out ‚Üë‚Üí‚Üì‚Üê Keyboard arrows to move selected rect box]]></content>
      <categories>
        <category>Deep Learning</category>
      </categories>
      <tags>
        <tag>Deep Learning</tag>
        <tag>Ê∑±Â∫¶Â≠¶‰π†</tag>
        <tag>LabelImg</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[LabelImg‰ªãÁªç‰∏éÂÆâË£ÖÊïôÁ®ã]]></title>
    <url>%2Farticle%2FLabelImgInstall.html</url>
    <content type="text"><![CDATA[‰ªãÁªçÂØπÂõæÁâáÊ†áÊ≥®ËøõËÄåÂàõÂª∫Ëá™Â∑±ÁöÑÊï∞ÊçÆÈõÜÔºå‰ª•‰æøÂú®Deep neural networks‰∏≠ËøõË°åËÆ≠ÁªÉ„ÄÇ Êú¨ÊñáÊé®Ëçê‰∏ÄÊ¨æÂçÅÂàÜÂ•ΩÁî®ÁöÑÂõæÁâáÊ†áÊ≥®Â∑•ÂÖ∑LabelImgÔºåÈáçÁÇπ‰ªãÁªçÂÖ∂ÂÆâË£Ö‰ª•Âèä‰ΩøÁî®ÁöÑËøáÁ®ã„ÄÇ Âú®Ê≠§ÊÑüË∞¢Âéü‰ΩúËÄÖÂú®GithubÊâÄÂÅöÁöÑË¥°ÁåÆÔºåÂçö‰∏ªÂèëÁé∞ËΩØ‰ª∂‰∏ÄÁõ¥Âú®Êõ¥Êñ∞ÔºåÂêÑ‰ΩçÂ∞è‰ºô‰º¥ÂèØ‰ª•ÂÖ≥Ê≥®ÂÖ∂ÊúÄÊñ∞ÁâàÊú¨„ÄÇËøôÊ¨æÂ∑•ÂÖ∑ÊòØÂÖ®ÂõæÂΩ¢ÁïåÈù¢ÔºåÁî®PythonÂíåQtÂÜôÁöÑÔºåÊúÄÂéâÂÆ≥ÁöÑÊòØÂÖ∂Ê†áÊ≥®‰ø°ÊÅØÂèØ‰ª•Áõ¥Êé•ËΩ¨ÂåñÊàê‰∏∫XMLÊñá‰ª∂Ôºå‰∏éPASCAL VOC‰ª•ÂèäImageNetÁî®ÁöÑXMLÊòØ‰∏ÄÊ†∑ÁöÑ„ÄÇ PS.‰ΩúËÄÖÂú®5ÊúàÊõ¥Êñ∞‰∫Ü‰ª£Á†ÅÔºåÁé∞Âú®ÊúÄÊñ∞ÁöÑÁâàÊú¨Âè∑ÊòØ1.3.0ÔºåÂçö‰∏ª‰∫≤ÊµãÔºåÊ∫ê‰ª£Á†ÅÂú®Windows 10ÂíåUbuntu 16.04‰∏äËøêË°åÊ≠£Â∏∏„ÄÇ Ubuntu Ê∫êÁ†ÅÂÆâË£ÖÁî±‰∫éUbuntuÁ≥ªÁªüËá™Â∏¶pythonÔºåËøôÊ¨æËΩØ‰ª∂Âú®UbuntuÁéØÂ¢É‰∏ãÁöÑÂÆâË£ÖÊòØÊúÄÊñπ‰æøÁöÑ„ÄÇËΩØ‰ª∂Ë¶ÅÊ±ÇpythonÁâàÊú¨Âú®2.6‰ª•‰∏äÔºåÂêåÊó∂ÈúÄË¶ÅPyQtÂíålxmlÁöÑÊîØÊåÅ„ÄÇ 12345678910sudo apt-get install pyqt4-dev-tools # ÂÆâË£ÖPyQt4sudo pip install lxml # ÂÆâË£ÖlxmlÔºåÂ¶ÇÊûúÊä•ÈîôÔºåÂèØ‰ª•ËØïËØï‰∏ãÈù¢ËØ≠Âè•sudo apt-get install python-lxmlgit clone https://github.com/tzutalin/labelImg.gitcd labelImgmake all./labelImg.py # ÊàñËÄÖ python labelImg.py# ‰ΩúËÄÖÊñ∞Âä†ÁöÑÂëΩ‰ª§Ê®°ÂºèÔºàÂ∫îËØ•Âè™ÈÄÇÁî®‰∫éÊúÄÊñ∞github‰ª£Á†ÅÔºâ./labelImg.py [IMAGE_PATH] [PRE-DEFINED CLASS FILE] Ubuntu pipÂÆâË£Ö‰ΩúËÄÖÊúÄËøëÔºà2017.05ÔºâÂ¢ûÊ∑ªÁöÑ‰∏ÄÁßçÂÆâË£ÖÊñπÂºèÔºå‰ΩøÁî®PythonÁöÑpipÂ∑•ÂÖ∑ÂÆâË£ÖÔºåÊÑüËßâÊõ¥Êñπ‰æø‰∫Ü„ÄÇ 123pip install labelImglabelImglabelImg [IMAGE_PATH] [PRE-DEFINED CLASS FILE] WindowsÂπ≥Âè∞ÂÆâË£Ö ÂÆâË£ÖAnaconda AnacondaÊòØ‰∏ÄÊ¨æÂçÅÂàÜÂ•ΩÁî®ÁöÑpythonÈõÜÊàêÂÆâË£ÖÁéØÂ¢ÉÔºå‰∏ªË¶ÅÊòØÊñπ‰æøÊâ©Â±ïÂåÖÁÆ°ÁêÜ„ÄÇ ÂÖ∑‰Ωì‰ªãÁªçÂèØÂèÇËÄÉËøôÁØáÂçöÂÆ¢ „ÄÇÈ¶ñÂÖà‰ªéÂÆòÁΩë‰∏ãËΩΩÊúÄÊñ∞ÁöÑÁâàÊú¨ÔºåËøôÈáåÊàë‰∏ãËΩΩÁöÑÊòØ64‰ΩçÁöÑpython2.7ÁâàÊú¨„ÄÇÁÑ∂ÂêéÂèåÂáªÂÆâË£ÖÔºå‰∏ÄËà¨ÁÇπÈÄâ‚Äúfor all person‚ÄùÔºåÁÑ∂ÂêéÂÆâË£ÖÂà∞Á≥ªÁªüÈªòËÆ§‰ΩçÁΩÆÂç≥ÂèØ„ÄÇÂÆâË£ÖÊàêÂäüÂêéÂª∫ËÆÆÂú®ÁéØÂ¢ÉÂèòÈáèpathÈáåÈù¢Â¢ûÂä†‰∏ÄÊù°‚ÄúC:\Program Files\Anaconda2‚Äù ÂÆâË£ÖPyQt ÊâìÂºÄÂëΩ‰ª§Ë°åÁ™óÂè£ÔºåËæìÂÖ•conda list Ôºå‰ºöÂàóÂá∫ÊâÄÊúâÈ¢ÑË£ÖÁöÑpythonÊâ©Â±ïÂåÖÔºåÂèØ‰ª•ÁúãÂà∞ÈáåÈù¢Â∑≤ÁªèÊúâ‰∫ÜlxmlÔºå‰ΩÜÊòØÁº∫Â∞ëPyQt„ÄÇÂëΩ‰ª§Ë°åËæìÂÖ•conda install pyqt=4 ,Á≠âÂæÖ‰∏Ä‰ºöÂç≥ÂèØÂÆåÊàêPyQt4ÁöÑÂÆâË£Ö„ÄÇ ‰∏ãËΩΩÊ∫êÁ†ÅÂπ∂ËøêË°å Âú®Âéü‰ΩúËÄÖÁöÑgithub‰∏ãËΩΩÊ∫êÁ†ÅÂéãÁº©ÂåÖÔºåËß£ÂéãÂèØÂæóÂà∞Âêç‰∏∫labelImg-masterÁöÑÊñá‰ª∂Â§πÔºåËøõÂÖ•ËØ•Êñá‰ª∂Â§πÔºåÂú®Á©∫ÁôΩÂ§Ñ‰ΩøÁî®‚ÄúShift+Èº†Ê†áÂè≥ÈîÆ‚ÄùÔºåËøõÂÖ•ÂΩìÂâçÁõÆÂΩïÁöÑÂëΩ‰ª§Ë°åÁ™óÂè£Ôºå‰æùÊ¨°ËæìÂÖ•‰∏ãÈù¢ËØ≠Âè•Âç≥ÂèØÊâìÂºÄËΩØ‰ª∂„ÄÇ 123pyrcc4 -o resources.py resources.qrcpython labelImg.pypython labelImg.py [IMAGE_PATH] [PRE-DEFINED CLASS FILE]]]></content>
      <categories>
        <category>Deep Learning</category>
      </categories>
      <tags>
        <tag>Deep Learning</tag>
        <tag>Ê∑±Â∫¶Â≠¶‰π†</tag>
        <tag>LabelImg</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ËÆ°ÁÆóÊú∫ËßÜËßâÂ≠¶‰π†Á¨îËÆ∞]]></title>
    <url>%2Farticle%2FComputerVisionStudyNotes.html</url>
    <content type="text"><![CDATA[Ê¶ÇÂøµËÆ°ÁÆóÊú∫ËßÜËßâÔºàComputer VisionÔºâÂ∞±ÊòØÊåáÁî®ÊëÑÂΩ±Êú∫ÂíåËÆ°ÁÆóÊú∫‰ª£Êõø‰∫∫ÁúºÂØπÁõÆÊ†áËøõË°åËØÜÂà´„ÄÅË∑üË∏™ÂíåÊµãÈáèÁ≠âÊú∫Âô®ËßÜËßâÔºåÂπ∂Ëøõ‰∏ÄÊ≠•ÂÅöÂõæÂÉèÂ§ÑÁêÜÔºåÁî®ËÆ°ÁÆóÊú∫Â§ÑÁêÜÊàêÊõ¥ÈÄÇÂêà‰∫∫ÁúºËßÇÂØüÊàñËøõË°å‰ª™Âô®Ê£ÄÊµãÁöÑÂõæÂÉè„ÄÇ Âõæ1 ËÆ°ÁÆóÊú∫ËßÜËßâ‰ªãÁªç Âõæ2 ËÆ°ÁÆóÊú∫ËßÜËßâ„ÄÅÊú∫Âô®ËßÜËßâÂíåÂõæÂÉèÂ§ÑÁêÜ‰πãÈó¥ÁöÑÂÖ≥Á≥ªÂíåÂå∫Âà´]]></content>
      <categories>
        <category>Computer Vision</category>
      </categories>
      <tags>
        <tag>ËÆ°ÁÆóÊú∫ËßÜËßâ</tag>
        <tag>Computer Vision</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Â§ßÁñÜManiflodÂ¶ôÁÆó -‰∏™‰∫∫ÁêÜËß£]]></title>
    <url>%2Farticle%2FDJIManiflodUsing.html</url>
    <content type="text"><![CDATA[Â¶ôÁÆóÁöÑÂÆûË¥®ÂÆòÊñπÂÆ£Áß∞ÔºöÂ§ßÁñÜÁõ¥ËøûËÆ°ÁÆóÂπ≥Âè∞‰∏™‰∫∫ÁêÜËß£ÔºöËã±‰ºüËææTK1+Ëá™ÂÆö‰πâÊé•Âè£+Â§ßÁñÜÁöÑSDK Ê≥®ÊÑèËôΩÁÑ∂ÈïøÂæóÂÉè‰∏™ÂæÆÂûãÁîµËÑëÔºå‰ΩÜÂ¶ôÁÆóÂÜÖÈÉ®ÁöÑCPU„ÄÅGPUÊòØÂµåÂÖ•ÂºèÔºàNVIDIA Jetson TK1ÔºâÁöÑÔºåÊâÄ‰ª•ÈªòËÆ§Êê≠ËΩΩÁöÑ‰πüÊòØÂµåÂÖ•ÂºèUbuntuÁ≥ªÁªüÔºàÂ§ßÁñÜÂèØËÉΩÂú®Ëøô‰∏™Âü∫Á°Ä‰∏äÂÅö‰∫Ü‰∏Ä‰∫õ‰ºòÂåñÔºâ‰∏ÄËà¨Êàë‰ª¨Ë£ÖUbuntuÂêé‰ºöÂõ†‰∏∫apt-getÁöÑ‰∏ãËΩΩÊ∫êÁΩëÈÄüÊØîËæÉÊÖ¢ËÄåÊç¢ÊàêÂõΩÂÜÖÁöÑÊ∫êÔºàÈòøÈáå‰πãÁ±ªÁöÑÔºâÔºåÂçÉ‰∏áË¶ÅËÆ∞ÂæóÂà´ÈÄâÊàêi386ÁöÑÂÆâË£ÖÊ∫êÔºàÈÇ£ÊòØÁªôIntelËäØÁâáÁöÑÊú∫Â≠êÁî®ÁöÑÔºâ ÂÆâË£ÖÂêéÁöÑÁ≥ªÁªüÈªòËÆ§ÊòØÂÖ®Ëã±ÊñáÁöÑ OpenCVÂ¶ôÁÆóÊîØÊåÅ‰∏§ÁßçÔºàËøòÊòØ‰∏âÁßçÔºüÊàëËÆ∞‰∏çÊ∏Ö‰∫ÜÔºâOpenCV Ê°åÈù¢Á≥ªÁªüÁöÑOpenCVÔºà2Ôºå3Â∫îËØ•ÈÉΩÂèØ‰ª•Ôºâ ÈíàÂØπJetson TK1‰∏ìÈó®‰ºòÂåñËøáÁöÑOpenCVÔºàÁâàÊú¨ÊòØ2.x.xÔºå‰∏çÊîØÊåÅ3‰ª•‰∏äÁöÑÁâàÊú¨ÔºåÂ§ßÁñÜÂÆòÊñπÊâãÂÜåÈáåÊúâËÆ≤ÂÖ∑‰ΩìÁöÑÂÆâË£ÖÂäûÊ≥ïÔºâ ÂÆâË£ÖÊïôÁ®ãÂÖ∑‰ΩìËøáÁ®ãËØ∑ÁúãÂÆòÊñπÊïôÁ®ã ÈáçË£ÖÁ≥ªÁªüÔºàÂà∂‰ΩúÂíåÊÅ¢Â§çÈïúÂÉèÔºâÈúÄË¶ÅËøûÊé•Âà∞Ë£ÖÊúâLinuxÁ≥ªÁªüÁöÑÁîµËÑëÔºåÂà∑ÂÖ•Á≥ªÁªüÂÖ∑‰ΩìËøáÁ®ãËØ∑ÁúãÂÆòÊñπÊïôÁ®ã ÊúÄÂêéÂ¶ÇÊûú‰Ω†‰∏çÊòØÂÅöÂµåÂÖ•ÂºèÂºÄÂèëÁöÑÔºåÊé•Ëß¶Â¶ôÁÆóÂêé‰ºö‰∏çÁÜüÊÇâÔºåÁâπÂà´ÊòØ‰Ω†ÊääÊú∫Â≠êÊêûÂà∞Ë¶ÅÈáçË£ÖÊó∂‰ºöÂæàÊó†ËØ≠Ôºå‰∏çËøá‰πüÊîæÂÆΩÂøÉÊÄÅÔºåÂìàÂìàÂìà‚Ä¶ ËØ¶ÁªÜËøáÁ®ãÂêéÁª≠ÊñáÁ´†‰∏≠ÁªßÁª≠Êõ¥Êñ∞‚Ä¶‚Ä¶]]></content>
      <categories>
        <category>UAV</category>
      </categories>
      <tags>
        <tag>UAV</tag>
        <tag>Êó†‰∫∫Êú∫</tag>
        <tag>Â§ßÁñÜ</tag>
        <tag>Â¶ôÁÆó</tag>
        <tag>Maniflod</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Â§ßÁñÜManiflodÂ¶ôÁÆóËØ¶Ëß£]]></title>
    <url>%2Farticle%2FDJIManiflodIntroduce.html</url>
    <content type="text"><![CDATA[Âü∫Êú¨ÈÖçÁΩÆManifold Â¶ôÁÆóÈááÁî®NVIDIA Tegra K1Â§ÑÁêÜÂô®ÔºåÂÆÉÁî±NVIDIA 4-Âä†-1 ÂõõÊ†∏ARM - Cortex A15 CPUÂíåÂåÖÂê´192‰∏™NVIDIA CUDA Ê†∏ÂøÉÁöÑ NVIDIA Kepler GPUÁªÑÊàêÔºåÊúÄÈ´ò‰∏ªÈ¢ëËææ2.2GHz„ÄÇGPUÊ†∏ÂøÉ‰∏ç‰ªÖËÉΩÂÆûÁé∞Âº∫Â§ßÁöÑÂõæÂÉèÂ§ÑÁêÜËÉΩÂäõÔºåËøòËÉΩÈ´òÊïàÂú∞Â§ÑÁêÜÂπ∂Ë°å‰ªªÂä°ÔºåÊµÆÁÇπËøêÁÆóËÉΩÂäõËææ326GFLOPS„ÄÇ ÂõæÂÉèÂ§ÑÁêÜÂäüËÉΩManifold Â¶ôÁÆó Êã•ÊúâPCÁã¨Á´ãÊòæÂç°Á∫ßÂà´ÁöÑÁªòÂõæËÉΩÂäõÔºåÊîØÊåÅDirectX 11„ÄÅOpenGL 4.4ÔºåÂèØËÆ©Êú∫Âô®‰∫∫ÂÆûÊó∂ËøõË°åÂ§çÊùÇÁöÑÂõæÂÉèÂ§ÑÁêÜ„ÄÇManifoldËøòÊîØÊåÅNVIDIA CUDAÔºåÁî®‰∫éÂºÄÂèëÊúÄÂâçÊ≤øÁöÑ GPU Âä†ÈÄüÂ∫îÁî®ÔºåÂèØÂ∞ÜÁ®ãÂ∫èÊÄßËÉΩÊèêÂçáÊï∞ÂÄç„ÄÇManifoldËÉΩÂπøÊ≥õÂ∫îÁî®‰∫éËÆ°ÁÆóÊú∫ËßÜËßâ„ÄÅÊ∑±Â∫¶Â≠¶‰π†Á≠â‰∫∫Â∑•Êô∫ËÉΩÈ¢ÜÂüüÔºåËÆ©‰Ω†ÁöÑËÆæÂ§áÂÖ∑Â§áÁéØÂ¢ÉÊÑüÁü•„ÄÅÁâ©‰ΩìËæ®ËØÜÂíåÂÆûÊó∂ÂèçÂ∫îËÉΩÂäõ„ÄÇ ÂºÄÂèëÁéØÂ¢ÉManifold Â¶ôÁÆóÊê≠ËΩΩ‰∫ÜUbuntuÊìç‰ΩúÁ≥ªÁªüÔºåÂèØ‰æøÊç∑ÂÆâË£ÖËøêË°åLinuxËΩØ‰ª∂ÔºåÊîØÊåÅCUDA„ÄÅOpenCVÂèäROSÁ≠â„ÄÇÂÖ®Èù¢ÊîØÊåÅDJI Onboard SDKÔºåÂèØËΩªÊùæËé∑ÂèñÈ£ûË°åÊï∞ÊçÆÔºåÂπ∂ËøõË°åÊéßÂà∂ÂíåÊï∞ÊçÆÂàÜÊûê„ÄÇ Êé•Âè£Manifold Â¶ôÁÆóÂÖ∑Â§áUSB„ÄÅEthernet„ÄÅMini-PCIe„ÄÅHDMI„ÄÅUART„ÄÅSPIÂíåI2CÁ≠â‰∏ÄÁ≥ªÂàóÊé•Âè£ÔºåÂèØËøûÊé•‰º†ÊÑüÂô®„ÄÅÊòæÁ§∫Â±èÁ≠âÂ§öÁßçÊâ©Â±ïËÆæÂ§á„ÄÇManifoldËøòËÉΩÈÄöËøáËá™ÂÆö‰πâÊé•Âè£‰∏éÁªèÁ∫¨M100 „ÄÅM600ËøûÊé•ÔºåÂÆûÊó∂Êé•Êî∂Âπ∂Â§ÑÁêÜÊâÄÊê≠ËΩΩ‰∫ëÂè∞Áõ∏Êú∫ÁöÑÂõæÂÉè‰ø°ÊÅØ„ÄÇ ÂäüËÄóÂÖ∂Â≥∞ÂÄºÂäüËÄóÁ∫¶15WÔºå‰ªÖ‰∏∫ÊôÆÈÄöÁ¨îËÆ∞Êú¨ÁîµËÑëÁöÑÂõõÂàÜ‰πã‰∏ÄÔºåÈÖçÂ§áÁöÑTegra K1 CPUÂÖ±Êúâ4‰∏™A15Ê†∏ÂøÉÔºåÂèØ‰ªéÂÆπÂ∫îÂØπÂ§çÊùÇÁöÑËÆ°ÁÆó‰ªªÂä°Ôºå 1‰∏™ÈôÑÂ±ûÊ†∏ÂøÉË¥üË¥£ÁÆÄÂçï‰ªªÂä°ÁöÑÂ§ÑÁêÜ„ÄÇÂÖ∂‰∏≠Ôºå4‰∏™A15Ê†∏ÂøÉ‰∏≠ÁöÑÊØè‰∏Ä‰∏™Ê†∏ÂøÉÂùáÂèØÊ†πÊçÆÂ∑•‰ΩúË¥üËç∑ÁöÑÁπÅÈáçÁ®ãÂ∫¶ÔºåÁã¨Á´ãËÄåËá™Âä®Âú∞ÂêØÁî®ÂíåÂÖ≥Èó≠Ôºå‰ªéËÄåÈôç‰ΩéÊï¥‰ΩìÂäüËÄó„ÄÇ]]></content>
      <categories>
        <category>UAV</category>
      </categories>
      <tags>
        <tag>UAV</tag>
        <tag>Êó†‰∫∫Êú∫</tag>
        <tag>Â§ßÁñÜ</tag>
        <tag>Â¶ôÁÆó</tag>
        <tag>Maniflod</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Êú∫Âô®Â≠¶‰π†‰∏éÊ∑±Â∫¶Â≠¶‰π†ËµÑÊñôÊé®Ëçê]]></title>
    <url>%2Farticle%2FDeepLearningMaterials.html</url>
    <content type="text"><![CDATA[Êõ¥Êñ∞‰∏≠... ![AIÂú£ÁªèÁ∫ßÊïôÁßë‰π¶](https://img.wangcong.net/DeepLearningMateroals.jpg) Ê∑±Â∫¶Â≠¶‰π†Âú£ÁªèÁ∫ßÊïôÁßë‰π¶ ÊëÜ‰π¶ÊàøÔºå‰ø°‰ª∞Áî® ÂÖ¨ÂºÄËØæMachine learningÔºö Andrew Ng (Âê¥ÊÅ©Ëææ): ÊñØÂù¶Á¶èÂ§ßÂ≠¶CS229 „Ää Mchine learning„ÄãÊé®Ëçê Andrew Ng (Âê¥ÊÅ©Ëææ): Coursera2012Êé®Ëçê Hung-yi Lee: Âè∞ÊπæÂ§ßÂ≠¶ Machine Learning (2017,Fall)Êé®Ëçê Geoffrey Hinton: Coursera „ÄäNeural Networks For Machine Learning„Äã Yaser Abu-Mostafa: Âä†Â∑ûÁêÜÂ∑•Â≠¶Èô¢ „ÄäLearnning from data„Äã Deep learningÔºö Andrew Ng (Âê¥ÊÅ©Ëææ): DeeplearniNg.AI Deep LearningÊé®Ëçê Fei-Fei Li: ÊñØÂù¶Á¶èÂ§ßÂ≠¶CS231n „ÄäConvolutional Neural Networks for Visual Recognition„ÄãÊé®Ëçê Chris Manning: ÊñØÂù¶Á¶èÂ§ßÂ≠¶CS224n „ÄäNatural Language Processing with Deep Learning„Äã Google: Udacity „ÄäDeep Learning by Google„Äã Reinforcement LearningÔºö Hung-yi Lee: Âè∞ÊπæÂ§ßÂ≠¶ Ê∑±Â∫¶Âº∫ÂåñÂ≠¶‰π†Êé®Ëçê Emma Brunskill: ÊñØÂù¶Á¶èÂ§ßÂ≠¶CS234 „ÄäReinforcement Learning Winter 2019„Äã ÊïôÊùê Yoshua Bengio „ÄäDeep Learning„Äã Gene H. Golub „ÄäMatrix Computations„Äã ÊùéËà™ „ÄäÁªüËÆ°Â≠¶‰π†ÊñπÊ≥ï„Äã Âë®ÂøóÂçé „ÄäÊú∫Âô®Â≠¶‰π†„Äã Li Y. Deep Reinforcement Learning: An Overview[J]. 2017. Ê∑±Â∫¶Â≠¶‰π†Ê°ÜÊû∂ Tensorflow ÂàùÂ≠¶ËÄÖÁØáÔºöhttps://www.tensorflow.org/get_started/mnist/beginners ËøõÈò∂ÁØáÔºöhttps://www.tensorflow.org/get_started/mnist/pros PyTorch ÂèÇËÄÉÔºöhttps://github.com/zergtant/pytorch-handbook Caffe ÂèÇËÄÉÔºöhttp://www.cnblogs.com/denny402/tag/caffe/default.html?page=2 Keras ÂèÇËÄÉÔºöhttp://keras-cn.readthedocs.io/en/latest/getting_started/sequential_model/]]></content>
      <categories>
        <category>Deep Learning</category>
      </categories>
      <tags>
        <tag>Deep Learning</tag>
        <tag>Ê∑±Â∫¶Â≠¶‰π†</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Faster-RCNNÁöÑÊê≠Âª∫ÂíåÊµãËØï]]></title>
    <url>%2Farticle%2FFasterRCNNBulidAndTest.html</url>
    <content type="text"><![CDATA[‰∏ãËΩΩFaster-RCNN12cd ~git clone --recursive https://github.com/rbgirshick/py-faster-rcnn.git ÂÆâË£ÖPython‰æùËµñÂåÖ1234sudo apt-get install python-pipsudo pip install cythonsudo apt-get install python-opencvsudo pip install easydic ÁîüÊàêCythonÊ®°Âùó12cd ~/py-faster-rcnn/lib/make ÂÆâË£ÖAtlas1sudo apt-get install libatlas-base-dev ÁîüÊàêCaffeÂíåpycaffe12cd ~/py-faster-rcnn/caffe-fast-rcnncp Makefile.config.example Makefile.config ÁºñËæëMakefile.configÔºåÊ†πÊçÆËá™Â∑±ÁöÑÈúÄË¶Å‰øÆÊîπÁõ∏Â∫îÊ®°ÂºèÔºåÂÖ∂‰∏≠ÈáçÁÇπÂÖ≥Ê≥®CPU_ONLY ÂíåWITH_PYTHON_LAYER‰ª•ÂèäCUDNNÁ≠âÂ§ÑÔºåËã•ÊòØÂú®CPUÁöÑÊÉÖÂÜµ‰∏ãÔºåËØ∑Âä°ÂøÖ‰øÆÊîπ‰∏∫CPU_ONLY Ôºö= 1 ÁºñËØëÁéØÂ¢É12345678cd ~/py-faster-rcnn/caffe-fast-rcnnmkdir buildcd buildcmake ..make all -j16Ôºà"‚Äêj16"ÊòØ‰ΩøÁî® CPU ÁöÑÂ§öÊ†∏ËøõË°åÁºñËØë,ÂèØ‰ª•ÊûÅÂ§ßÂú∞Âä†ÈÄüÁºñËØëÁöÑÈÄüÂ∫¶Ôºâmake installmake runtest -j16ÔºàÂ¶ÇÊûúÂá∫ÈîôÊ≤°ÊúâÂÖ≥Á≥ªÔºåÁõ¥Êé•ËøõË°å‰∏ã‰∏ÄÊ≠•Ôºâmake pycaffeÔºàÁºñËØëpycaffeÔºâ ‰∏ãËΩΩfetch_fast_rcnn_models‰∏ãËΩΩÁΩëÂùÄÔºöÔºàÈìæÊé•Ôºöhttp://pan.baidu.com/s/1pJVburD ÂØÜÁ†ÅÔºö11m0Ôºâ Â∞Ü‰∏ãËΩΩÂ•ΩÁöÑfaster_rcnn_models.tgzÊîæÂà∞/py-faster-rcnn/dataËøô‰∏™ÁõÆÂΩï‰∏ãÔºåÂè≥ÈîÆÊèêÂèñÂà∞Ê≠§Â§ÑÔºåÂç≥ÊòØËß£Âéã„ÄÇ CPUÁéØÂ¢É‰∏ãÊâÄÈúÄË¶ÅÁöÑÊìç‰Ωú 1vim ~/py-faster-rcnn/lib/fast_rcnn/config.py Â∞Ü __C.USE_GPU_NMS = False 1vim ~/py-faster-rcnn/tools/test_net.py Ê≥®ÈáäÊéâÔºöcaffe.set_mode_gpu() ÔºåÂÖ∂‰∏ãÊñπÊ∑ªÂä†Ôºö caffe.set_mode_cpu() 1vim ~/py-faster-rcnn/tools/train_net.py Ê≥®ÈáäÊéâÔºöcaffe.set_mode_gpu() ÔºåÂÖ∂‰∏ãÊñπÊ∑ªÂä†Ôºö caffe.set_mode_cpu() 1vim ~/py-faster-rcnn/lib/setup.py Ê≥®ÈáäÊéâGPUÁõ∏ÂÖ≥‰ª£Á†ÅÔºåÂ¶Ç‰∏ã 1#CUDA = locate_cuda() 1234567891011121314151617# Extension('nms.gpu_nms',# ['nms/nms_kernel.cu', 'nms/gpu_nms.pyx'],# library_dirs=[CUDA['lib64']],# libraries=['cudart'],# language='c++',# runtime_library_dirs=[CUDA['lib64']],# # this syntax is specific to this build system# # we're only going to use certain compiler args with nvcc and not with# # gcc the implementation of this trick is in customize_compiler() below# extra_compile_args=&#123;'gcc': ["-Wno-unused-function"],# 'nvcc': ['-arch=sm_35',# '--ptxas-options=-v',# '-c',# '--compiler-options',# "'-fPIC'"]&#125;,# include_dirs = [numpy_include, CUDA['include']]# ), 1vim ~/py-faster-rcnn/lib/fast_rcnn/nms_wrapper.py Ê≥®ÈáäÊéâ #from nms.gpu_nms import gpu_nms ËøêË°åDemo1234cd ~/py-faster-rcnn/tools./demo.py Êàñpython demo.py #ÂΩìÊ≠§Â§ÑÊä•ÈîôÊó∂ËØ∑Â∞ùËØïpython2 demo.py#CPUÁéØÂ¢É‰∏ãËøêË°åËØùÔºöpython2 demo.py --cpu Ëã•ÊèêÁ§∫Áº∫Â∞ëÊüê‰∏™Ê®°Âùó(module)ÔºåÁΩë‰∏äÊêúÁ¥¢‰∏ãÔºåÂÆâË£ÖÁªôÂá∫ÁöÑÊïôÁ®ãÂÆâË£ÖÁõ∏Â∫îÊ®°ÂùóÔºåÂª∫ËÆÆÂ∞ΩÈáèÁªàÁ´Ø‰∏≠ÂëΩ‰ª§ÂÆâË£ÖÔºé ÊïàÊûúÂõæÂ¶Ç‰∏ã(‰ªÖË¥¥‰∫Ü‰∏ÄÂº†Âõæ)Ôºö]]></content>
      <categories>
        <category>Deep Learning</category>
      </categories>
      <tags>
        <tag>Caffe</tag>
        <tag>Deep Learning</tag>
        <tag>Ê∑±Â∫¶Â≠¶‰π†</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Fast-RCNNÁöÑÊê≠Âª∫ÂíåÊµãËØï]]></title>
    <url>%2Farticle%2FFastRCNNBulidAndTest.html</url>
    <content type="text"><![CDATA[‰∏ãËΩΩFast-RCNN12cd ~git clone --recursive https://github.com/rbgirshick/fast-rcnn.git ÂÆâË£ÖPython‰æùËµñÂåÖ1234sudo apt-get install python-pipsudo pip install cythonsudo apt-get install python-opencvsudo pip install easydic ÁîüÊàêCythonÊ®°Âùó12cd ~/fast-rcnn/lib/make ÂÆâË£ÖAtlas1sudo apt-get install libatlas-base-dev ÁîüÊàêCaffeÂíåpycaffe12cd ~/fast-rcnn/caffe-fast-rcncp Makefile.config.example Makefile.config ÁºñËæëMakefile.configÔºåÊ†πÊçÆËá™Â∑±ÁöÑÈúÄË¶Å‰øÆÊîπÁõ∏Â∫îÊ®°ÂºèÔºåÂÖ∂‰∏≠ÈáçÁÇπÂÖ≥Ê≥®CPU_ONLY ÂíåWITH_PYTHON_LAYER‰ª•ÂèäCUDNNÁ≠âÂ§ÑÔºåËã•ÊòØÂú®CPUÁöÑÊÉÖÂÜµ‰∏ãÔºåËØ∑Âä°ÂøÖ‰øÆÊîπ‰∏∫CPU_ONLY Ôºö= 1 ÁºñËØëÁéØÂ¢É12345678cd ~/fast-rcnn/caffe-fast-rcnnmkdir buildcd buildcmake ..make all -j16Ôºà"‚Äêj16"ÊòØ‰ΩøÁî® CPU ÁöÑÂ§öÊ†∏ËøõË°åÁºñËØë,ÂèØ‰ª•ÊûÅÂ§ßÂú∞Âä†ÈÄüÁºñËØëÁöÑÈÄüÂ∫¶Ôºâmake installmake runtestmake pycaffeÔºàÁºñËØëpycaffeÔºâ ‰∏ãËΩΩfetch_fast_rcnn_models‰∏ãËΩΩÁΩëÂùÄÔºöÔºàÈìæÊé•Ôºöhttp://pan.baidu.com/s/1pJVburD ÂØÜÁ†ÅÔºö11m0Ôºâ Â∞Ü‰∏ãËΩΩÂ•ΩÁöÑfetch_fast_rcnn_models.tgzÊîæÂà∞/fast-rcnn/dataËøô‰∏™ÁõÆÂΩï‰∏ãÔºåÂè≥ÈîÆÊèêÂèñÂà∞Ê≠§Â§ÑÔºåÂç≥ÊòØËß£Âéã„ÄÇ ËøêË°åDemo1234cd ~/fast-rcnn/tools./demo.py Êàñpython demo.py #ÂΩìÊ≠§Â§ÑÊä•ÈîôÊó∂ËØ∑Â∞ùËØïpython2 demo.py#CPUÁéØÂ¢É‰∏ãËøêË°åËØùÔºöpython2 demo.py --cpu Ëã•ÊèêÁ§∫Áº∫Â∞ëÊüê‰∏™Ê®°Âùó(module)ÔºåÁΩë‰∏äÊêúÁ¥¢‰∏ãÔºåÂÆâË£ÖÁªôÂá∫ÁöÑÊïôÁ®ãÂÆâË£ÖÁõ∏Â∫îÊ®°ÂùóÔºåÂª∫ËÆÆÂ∞ΩÈáèÁªàÁ´Ø‰∏≠ÂëΩ‰ª§ÂÆâË£ÖÔºé ÊïàÊûúÂõæÂ¶Ç‰∏ã(‰ªÖË¥¥‰∫Ü‰∏ÄÂº†Âõæ)Ôºö]]></content>
      <categories>
        <category>Deep Learning</category>
      </categories>
      <tags>
        <tag>Caffe</tag>
        <tag>Deep Learning</tag>
        <tag>Ê∑±Â∫¶Â≠¶‰π†</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÊµãËØïCaffe]]></title>
    <url>%2Farticle%2FTestCaffe.html</url>
    <content type="text"><![CDATA[‰∏ãËΩΩMnist123cd ~/caffesudo sh data/mnist/get_mnist.shsudo sh examples/mnist/create_mnist.sh ‚Äã ÊúâGPUÔºåÂàô‰∏çÈúÄË¶Å‰øÆÊîπÈÖçÁΩÆÊñá‰ª∂ÔºåÂ¶ÇÊûúÊ≤°ÊúâGPUÔºåÂàôÈúÄË¶Å‰øÆÊîπÈÖçÁΩÆÊñá‰ª∂ lenet_solver.prototxt 1vim examples/mnist/lenet_solver.prototxt Â∞ÜÊúÄÂêé‰∏ÄË°åÁöÑsolver_mode:GPU Êîπ‰∏∫ solver_mode:CPU ËøêË°å1sudo sh examples/mnist/train_lenet.sh Ê≥®ÊÑèÔºåËøêË°åcaffeÁ®ãÂ∫èÊó∂ÔºåÂøÖÈ°ªÂú®caffeÁöÑÊ†πÁõÆÂΩï‰∏ãÔºå‰∏çÁÑ∂‰ºöÂá∫Èîô ‚Äã‚Äã]]></content>
      <categories>
        <category>Deep Learning</category>
      </categories>
      <tags>
        <tag>Caffe</tag>
        <tag>Deep Learning</tag>
        <tag>Ê∑±Â∫¶Â≠¶‰π†</tag>
        <tag>Â≠¶‰π†Á¨îËÆ∞</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÂÆâË£ÖCaffe]]></title>
    <url>%2Farticle%2FInstallCaffe.html</url>
    <content type="text"><![CDATA[‰∏ãËΩΩCaffeÁõ¥Êé•‰ΩøÁî®Git‰∏ãËΩΩcaffeÔºåÂ¶ÇÊûúÊ≤°ÊúâGitÔºåËØ∑ÂÖàÂÆâË£ÖGitÔºö1sudo apt-get install git ‚Äã ÂÆâË£ÖCaffeÔºö 1git clone git://github.com/BVLC/caffe.git ÂÆâË£Ö‰æùËµñÂåÖ1234567891011sudo apt-get install libatlas-base-devsudo apt-get install libprotobuf-devsudo apt-get install libleveldb-devsudo apt-get install libsnappy-devsudo apt-get install libopencv-devsudo apt-get install libboost-all-devsudo apt-get install libhdf5-serial-devsudo apt-get install libgflags-devsudo apt-get install libgoogle-glog-devsudo apt-get install liblmdb-devsudo apt-get install protobuf-compiler ÂÆâË£ÖOpenCVÔºàÂèØÈÄâÔºâ123456cd caffesudo git clone https://github.com/jayrambhia/Install-OpenCVcd Install-OpenCV/Ubuntusudo sh dependencies.shcd 2.4sudo sh opencv2_4_10.sh ‰øÆÊîπCaffeÈÖçÁΩÆÊñá‰ª∂12cd ~/caffesudo cp Makefile.config.example Makefile.config ‰øÆÊîπÈÖçÁΩÆÊñá‰ª∂ÔºåÊú¨‰∫∫‰ΩøÁî®vimÔºåËã•ÊûúÊ≤°ÊúâÔºåËØ∑ÂÖàÂÆâË£ÖÔºö 1sudo apt-get install vim ÊâìÂºÄÊñá‰ª∂Ôºö 1vim Makefile.config ‰øÆÊîπÂ¶Ç‰∏ãÔºö 12345678910111213141516171819202122232425262728//Â¶ÇÊûú‰Ω†‰∏ç‰ΩøÁî®GPUÁöÑËØùÔºåÂ∞±Â∞Ü# CPU_ONLY := 1‰øÆÊîπÊàêÔºöCPU_ONLY := 1//Ëã•‰ΩøÁî®cudnnÔºåÂàôÂ∞Ü# USE_CUDNN := 1‰øÆÊîπÊàêÔºöUSE_CUDNN := 1//Ëã•‰ΩøÁî®ÁöÑopencvÁâàÊú¨ÊòØ3ÁöÑÔºåÂàôÂ∞Ü# OPENCV_VERSION := 3‰øÆÊîπ‰∏∫ÔºöOPENCV_VERSION := 3//Ëã•Ë¶Å‰ΩøÁî®pythonÊù•ÁºñÂÜôlayerÔºåÂàôÈúÄË¶ÅÂ∞Ü# WITH_PYTHON_LAYER := 1‰øÆÊîπ‰∏∫WITH_PYTHON_LAYER := 1//ÈáçË¶ÅÁöÑ‰∏ÄÈ°πÔºÅÔºÅÔºÅÂ∞Ü# Whatever else you find you need goes here.‰∏ãÈù¢ÁöÑINCLUDE_DIRS := $(PYTHON_INCLUDE) /usr/local/includeLIBRARY_DIRS := $(PYTHON_LIB) /usr/local/lib /usr/lib‰øÆÊîπ‰∏∫ÔºöINCLUDE_DIRS := $(PYTHON_INCLUDE) /usr/local/include /usr/include/hdf5/serialLIBRARY_DIRS := $(PYTHON_LIB) /usr/local/lib /usr/lib /usr/lib/x86_64-linux-gnu /usr/lib/x86_64-linux-gnu/hdf5/serial//ËøôÊòØÂõ†‰∏∫ubuntu16.04ÁöÑÊñá‰ª∂ÂåÖÂê´‰ΩçÁΩÆÂèëÁîü‰∫ÜÂèòÂåñÔºåÂ∞§ÂÖ∂ÊòØÈúÄË¶ÅÁî®Âà∞ÁöÑhdf5ÁöÑ‰ΩçÁΩÆÔºåÊâÄ‰ª•ÈúÄË¶ÅÊõ¥ÊîπËøô‰∏ÄË∑ØÂæÑ ÁºñËØë123make all -j16Ôºà"‚Äêj16"ÊòØ‰ΩøÁî® CPU ÁöÑÂ§öÊ†∏ËøõË°åÁºñËØë,ÂèØ‰ª•ÊûÅÂ§ßÂú∞Âä†ÈÄüÁºñËØëÁöÑÈÄüÂ∫¶Ôºâmake test -j16make runtest -j16]]></content>
      <categories>
        <category>Deep Learning</category>
      </categories>
      <tags>
        <tag>Caffe</tag>
        <tag>Deep Learning</tag>
        <tag>Ê∑±Â∫¶Â≠¶‰π†</tag>
        <tag>Â≠¶‰π†Á¨îËÆ∞</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[LinuxÂ≠¶‰π†Á¨îËÆ∞]]></title>
    <url>%2Farticle%2FLinuxStudyNote.html</url>
    <content type="text"><![CDATA[ÁªùÂØπË∑ØÂæÑÔºö cd /home/pythonÁõ∏ÂØπË∑ØÂæÑÔºö cd Desktop . : Ë°®Á§∫ÂΩìÂâçÁõÆÂΩï.. : Ë°®Á§∫ÂΩìÂâçÁõÆÂΩïÁöÑ‰∏ä‰∏ÄÂ±ÇÁõÆÂΩï../.. : Ë°®Á§∫ÂΩìÂâçÁõÆÂΩïÁöÑ‰∏ä‰∏äÂ±ÇÁõÆÂΩïÊ≤°Êúâ‚Ä¶Êàñ‰ª•‰∏ä ls : 123456789101112ls #Êü•ÁúãÂΩìÂâçÁõÆÂΩï‰∏ãÁöÑÊñá‰ª∂ÊàñÊñá‰ª∂Â§πls /bin #Êü•ÁúãÊ†πÁõÆÂΩï‰∏ãbinÊñá‰ª∂Â§π‰∏ãÁöÑ‰∏úË•øls Document #Êü•ÁúãÂΩìÂâçË∑ØÂæÑ‰∏ãDocumentÊñá‰ª∂Â§π‰∏≠ÁöÑ‰∏úË•øls -a #ÊòæÁ§∫ÈöêËóèÊñá‰ª∂ls -l #‰ª•ÂàóËØ¶ÁªÜË°®Ê†ºÂºèÊòæÁ§∫Êñá‰ª∂ls -l -h #‰ª•ÂàóËØ¶ÁªÜË°®Ê†ºÂºèÊòæÁ§∫Êñá‰ª∂ÔºåÊñá‰ª∂Â§ßÂ∞è‰ª•ÂêàÈÄÇÁöÑÂçï‰ΩçËøõË°åÊòæÁ§∫ (ls -lh Êàñ ls -hl ÊïàÊûúÂêå‰∏äÔºâls *.txt #ÊòæÁ§∫‰ª•txt‰∏∫ÂêéÁºÄÁöÑÊñá‰ª∂ls *.t?t #ÊòæÁ§∫txtÊàñtntÁ≠â‰∏∫ÂêéÁºÄÁöÑÊñá‰ª∂ls *.t[xn]t #Âè™ÊòæÁ§∫txtÊàñtnt‰∏∫ÂêéÁºÄÁöÑÊñá‰ª∂ls *.t[a-f]t #Âè™ÊòæÁ§∫tat -&gt; tft‰∏∫ÂêéÁºÄÁöÑÊñá‰ª∂ÔºåÂøÖÈ°ªÊòØËøûÁª≠ÁöÑls \*a #ÊòæÁ§∫ *a Êñá‰ª∂ls -alh | more #ÊòæÁ§∫ÔºåÂπ∂ÂàÜÈ°µÊòæÁ§∫ÔºåÂà©Áî®‰∫ÜÁÆ°ÈÅì‚Äú|‚ÄùÂëΩ‰ª§ËøõË°åÊöÇÊó∂Â≠òÂÇ® cd : 1234cd Desktop #ËøõÂÖ•DesktopËøô‰∏™Êñá‰ª∂Â§πcd .. #Ë∑≥ËΩ¨Âà∞ÂΩìÂâçÁõÆÂΩïÁöÑ‰∏ä‰∏ÄÂ±ÇÁõÆÂΩïcd - #Ë∑≥ËΩ¨Âà∞‰∏ä‰∏ÄÊ¨°ÊâÄÂú®ÁöÑË∑ØÂæÑ(Á±ª‰ººÈÅ•ÊéßÂô®‰∏≠ÁöÑÂõûÁúã)cd ~ #Ë∑≥ËΩ¨Âà∞ÂΩìÂâçÁî®Êà∑ÁöÑÂÆ∂ÁõÆÂΩï clear : Ê∏ÖÂ±è pwd : ÊòæÁ§∫Ë∑ØÂæÑ tab : Áî®Êù•Ëá™Âä®Ë°•ÂÖ® touch : ÂàõÂª∫‰∏Ä‰∏™Êñá‰ª∂ÔºåLinux‰∏≠Ê≤°ÊúâÂêéÁºÄÁöÑËØ¥Ê≥ïÔºåÂèØ‰ª•Ëµ∑ÂêÑÁßçÂêçÂ≠ó1touch a/b/xxx.txt #Âú®a‰∏≠ÁöÑbÊñá‰ª∂Â§π‰∏≠ÂàõÂª∫ xxx.txtÊñá‰ª∂ > #ÈáçÂÆöÂêë Ôºå‰æãÂ¶Ç ls &gt; test.txt Êàñ ls -alh &gt; test.txt >&gt; #ÈáçÂÆöÂêëÔºå‰∏çËøá‰∏ç‰ª£ÊõøÂéüÊï∞ÊçÆÔºåÊ∑ªÂä†Êï∞ÊçÆ more ÔºöÂàÜÂ±èÊòæÁ§∫cat ÔºöÂÖ®ÈÉ®ÊòæÁ§∫ 12cat helloworld.txt &gt; xyz.txt #Ëµ∑Âà∞Âà∞Â§çÂà∂ÁöÑÂäüËÉΩcat a.txt b.txt &gt; xxx.txt #Â∞Üa.txtÂíåb.txtÂêàÂπ∂Âà∞xxx.txtÔºå‰ΩÜÊòØË¶ÅÊ≥®ÊÑèÂâçÂêéÈ°∫Â∫è mkdir : ÂàõÂª∫Êñá‰ª∂Â§π 12mkdir a #Âú®ÂΩìÂâçÊñá‰ª∂Â§πÂàõÂª∫mkdir a/b/c -p #Âú®aÊñá‰ª∂Â§π‰∏≠ÂàõÂª∫b,Âπ∂Âú®bÊñá‰ª∂Â§π‰∏≠ÂàõÂª∫c tree : ‰ª•ÁõÆÂΩïÊ†ëÁöÑÊñπÂºèÊòæÁ§∫ rmdir : Âà†Èô§Á©∫Êñá‰ª∂Â§π 1‰æã: rmdir test.txt rm Ôºö Âà†Èô§Âç≥Êó† 1rm hello_python -r #Âà†Èô§Êñá‰ª∂Â§π ln : ÂàõÂª∫ÔºõÈìæÊé• 123ln -s Ê∫êÊñá‰ª∂ ÈìæÊé•Êñá‰ª∂ #Ë°®Á§∫ÂàõÂª∫ËΩØÈìæÊé•ln Ê∫êÊñá‰ª∂ ÈìæÊé•Êñá‰ª∂ #Ë°®Á§∫ÂàõÂª∫Á°¨ÈìæÊé•Ê≥®ÔºöÁ°¨ÈìæÊé•ÊääÊ∫êÊñá‰ª∂Âà†Èô§ÔºåÈìæÊé•Êñá‰ª∂‰ªçÁÑ∂ÂèØ‰ª•ÊâìÂºÄÔºõËΩØËøûÊé•Âàô‰∏çË°å grep : Êü•ÊâæÊñá‰ª∂ÂÜÖÂÆπ 1234ÂÖ∂‰∏≠ -n ‰ª£Ë°®Ë°åÂè∑Ôºõ -i ÂøΩÁï•Â§ßÂ∞èÂÜôÔºõ-v ‰ª£Ë°®ÂèñÂèçÔºåÈô§‰∫ÜxÔºåÁïô‰∏ãÂâ©‰∏ãÁöÑgrep -n 'a' greptest.txt #Êü•Êâæ‰ªªÊÑè‰ΩçÁΩÆÁöÑagrep -n '^a' greptest.txt #Êü•ÊâæaÂºÄÂ§¥grep -n 'a$' greptest.txt #Êü•ÊâæaÁªìÂ∞æ ls ‚Äîhelp : Â∏ÆÂä©man ls : Â∏ÆÂä© history : ÂéÜÂè≤ÂëΩ‰ª§ find : Êü•ÊâæÊñá‰ª∂ 123find ./ -name '*.sh' #Âç≥Âú®ÂΩìÂâçÁõÆÂΩïÊü•Êâæfind / -name '*xyz*' #Ê†πÁõÆÂΩï‰∏ãÊü•Êâæfine /tep -size -2M #Âú®ËØ•ÁõÆÂΩï‰∏ãÊü•ÊâæÂ∞è‰∫é2MÁöÑÊñá‰ª∂, +2M :Â§ß‰∫é2MÁöÑÊñá‰ª∂ cp : Êã∑Ë¥ù 12345-v ÊòæÁ§∫ËøõÂ∫¶Ôºõ-r Êã∑Ë¥ùÊñá‰ª∂Â§π;-i ‰∫§‰∫íÔºåËÆ©Áî®Êà∑Á°ÆËÆ§Ôºõ-f Âº∫Âà∂ÔºåÁ¶ÅÊ≠¢‰∫§‰∫íÔºõcp ÂéüÊñá‰ª∂Âêç Â§çÂà∂ÁöÑÊñá‰ª∂Âêçcp *0 ./acp b a/ -r #Âç≥Â∞ÜÊñá‰ª∂Â§πbÊã∑Ë¥ùÂà∞Êñá‰ª∂Â§πa‰∏≠cp b/* a/ -r #Âç≥Â∞ÜÊñá‰ª∂Â§πb‰∏≠ÁöÑÂÜÖÂÆπÊã∑Ë¥ùÂà∞Êñá‰ª∂Â§πa‰∏≠ mv : ÁßªÂä®„ÄÅÂâ™Âàá tar : ÊâìÂåÖ 1234tar -cvf test.tar * #Âç≥ÊääÂΩìÂâçÊâÄÊúâÊñá‰ª∂ÊâìÂåÖtar -xvf test.tar #Âç≥ÊäätarÊñá‰ª∂ËøòÂéütar -zcvf test.tar.gz * #Âç≥ÊääÂΩìÂâçÊñá‰ª∂ÊâìÂåÖÂπ∂ÂéãÁº©tar -zxvf test.tar.gz gzip : gzipÂéãÁº© 123gzip test.tar #Âç≥ÂéãÁº©Êñá‰ª∂gzip -d test.tar #Âç≥Ëß£ÂéãÁº©ÊµÅÁ®ãÔºöÊâìÂåÖ-&gt;ÂéãÁº©‚Äî&gt; -&gt;Ëß£Âéã-&gt;Ëß£ÂåÖ bz2 : bizp2ÂéãÁº© 12tar -jcvf test.tar.bz2 test.txt #Âç≥ÊääÂΩìÂâçÊñá‰ª∂ÊâìÂåÖÂπ∂ÂéãÁº©tar -jcvf test.tar.bz2 -C test/ #Âç≥Ëß£ÂéãÂà∞testÊñá‰ª∂Â§π‰∏ã zip : zipÂéãÁº© 123zip myzip * #Âç≥ÊääÂΩìÂâçÊñá‰ª∂Â§π‰∏≠ÁöÑÊñá‰ª∂ÂéãÁº©‰∏∫myzipuzip -d ./ myzip.zip #Âç≥Ëß£ÂéãÂà∞ÂΩìÂâçÊñá‰ª∂Â§π‰∏≠uzip -d ./aa myzip.zip #Âç≥ÂàõÂª∫aa,Âπ∂Ëß£ÂéãÂà∞aaÊñá‰ª∂Â§π‰∏≠ which : ÊòæÁ§∫ÂëΩ‰ª§ÁöÑ‰ΩçÁΩÆ 1which ls #ÊòæÁ§∫lsÂëΩ‰ª§ÁöÑ‰ΩçÁΩÆ ifconfig : Êü•ÁúãipÂú∞ÂùÄÔºåWindows‰∏≠‰ΩøÁî®ipconfig 123ifconfig ens33 down #ÊääÁΩëÂç°ÂÖ≥Èó≠ifconfig ens33 up #ÊääÁΩëÂç°ÊâìÂºÄifconfig ens33 178.12.12.23 #ËÆæÁΩÆipÂú∞ÂùÄ ping : ÊµãËØïÁΩëÁªúÈìæÊé•ÊòØÂê¶Ê≠£Â∏∏ ssh : ËøúÁ®ãÁôªÂΩï 1ssh Áî®Êà∑@ipÂú∞ÂùÄ who : ÂΩìÂâçÊúâÂá†‰∏™Áî®Êà∑Ê≠£Âú®‰ΩøÁî® 12who -q #Âì™‰∫õÁî®Êà∑ÁôªÂΩï‰∫ÜÁîµËÑëwhoami #Êü•ÁúãÂΩìÂâçÁî®Êà∑Âêç exit : ÈÄÄÂá∫ useradd : Ê∑ªÂä†Áî®Êà∑Ë¥¶Âè∑ 12-m ÔºöËá™Âä®ÂàõÂª∫ÂÆ∂ÁõÆÂΩïÊñá‰ª∂Â§πÔºõ -d :ÊåáÂÆöÂÆ∂ÁõÆÂΩïË∑ØÂæÑ Ôºõ-g : ÊåáÂÆöÁî®Êà∑ÁªÑsudo useradd yonghuming -m -d /home/hahaha #ÂàõÂª∫Áî®Êà∑ yonghuming control + a : Âø´ÈÄüË∑≥Âà∞Ë°åÂ§¥control + e : Âø´ÈÄüË∑≥Âà∞Ë°åÂ∞æ passwd : ËÆæÁΩÆÂØÜÁ†Å 1sudo yonghuming #ËÆæÁΩÆyonghumingÁöÑÂØÜÁ†Å su : ÂàáÊç¢Áî®Êà∑ 12su yonghuming #ÂàáÊç¢Âà∞Áî®Êà∑ yonghumingsu - yonghuming #ÂàáÊç¢Âà∞Áî®Êà∑ yonghuming ÔºåÂπ∂‰∏îË∑≥ËΩ¨Âà∞yonghumingÂÖ∂ÂÆ∂ÁõÆÂΩï userdel : Âà†Èô§Áî®Êà∑ 12userdel abc(Áî®Êà∑) #Âà†Èô§Áî®Êà∑Ôºå‰∏çÂà†Èô§ÂÖ∂‰∏ªÁõÆÂΩïuserdel -r abc(Áî®Êà∑) #Âà†Èô§Áî®Êà∑ÔºåÂπ∂Âà†Èô§ÂÖ∂‰∏ªÁõÆÂΩï sudo : Ëé∑ÂèñÁÆ°ÁêÜÂëòÊùÉÈôê 1sudo -s #ÊääÂΩìÂâçÁî®Êà∑ÂàáÊç¢Âà∞rootÁî®Êà∑ group ÔºöÁî®Êà∑ÁªÑ 12345cat etc/group/ #Êü•ÁúãÁî®Êà∑ÁªÑgropumod + 2Ê¨°tabÈîÆgroupadd xyz(Áî®Êà∑) #ÂàõÂª∫Áî®Êà∑ÁªÑgroupdel xyz(Áî®Êà∑) #Âà†Èô§Áî®Êà∑ÁªÑgroups xyz(Áî®Êà∑) #Êü•ÁúãÁî®Êà∑ÊâÄÂú®ÁöÑÁî®Êà∑ÁªÑ usermod : ‰øÆÊîπÁî®Êà∑ÊâÄÂú®ÁöÑÁªÑ 1234Ê†ºÂºèÔºöusermod -g Áî®Êà∑ÁªÑ Áî®Êà∑Âêç #Áî®Êà∑ÂêçÈªòËÆ§ÁöÑ‰∏ªÁªÑusermod -a -G XXX xyz(Áî®Êà∑) #ÊääÁî®Êà∑xyzÊ∑ªÂä†Âà∞ÂÖ∂‰ªñÁªÑXXXÔºåÂâØÁªÑusermod -a -G adm xyz(Áî®Êà∑)usermod -a -G sudo xyz(Áî®Êà∑) #ÁªôÁî®Êà∑xyz sudoÁöÑÊùÉÈôê chmod : ‰øÆÊîπÊùÉÈôê 12345678Ê†ºÂºèÔºöchmod u/g/o/a +/-/= rwx test.txtÂÖ∂‰∏≠ u = user,g = group, o = other, a = all; + Â¢ûÂä†ÊùÉÈôêÔºå- ÂáèÂ∞ëÊùÉÈôêÔºå= Ëµã‰∫àÊùÉÈôêchmod u=rwx,o=rwx test.py #Ëµã‰∫àuser„ÄÅothersÂèØËØªÂèØÂÜôÂèØÊâßË°åÊùÉÈôêchomod a= test.py #Ê∏ÖÁ©∫ÊùÉÈôêÊï∞Â≠óÂØπÂ∫îÊ≥ïÔºör--&gt;4, w--&gt;2, x--&gt;1;chmod 761 test.py chmod 777 123(Êñá‰ª∂Â§π) #Âè™‰ºö‰øÆÊîπÊñá‰ª∂Â§π123ÁöÑÊùÉÈôê‰∏∫777chmod 777 123(Êñá‰ª∂Â§π) -R #‰øÆÊîπÊñá‰ª∂Â§π123ÂèäÂÖ∂ÂÜÖÈÉ®ÊâÄÊúâÊñá‰ª∂ÁöÑÊùÉÈôê‰∏∫777 chown : ‰øÆÊîπÊâÄÊúâËÄÖ chgrp : ‰øÆÊîπÁªÑÂà´ cal : Á≥ªÁªüÊó•ÂéÜ ps : Êü•ÁúãËøõÁ®ãËÆæÁΩÆ 12psps -aux : top : Âä®ÊÄÅÊòæÁ§∫ËøõÁ®ãÊâÄÂú®ÁöÑÂÜÖÂ≠òÁöÑÁä∂ÊÄÅ kill Ôºö ÊùÄËøõÁ®ã 1kill (PID) reboot : ÈáçÂêØ shutdown : ÈáçÂêØ 1shutdown -h now #Á´ãÂç≥ÂÖ≥Êú∫ df : Ê£ÄÊü•Á£ÅÁõòÁ©∫Èó¥ du : Ê£ÄÊµãÁõÆÂΩïÊâÄÂç†Á£ÅÁõòÁ©∫Èó¥vi 3ÁßçÊ®°ÂºèÔºö vim xxx.py +22 ÔºöÊâìÂºÄÂπ∂Ë∑≥ËΩ¨Âà∞Á¨¨22Ë°åÔºõ 1„ÄÅÂëΩ‰ª§Ê®°ÂºèÔºõi„ÄÅo„ÄÅa-&gt;ÊèíÂÖ•Ê®°ÂºèÔºõ: -&gt;Êú´Ë°åÊ®°ÂºèÔºõ iÂÖâÊ†áÂ∑¶‰æßËæìÂÖ•ÔºåaÂÖâÊ†áÂè≥‰æßËæìÂÖ•ÔºåoÂÖâÊ†á‰∏ã‰æßËæìÂÖ•ÔºõIÊúÄÂ∑¶‰æßËæìÂÖ•ÔºåAÊúÄÂè≥‰æßËæìÂÖ•ÔºåO‰∏ä‰æßËæìÂÖ•Ôºõ hjkl : ÊéßÂà∂Â∑¶‰∏ã‰∏äÂè≥ÔºõM : ‰∏≠Èó¥‰ΩçÁΩÆÔºõL : Â±èÂπïÊúÄÂêé‰∏ÄË°åÔºõ G : Ë∑≥Âà∞ÊúÄÂêé‰∏ÄË°åÔºõ15 G ÔºöË∑≥ËΩ¨Âà∞Á¨¨15Ë°åÔºå1 G : Ë∑≥Âà∞Á¨¨‰∏ÄË°åÔºõgg : Ë∑≥ËΩ¨Âà∞Á¨¨‰∏ÄË°åÔºõ w : ÂêëÂè≥Ë∑≥‰∏Ä‰∏™WordÔºõb : ÂêëÂ∑¶Ë∑≥‰∏Ä‰∏™WordÔºõ } Ôºö Âêë‰∏ãË∑≥‰∏ÄÊÆµÔºõ{ ÔºöÂêë‰∏äË∞É‰∏ÄÊÆµÔºõ ctr + d ÔºöÂêë‰∏ãÁøªÂçäÂ±èÔºõctr + u : Âêë‰∏äÁøªÂçäÂ±èÔºõ ctr + f : Âêë‰∏ãÁøª‰∏ÄÂ±èÔºõctr + b : Âêë‰∏äÁøª‰∏ÄÂ±èÔºõ 8yy : Ë°®Á§∫‰ªéÂΩìÂâçÂÖâÊ†áÊâÄÂú®ÁöÑË°åÂºÄÂßãÂ§çÂà∂8Ë°åÔºõ p Á≤òË¥¥Ôºõ 2dd : Ë°®Á§∫‰ªéÂΩìÂâçÂÖâÊ†áÊâÄÂú®ÁöÑË°åÂºÄÂßãÂâ™Âàá2Ë°åÔºõ D ÔºöÂà†Èô§Êú¨Ë°åÂÖâÊ†áÂêéÊâÄÊúâÂÜÖÂÆπÔºõd0 : Âà†Èô§Êú¨Ë°åÂÖâÊ†áÂâçÊâÄÊúâÂÜÖÂÆπÔºõ dw : Âà†Èô§ÂÖâÊ†áÂºÄÂßã‰ΩçÁΩÆÁöÑWordÔºõ x : Âà†Èô§ÂÖâÊ†áÂêéÈù¢ÔºõX Ôºö Âà†Èô§ÂÖâÊ†áÂâçÈù¢Ôºõ u Êí§ÈîÄÔºõcontrol + r : ÂèçÊí§ÈîÄÔºõ &gt;&gt; ÊñáÊú¨Ë°åÂè≥ÁßªÔºõ&lt;&lt; ÊñáÊú¨Ë°åÂ∑¶ÁßªÔºõ . Ë°®Á§∫ÈáçÂ§ç‰∏ä‰∏ÄÊ¨°Êìç‰ΩúÁöÑÂëΩ‰ª§Ôºõ v ÔºöÂèØËßÜÔºåÈÄâ‰∏≠‰∏ÄÁâáÂå∫ÂüüÔºõ r : ÊõøÊç¢ÔºåÊåâ r ÂêéÔºåÁÑ∂ÂêéÊõøÊç¢Ôºõ / : Êåâ / ÂêéÔºåËæìÂÖ•Ë¶ÅÊêúÁ¥¢ÁöÑÔºåÊåâ n ËøõË°å‰∏ã‰∏Ä‰∏™Êü•Êâæ 2„ÄÅÁºñËæëÊ®°ÂºèÔºõesc-&gt;ÂëΩ‰ª§Ê®°Âºè; 3„ÄÅÊú´Ë°åÊ®°ÂºèÔºõwq ‰øùÂ≠òÈÄÄÂá∫Ôºõq! Âç≥‰∏∫Âº∫Âà∂ÈÄÄÂá∫Ôºõ x ‰øùÂ≠òÈÄÄÂá∫Ôºõshift + 2‰∏™z ‰øùÂ≠òÈÄÄÂá∫ X ËøõË°åÂä†ÂØÜÔºõ ÂÖ®ÈÉ®ÊõøÊç¢Ôºö :%s/Ë¢´ÊõøÊç¢ÂÜÖÂÆπ/ÊõøÊç¢ÊàêÁöÑÂÜÖÂÆπ/g ÈÉ®ÂàÜÊõøÊç¢Ôºö :1,10s/Ë¢´ÊõøÊç¢ÂÜÖÂÆπ/ÊõøÊç¢ÊàêÁöÑÂÜÖÂÆπ/g Âú®Êú´Ë°åÊ®°Âºè‰∏ãÔºå‰∏çÈÄÄÂá∫ËÄåËøõË°åÂÖ∂‰ªñÊìç‰ΩúÔºö :!ls ÂõûËΩ¶ apt-get install packge : ÂÆâË£ÖÂåÖapt-get update : Âà∑Êñ∞Ê∫ê]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Â≠¶‰π†Á¨îËÆ∞</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Ubuntu VIM+Terminal ÈÖçËâ≤ÊñπÊ°à]]></title>
    <url>%2Farticle%2FUbuntuVIMAndTerminalHarmonizeColors.html</url>
    <content type="text"><![CDATA[‰øÆÊîπÁªàÁ´ØÁöÑÈÖçËâ≤ÔºöSolarizedÁé∞Âú®Âü∫Êú¨Áî® ubuntu ÂÅöÂºÄÂèëÔºåÁõ¥Êé•Âú®ÁªàÁ´Ø(gnome-terminal)ÈáåÈù¢ vimÔºå‰ΩÜÈÖçËâ≤ÊïàÊûú‰∏çÁîöÊª°ÊÑèÔºåÂõ†‰∏∫ gvim ÁöÑÈÖçËâ≤ÊòØ SolarizedÔºågoogleÂëäËØâÊàë Gnome-Terminal ‰πüÂèØ‰ª•ËøôÊ†∑ÈÖç„ÄÇÂèØ‰ª•ÂÖàÂõ¥ËßÇ‰∏ãÊïàÊûúÂõæÔºö ÂÆâË£Ö gitÔºö 1sudo apt-get install git-core ‰∏ãËΩΩSolarized Theme 1git clone git://github.com/seebi/dircolors-solarized.git dircolor-solarized ÈÖçËâ≤‰πã‰∏ÄÔºö dark256 12cp ~/dircolors-solarized/dircolors.256dark ~/.dircolorseval 'dircolors .dircolors' ËÆæÁΩÆ Terminal ÊîØÊåÅ 256 Ëâ≤ 1vim .bashrc Ê∑ªÂä†Ôºö 1export TERM=xterm-256color ÊúÄÂêéÔºö 1source .bashrc ‰∏ãËΩΩ Solarized ÁöÑ Gnome-Terminal ÈÖçËâ≤ 1git clone git://github.com/Anthony25/gnome-terminal-colors-solarized.git ËøõÂÖ•ÁõÆÂΩïÔºåÈÖçÁΩÆËøêË°åÈÖçÁΩÆËÑöÊú¨Ôºö 12cd gnome-terminal-colors-solarizedsudo sh set_dark.sh ÊàñËÄÖÔºösudo sh set_light.sh ‰øÆÊîπVIMÈÖçËâ≤Âè™Ë¶ÅÊää solarized.vim Â§çÂà∂Âà∞ ~/.vim/colors/ ÁõÆÂΩï‰∏ãÂ∞±ÂèØ‰ª•‰∫Ü ‰∏ãËΩΩ Solarized ÁöÑ VIM ÈÖçËâ≤ 1234git clone git://github.com/altercation/vim-colors-solarized.gitcd vim-colors-solarized/colorsmv solarized.vim ~/.vim/colors/#Ê≥®ÔºöÊ≤°Êúâ .vim/ ÊàñËÄÖ .vim/colors/ ‰ΩøÁî® mkdir Âú®ÁõÆÂΩï ÔΩû/ ‰∏ãÂàõÂª∫ ÂàõÂª∫Ôºà‰øÆÊîπÔºâVIMÈÖçËâ≤Êñá‰ª∂ .vimrc 1vim .vimrc Ê∑ªÂä†Ôºö 123syntax enableset background=darkcolorscheme solarized]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>ÈÖçËâ≤</tag>
        <tag>VIM</tag>
        <tag>Terminal</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[WIN10‰∏ãÂÆâË£ÖUbuntu 16.04ÔºàÂèåÁ°¨ÁõòÔºöSDD+HDDÔºâ]]></title>
    <url>%2Farticle%2FUnderWIN10InstallUbuntuSDDAndHDD.html</url>
    <content type="text"><![CDATA[ÂÆâË£ÖÂèåÁ≥ªÁªüÊó∂Ë∏©‰∫Ü‰∏çÂ∞ëÂùëÔºåÁΩë‰∏äËÉΩÊü•Âà∞ÁöÑÊîªÁï•ÂíåÂÆâË£ÖÊïôÁ®ãÂü∫Êú¨ÈÉΩÁúãÁöÑÂ∑Æ‰∏çÂ§ö‰∫ÜÔºåÊúâ‰∫õÊïôÁ®ãÁâàÊú¨Â§™ËÄÅÊàñËß£ÈáäÂæó‰∏çÂæàÊòéÁ°ÆÔºåÁâπÊ≠§ËÆ∞ÂΩï„ÄÇ Êï∞ÊçÆÂ§á‰ªΩ ÈáçË¶ÅÁöÑ‰∫ãÊÉÖËØ¥‰∏âÈÅçÔºåÊï∞ÊçÆÂ§á‰ªΩÔºåÊï∞ÊçÆÂ§á‰ªΩÔºåÊï∞ÊçÆÂ§á‰ªΩÔºåÊï∞ÊçÆ‰∏¢Â§±ÔºåÊú¨‰∫∫Ê¶Ç‰∏çË¥üË¥£„ÄÇ Á£ÅÁõòÂàÜÂå∫ÔºàÈáçË¶ÅÔºâ Âú®Á£ÅÁõòA‰∏≠ÔºàÂ∞±ÊòØÁ¨¨‰∏Ä‰∏™Á≥ªÁªüÁöÑÂêØÂä®ÂàÜÂå∫ÊâÄÂú®ÁöÑÁ£ÅÁõòÔºâÔºåÂçïÁã¨ÁªôÂá∫500MÁî®‰∫é/bootÂàÜÂå∫ÔºàÂÆâË£ÖÁöÑÊó∂ÂÄôÊääËøô500M free space‰Ωú‰∏∫/boot)ÔºåÂÖ∂‰ªñÁöÑ/home Âíå/ ‰ªÄ‰πàÁöÑË£ÖÂà∞Á£ÅÁõòBÊàñËÄÖÁ£ÅÁõòA‰∏äÈÉΩÂèØ‰ª•Ôºà/home Âíå/ÂèØ‰ªªÊÑèÈÄâÊã©Ê°àÂÆâË£Ö‰ΩçÁΩÆÔºâÔºõ Âú®Á£ÅÁõòB‰∏≠ÔºåÊ†πÊçÆËá™Â∑±ÁöÑÈúÄÊ±ÇËøõË°åÂàÜÂå∫Ôºõ ÂÆâË£ÖÊé®ËçêÊïôÁ®ãÔºöWindows10+UbuntuÂèåÁ≥ªÁªüÂÆâË£ÖËøõË°åÂÆâË£Ö Ê≥®ÊÑèÔºö Âú®ÈÄâÊã©ÂàÜÂå∫Á±ªÂûãÊó∂ÔºåÂèØËÉΩ‰ºöÂá∫Áé∞‚ÄúÂÆâË£ÖÁ≥ªÁªüÊó∂Á©∫Èó≤ÂàÜÂå∫‰∏çÂèØÁî®‚ÄùÁä∂ÂÜµÔºå‰∏∫‰∫ÜËß£ÂÜ≥ÈóÆÈ¢òÔºåÊâÄÊúâÊ∑ªÂä†ÁöÑÊñ∞ÂàÜÂå∫Á±ªÂûã‰∏ÄÂæãÈÄâÊã©‚ÄúÈÄªËæëÂàÜÂå∫‚ÄùÔºõ ÈÄâÊã©/bootÂØπÂ∫îÁöÑÁõòÁ¨¶‰Ωú‰∏∫‚ÄúÂÆâË£ÖÂêØÂä®ÂºïÂØºÂô®ÁöÑËÆæÂ§á‚ÄùÔºåÂä°ÂøÖ‰øùËØÅ‰∏ÄËá¥ÔºõÂú®ÂÆâË£ÖËøáÁ®ã‰∏≠Ôºå‰∏∫/bootÂàÜÂå∫Êó∂Ôºå‰∏ÄÂÆöÊ≥®ÊÑèÊ∑ªÂä†Âà∞Á£ÅÁõòA‰∏≠ÔºÅÔºÅÔºÅ]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>ÂèåÁ≥ªÁªü</tag>
        <tag>ÂèåÁ°¨Áõò</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Sublime Text Personalization]]></title>
    <url>%2Farticle%2FSublimeTextSetting.html</url>
    <content type="text"><![CDATA[FontsÔºöSource Code Pro Source Code Pro: A perfect programming font https://github.com/adobe/source-code-pro For Mac: Double-click the font (SourceCodeVariable.ttf) in the Finder, then click Install Font in the font preview window that opens. After your Mac validates the font and opens the Font Book app, the font is installed and available for use. For Linux: copy the fonts to /usr/share/fonts and run sudo fc-cache to rebuild the font cache For Win: copy the fonts to C:\Windows\Fonts and Double-click the font Color schemeÔºöSolarized https://github.com/braver/Solarized The easiest way to install is using Sublime Package Control, where Solarized is listed as Solarized Color Scheme. Open Command Palette using menu item Tools -&gt; Command Palette... (‚áß‚åòP on Mac) Choose Package Control: Install Package Find Solarized Color Scheme and hit Enter How to ActivateActivate the UI theme and color scheme by modifying your user preferences file, which you can find using the menu item Sublime Text -&gt; Preferences -&gt; Settings - User (‚åò, on Mac). Indentation123456// The number of spaces a tab is considered equal to "tab_size": 4, // Set to true to insert spaces when tab is pressed "translate_tabs_to_spaces": true, //Set automatically when saving "expand_tabs_on_save": true Mine123456789101112131415&#123; "color_scheme": "Packages/Solarized Color Scheme/Solarized (light).tmTheme", "font_face": "Source Code Pro", "font_size": 11, "ignored_packages": [ "Vintage" ], "theme": "Default.sublime-theme", "tab_size": 4, "translate_tabs_to_spaces": true, "expand_tabs_on_save": true&#125;]]></content>
      <categories>
        <category>Tools</category>
      </categories>
      <tags>
        <tag>Sublime Text</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Sublime TextÂø´Êç∑ÈîÆ]]></title>
    <url>%2Farticle%2FSunlimeTestHotKey.html</url>
    <content type="text"><![CDATA[Â∏∏Áî®Tab Ëá™Âä®Ë°•ÂÖ® Ctrl + Z Êí§ÈîÄ Ctrl + Y ÂâçËøõ Ôº£trl+[ÂØπÈΩê Ôº£trl+]ÂØπÈΩêËøîÂõû Ctrl+/ Ê≥®ÈáäÂçïË°å Ctrl+Shift+/ Ê≥®ÈáäÂ§öË°å„ÄÇ 2Á©∫Ê†ºËΩ¨4Á©∫Ê†ºÁöÑÊìç‰ΩúÔºöView-&gt;Indentation-&gt;Convert Indentation to Tabs-&gt;Tab width 4-&gt;Convert Indentation to Spaces SublimeTextËá™Â∏¶Ê†ºÂºèÂåñ: Edit -&gt; Line -&gt; Reindent ÈÄâÊã©Á±ªCtrl+D ÈÄâ‰∏≠ÂÖâÊ†áÊâÄÂç†ÁöÑÊñáÊú¨ÔºåÁªßÁª≠Êìç‰ΩúÂàô‰ºöÈÄâ‰∏≠‰∏ã‰∏Ä‰∏™Áõ∏ÂêåÁöÑÊñáÊú¨„ÄÇ Alt+F3 ÈÄâ‰∏≠ÊñáÊú¨Êåâ‰∏ãÂø´Êç∑ÈîÆÔºåÂç≥ÂèØ‰∏ÄÊ¨°ÊÄßÈÄâÊã©ÂÖ®ÈÉ®ÁöÑÁõ∏ÂêåÊñáÊú¨ËøõË°åÂêåÊó∂ÁºñËæë„ÄÇ‰∏æ‰∏™Ê†óÂ≠êÔºöÂø´ÈÄüÈÄâ‰∏≠Âπ∂Êõ¥ÊîπÊâÄÊúâÁõ∏ÂêåÁöÑÂèòÈáèÂêç„ÄÅÂáΩÊï∞ÂêçÁ≠â„ÄÇ Ctrl+L ÈÄâ‰∏≠Êï¥Ë°åÔºåÁªßÁª≠Êìç‰ΩúÂàôÁªßÁª≠ÈÄâÊã©‰∏ã‰∏ÄË°åÔºåÊïàÊûúÂíå Shift+‚Üì ÊïàÊûú‰∏ÄÊ†∑„ÄÇ Ctrl+Shift+L ÂÖàÈÄâ‰∏≠Â§öË°åÔºåÂÜçÊåâ‰∏ãÂø´Êç∑ÈîÆÔºå‰ºöÂú®ÊØèË°åË°åÂ∞æÊèíÂÖ•ÂÖâÊ†áÔºåÂç≥ÂèØÂêåÊó∂ÁºñËæëËøô‰∫õË°å„ÄÇ Ctrl+Shift+M ÈÄâÊã©Êã¨Âè∑ÂÜÖÁöÑÂÜÖÂÆπÔºàÁªßÁª≠ÈÄâÊã©Áà∂Êã¨Âè∑Ôºâ„ÄÇ‰∏æ‰∏™Ê†óÂ≠êÔºöÂø´ÈÄüÈÄâ‰∏≠Âà†Èô§ÂáΩÊï∞‰∏≠ÁöÑ‰ª£Á†ÅÔºåÈáçÂÜôÂáΩÊï∞‰Ωì‰ª£Á†ÅÊàñÈáçÂÜôÊã¨Âè∑ÂÜÖÈáåÁöÑÂÜÖÂÆπ„ÄÇ Ctrl+M ÂÖâÊ†áÁßªÂä®Ëá≥Êã¨Âè∑ÂÜÖÁªìÊùüÊàñÂºÄÂßãÁöÑ‰ΩçÁΩÆ„ÄÇ Ctrl+Enter Âú®‰∏ã‰∏ÄË°åÊèíÂÖ•Êñ∞Ë°å„ÄÇ‰∏æ‰∏™Ê†óÂ≠êÔºöÂç≥‰ΩøÂÖâÊ†á‰∏çÂú®Ë°åÂ∞æÔºå‰πüËÉΩÂø´ÈÄüÂêë‰∏ãÊèíÂÖ•‰∏ÄË°å„ÄÇ Ctrl+Shift+Enter Âú®‰∏ä‰∏ÄË°åÊèíÂÖ•Êñ∞Ë°å„ÄÇ‰∏æ‰∏™Ê†óÂ≠êÔºöÂç≥‰ΩøÂÖâÊ†á‰∏çÂú®Ë°åÈ¶ñÔºå‰πüËÉΩÂø´ÈÄüÂêë‰∏äÊèíÂÖ•‰∏ÄË°å„ÄÇ Ctrl+Shift+[ ÈÄâ‰∏≠‰ª£Á†ÅÔºåÊåâ‰∏ãÂø´Êç∑ÈîÆÔºåÊäòÂè†‰ª£Á†Å„ÄÇ Ctrl+Shift+] ÈÄâ‰∏≠‰ª£Á†ÅÔºåÊåâ‰∏ãÂø´Êç∑ÈîÆÔºåÂ±ïÂºÄ‰ª£Á†Å„ÄÇ Ctrl+K+0 Â±ïÂºÄÊâÄÊúâÊäòÂè†‰ª£Á†Å„ÄÇ Ctrl+‚Üê ÂêëÂ∑¶Âçï‰ΩçÊÄßÂú∞ÁßªÂä®ÂÖâÊ†áÔºåÂø´ÈÄüÁßªÂä®ÂÖâÊ†á„ÄÇ Ctrl+‚Üí ÂêëÂè≥Âçï‰ΩçÊÄßÂú∞ÁßªÂä®ÂÖâÊ†áÔºåÂø´ÈÄüÁßªÂä®ÂÖâÊ†á„ÄÇ shift+‚Üë Âêë‰∏äÈÄâ‰∏≠Â§öË°å„ÄÇ shift+‚Üì Âêë‰∏ãÈÄâ‰∏≠Â§öË°å„ÄÇ Shift+‚Üê ÂêëÂ∑¶ÈÄâ‰∏≠ÊñáÊú¨„ÄÇ Shift+‚Üí ÂêëÂè≥ÈÄâ‰∏≠ÊñáÊú¨„ÄÇ Ctrl+Shift+‚Üê ÂêëÂ∑¶Âçï‰ΩçÊÄßÂú∞ÈÄâ‰∏≠ÊñáÊú¨„ÄÇ Ctrl+Shift+‚Üí ÂêëÂè≥Âçï‰ΩçÊÄßÂú∞ÈÄâ‰∏≠ÊñáÊú¨„ÄÇ Ctrl+Shift+‚Üë Â∞ÜÂÖâÊ†áÊâÄÂú®Ë°åÂíå‰∏ä‰∏ÄË°å‰ª£Á†Å‰∫íÊç¢ÔºàÂ∞ÜÂÖâÊ†áÊâÄÂú®Ë°åÊèíÂÖ•Âà∞‰∏ä‰∏ÄË°å‰πãÂâçÔºâ„ÄÇ Ctrl+Shift+‚Üì Â∞ÜÂÖâÊ†áÊâÄÂú®Ë°åÂíå‰∏ã‰∏ÄË°å‰ª£Á†Å‰∫íÊç¢ÔºàÂ∞ÜÂÖâÊ†áÊâÄÂú®Ë°åÊèíÂÖ•Âà∞‰∏ã‰∏ÄË°å‰πãÂêéÔºâ„ÄÇ Ctrl+Alt+‚Üë Âêë‰∏äÊ∑ªÂä†Â§öË°åÂÖâÊ†áÔºåÂèØÂêåÊó∂ÁºñËæëÂ§öË°å„ÄÇ Ctrl+Alt+‚Üì Âêë‰∏ãÊ∑ªÂä†Â§öË°åÂÖâÊ†áÔºåÂèØÂêåÊó∂ÁºñËæëÂ§öË°å„ÄÇ ÁºñËæëÁ±ªCtrl+J ÂêàÂπ∂ÈÄâ‰∏≠ÁöÑÂ§öË°å‰ª£Á†Å‰∏∫‰∏ÄË°å„ÄÇ‰∏æ‰∏™Ê†óÂ≠êÔºöÂ∞ÜÂ§öË°åÊ†ºÂºèÁöÑCSSÂ±ûÊÄßÂêàÂπ∂‰∏∫‰∏ÄË°å„ÄÇ Ctrl+Shift+D Â§çÂà∂ÂÖâÊ†áÊâÄÂú®Êï¥Ë°åÔºåÊèíÂÖ•Âà∞‰∏ã‰∏ÄË°å„ÄÇ Tab ÂêëÂè≥Áº©Ëøõ„ÄÇ Shift+Tab ÂêëÂ∑¶Áº©Ëøõ„ÄÇ Ctrl+K+K ‰ªéÂÖâÊ†áÂ§ÑÂºÄÂßãÂà†Èô§‰ª£Á†ÅËá≥Ë°åÂ∞æ„ÄÇ Ctrl+Shift+K Âà†Èô§Êï¥Ë°å„ÄÇ Ctrl+/ Ê≥®ÈáäÂçïË°å„ÄÇ Ctrl+Shift+/ Ê≥®ÈáäÂ§öË°å„ÄÇ Ctrl+K+U ËΩ¨Êç¢Â§ßÂÜô„ÄÇ Ctrl+K+L ËΩ¨Êç¢Â∞èÂÜô„ÄÇ Ctrl+Z Êí§ÈîÄ„ÄÇ Ctrl+Y ÊÅ¢Â§çÊí§ÈîÄ„ÄÇ Ctrl+U ËΩØÊí§ÈîÄÔºåÊÑüËßâÂíå Gtrl+Z ‰∏ÄÊ†∑„ÄÇ Ctrl+F2 ËÆæÁΩÆ‰π¶Á≠æ Ctrl+T Â∑¶Âè≥Â≠óÊØç‰∫íÊç¢„ÄÇ F6 ÂçïËØçÊ£ÄÊµãÊãºÂÜô ÊêúÁ¥¢Á±ªCtrl+F ÊâìÂºÄÂ∫ïÈÉ®ÊêúÁ¥¢Ê°ÜÔºåÊü•ÊâæÂÖ≥ÈîÆÂ≠ó„ÄÇ Ctrl+shift+F Âú®Êñá‰ª∂Â§πÂÜÖÊü•ÊâæÔºå‰∏éÊôÆÈÄöÁºñËæëÂô®‰∏çÂêåÁöÑÂú∞ÊñπÊòØsublimeÂÖÅËÆ∏Ê∑ªÂä†Â§ö‰∏™Êñá‰ª∂Â§πËøõË°åÊü•ÊâæÔºåÁï•È´òÁ´ØÔºåÊú™Á†îÁ©∂„ÄÇ Ctrl+P ÊâìÂºÄÊêúÁ¥¢Ê°Ü„ÄÇ‰∏æ‰∏™Ê†óÂ≠êÔºö1„ÄÅËæìÂÖ•ÂΩìÂâçÈ°πÁõÆ‰∏≠ÁöÑÊñá‰ª∂ÂêçÔºåÂø´ÈÄüÊêúÁ¥¢Êñá‰ª∂Ôºå2„ÄÅËæìÂÖ•@ÂíåÂÖ≥ÈîÆÂ≠óÔºåÊü•ÊâæÊñá‰ª∂‰∏≠ÂáΩÊï∞ÂêçÔºå3„ÄÅËæìÂÖ•ÔºöÂíåÊï∞Â≠óÔºåË∑≥ËΩ¨Âà∞Êñá‰ª∂‰∏≠ËØ•Ë°å‰ª£Á†ÅÔºå4„ÄÅËæìÂÖ•#ÂíåÂÖ≥ÈîÆÂ≠óÔºåÊü•ÊâæÂèòÈáèÂêç„ÄÇ Ctrl+G ÊâìÂºÄÊêúÁ¥¢Ê°ÜÔºåËá™Âä®Â∏¶ÔºöÔºåËæìÂÖ•Êï∞Â≠óË∑≥ËΩ¨Âà∞ËØ•Ë°å‰ª£Á†Å„ÄÇ‰∏æ‰∏™Ê†óÂ≠êÔºöÂú®È°µÈù¢‰ª£Á†ÅÊØîËæÉÈïøÁöÑÊñá‰ª∂‰∏≠Âø´ÈÄüÂÆö‰Ωç„ÄÇ Ctrl+R ÊâìÂºÄÊêúÁ¥¢Ê°ÜÔºåËá™Âä®Â∏¶@ÔºåËæìÂÖ•ÂÖ≥ÈîÆÂ≠óÔºåÊü•ÊâæÊñá‰ª∂‰∏≠ÁöÑÂáΩÊï∞Âêç„ÄÇ‰∏æ‰∏™Ê†óÂ≠êÔºöÂú®ÂáΩÊï∞ËæÉÂ§öÁöÑÈ°µÈù¢Âø´ÈÄüÊü•ÊâæÊüê‰∏™ÂáΩÊï∞„ÄÇ Ctrl+Ôºö ÊâìÂºÄÊêúÁ¥¢Ê°ÜÔºåËá™Âä®Â∏¶#ÔºåËæìÂÖ•ÂÖ≥ÈîÆÂ≠óÔºåÊü•ÊâæÊñá‰ª∂‰∏≠ÁöÑÂèòÈáèÂêç„ÄÅÂ±ûÊÄßÂêçÁ≠â„ÄÇ Ctrl+Shift+P ÊâìÂºÄÂëΩ‰ª§Ê°Ü„ÄÇÂú∫ÊôØÊ†óÂ≠êÔºöÊâìÂºÄÂëΩÂêçÊ°ÜÔºåËæìÂÖ•ÂÖ≥ÈîÆÂ≠óÔºåË∞ÉÁî®sublime textÊàñÊèí‰ª∂ÁöÑÂäüËÉΩÔºå‰æãÂ¶Ç‰ΩøÁî®packageÂÆâË£ÖÊèí‰ª∂„ÄÇ Esc ÈÄÄÂá∫ÂÖâÊ†áÂ§öË°åÈÄâÊã©ÔºåÈÄÄÂá∫ÊêúÁ¥¢Ê°ÜÔºåÂëΩ‰ª§Ê°ÜÁ≠â„ÄÇ ÊòæÁ§∫Á±ªCtrl+Tab ÊåâÊñá‰ª∂ÊµèËßàËøáÁöÑÈ°∫Â∫èÔºåÂàáÊç¢ÂΩìÂâçÁ™óÂè£ÁöÑÊ†áÁ≠æÈ°µ„ÄÇ Ctrl+PageDown ÂêëÂ∑¶ÂàáÊç¢ÂΩìÂâçÁ™óÂè£ÁöÑÊ†áÁ≠æÈ°µ„ÄÇ Ctrl+PageUp ÂêëÂè≥ÂàáÊç¢ÂΩìÂâçÁ™óÂè£ÁöÑÊ†áÁ≠æÈ°µ„ÄÇ Alt+Shift+1 Á™óÂè£ÂàÜÂ±èÔºåÊÅ¢Â§çÈªòËÆ§1Â±èÔºàÈùûÂ∞èÈîÆÁõòÁöÑÊï∞Â≠óÔºâ Alt+Shift+2 Â∑¶Âè≥ÂàÜÂ±è-2Âàó Alt+Shift+3 Â∑¶Âè≥ÂàÜÂ±è-3Âàó Alt+Shift+4 Â∑¶Âè≥ÂàÜÂ±è-4Âàó Alt+Shift+5 Á≠âÂàÜ4Â±è Alt+Shift+8 ÂûÇÁõ¥ÂàÜÂ±è-2Â±è Alt+Shift+9 ÂûÇÁõ¥ÂàÜÂ±è-3Â±è Ctrl+K+B ÂºÄÂêØ/ÂÖ≥Èó≠‰æßËæπÊ†è„ÄÇ F11 ÂÖ®Â±èÊ®°Âºè Shift+F11 ÂÖçÊâìÊâ∞Ê®°Âºè]]></content>
      <categories>
        <category>Tools</category>
      </categories>
      <tags>
        <tag>Sublime Text</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Debug of " /usr/bin/env, 'python\r', No such file or directory "]]></title>
    <url>%2Farticle%2FPythonBugs01.html</url>
    <content type="text"><![CDATA[Âú®Win‰∏ã‰ΩøÁî®Sublime TextÁºñÂÜôÁöÑPython ËΩ¨ÁßªÂà∞Linux‰∏ãËøêË°åÊä•ÈîôÔºö 1/usr/bin/env: 'python\r': No such file or directory ÂéüÂõ†ÊòØÔºölinux‰∏ãÁöÑÊñáÊú¨Êñá‰ª∂‰ª•asciiÁ†Å‰∏∫10ÁöÑÂ≠óÁ¨¶\nË°®Á§∫Êç¢Ë°åÔºåËÄåwindows‰∏ãÂàô‰ΩøÁî®ËøûÁª≠ÁöÑ13Âíå10‰∏§‰∏™Â≠óÁ¨¶\r\nË°®Á§∫Êç¢Ë°å„ÄÇ Ê≥®ÔºöÂú®pythonÂíåcËØ≠Ë®ÄÈáå‰ΩøÁî®\r‰ª£Ë°®asciiÁ¨¶‰∏∫13ÁöÑÂ≠óÁ¨¶ÔºåÂè´ÂÅöÂõûËΩ¶Á¨¶ÔºåËÄå\n‰ª£Ë°®asciiÁ†Å‰∏∫10ÁöÑÂ≠óÁ¨¶ÔºåÂè´ÂÅöÊç¢Ë°åÁ¨¶„ÄÇ Âú®Win‰∏ãÁºñÂÜôÁöÑËÑöÊú¨‰∏≠#!/usr/bin/env pythonÂú®Linux‰∏ã‰ºöË¢´ËÆ§‰∏∫Âê´ÊúâCRÔºàcarriage return ÔºâÂ≠óÁ¨¶!/usr/bin/env python\r ÊúÄÁÆÄÊ¥ÅËß£ÂÜ≥ÊñπÊ≥ïÔºö‰ΩøÁî® vim ÊâìÂºÄËÑöÊú¨ÔºåÂëΩ‰ª§Ê®°Âºè‰∏ãËæìÂÖ•Ôºö :set ff=unix ÂõûËΩ¶ :wq Âç≥ÂèØËß£ÂÜ≥ÈóÆÈ¢òÔºÅ PSÔºöÂ¶ÇÊûú‰πãÂâçÊ≤°ÊúâÂÆâË£ÖËøávimÁöÑËØùÔºå‰ΩøÁî®ÂëΩ‰ª§Ôºö 1sudo apt-get install vim]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python--ÁõÆÂΩïÈó¥.pyÊñá‰ª∂Ë∞ÉÁî®]]></title>
    <url>%2Farticle%2FPythonNotes05.html</url>
    <content type="text"><![CDATA[ËøôÈáåÂØπPythonÂêÑÁßçÁõÆÂΩï‰πãÈó¥ÁöÑ.pyÊñá‰ª∂Ë∞ÉÁî®ÂÅö‰∏Ä‰∏™ÂΩíÁ∫≥„ÄÇ 123456789.‚îî‚îÄ‚îÄ folder ‚îú‚îÄ‚îÄ data ‚îÇ ‚îî‚îÄ‚îÄ data.txt | ‚îî‚îÄ‚îÄ abc.py ‚îî‚îÄ‚îÄ test | ‚îî‚îÄ‚îÄ a.py | ‚îî‚îÄ‚îÄ b.py ‚îî‚îÄ‚îÄ hello.py 123# a.pydef show(): print("this is a.py") 12345678910# b.pydef add(x,y): print("sum = "%(x+y)) class B: def __init__(self, xx, yy): self.x = xx self.y = yy def plus(self): print("sum = "%(self.x + self.y)) 123# hello.pydef showHello(): print("this is hello.py") ‰∏ªÁõÆÂΩïË∞ÉÁî®Â≠êÁõÆÂΩï.pyÊñá‰ª∂Ë≠¨Â¶ÇÔºöhello.pyË∞ÉÁî®b.pyÔºåÈúÄË¶ÅtestÁõÆÂΩï‰∏ãÂàõÂª∫__init__.pyÊñá‰ª∂ÔºàËØ•Êñá‰ª∂ÂèØ‰ª•‰ªÄ‰πàÈÉΩ‰∏çÂÜôÔºâ 1234567# ÊñπÂºè‰∏ÄÔºöimport test.btest.b.add(2,3)# ÊñπÂºè‰∫åÔºöfrom test.b import addadd(2,3) ÂêåÁõÆÂΩïË∞ÉÁî®.pyÊñá‰ª∂Ë≠¨Â¶ÇÔºö a.pyË∞ÉÁî®b.py Ë∞ÉÁî®ÂáΩÊï∞Ôºö 1234567# ÊñπÂºè‰∏ÄÔºöimport bb.add(2,3)# ÊñπÂºè‰∫åÔºöfrom b import addadd(2,3) Ë∞ÉÁî®Á±ªÔºö 123456789# ÊñπÂºè‰∏ÄÔºöimport bxyz = b.B(2,3)xyz.plus()# ÊñπÂºè‰∫åÔºöfrom b import B; xyz = B(2,3)xyz.plus() Ë∑®ÁõÆÂΩïËØªÂèñ.pyÊñá‰ª∂abc.pyË∞ÉÁî®hello.pyÔºö 1234567891011# ÊñπÂºè‰∏ÄÔºöimport syssys.path.append("..")import hellohello.showHello()# ÊñπÂºè‰∫åÔºöimport syssys.path.append("..")from hello import showHelloshowHello() abc.pyË∞ÉÁî®a.pyÔºö 1234567891011# ÊñπÂºè‰∏ÄÔºöimport syssys.path.append("../test")import aa.show()# ÊñπÂºè‰∫åÔºöimport syssys.path.append("../test")from a import showshow()]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python--Ëé∑ÂèñÂΩìÂâçÊàñ‰∏äÁ∫ßÁõÆÂΩïË∑ØÂæÑ]]></title>
    <url>%2Farticle%2FPythonNotes06.html</url>
    <content type="text"><![CDATA[PythonËÑöÊú¨‰∏≠Â∏∏Â∏∏ÈúÄË¶ÅÁõÆÂΩïÈó¥Êñá‰ª∂ÁöÑ‰∫íÁõ∏Ë∞ÉÁî®ÔºåËøôÈáåÂàÜÂà´ÂØπËé∑ÂèñÂΩìÂâçÁõÆÂΩïË∑ØÂæÑÂíåËé∑Âèñ‰∏äÁ∫ßÁõÆÂΩïË∑ØÂæÑÂ∏∏Áî®ÊñπÊ≥ïËøõË°åÊÄªÁªì„ÄÇ Ëé∑ÂèñÂΩìÂâçÁõÆÂΩïË∑ØÂæÑ123456789# ÊñπÂºè‰∏Äimport osprint(os.getcwd())# ÊñπÂºè‰∫åimport sysprint(sys.path[0])# ÊñπÂºè‰∏âimport osprint(os.path.abspath(os.path.dirname(__file__))) Ëé∑Âèñ‰∏äÁ∫ßÁõÆÂΩïË∑ØÂæÑ123456789101112ÊñπÂºè‰∏ÄÔºö(Êé®Ëçê)import osprint(os.path.abspath(os.path.join(os.path.dirname(__file__), os.pardir)))ÊñπÂºè‰∫åÔºöÔºàÊé®ËçêÔºâimport sys, ospwd = sys.path[0] # Ëé∑ÂèñÂΩìÂâçÊâßË°åËÑöÊú¨ÁöÑ‰ΩçÁΩÆprint(os.path.abspath(os.path.join(pwd, os.pardir)))ÊñπÂºè‰∏â„ÄÅÂõõ„ÄÅ‰∫îÔºöimport osprint(os.path.abspath(os.path.dirname(os.getcwd())))print(os.path.abspath(os.path.join(os.getcwd(), "..")))print(os.path.abspath(os.path.dirname(os.path.abspath(os.path.dirname(__file__)))) #‰∏çÊé®ËçêÔºåÂ§™‰∏ë Ëé∑Âèñ‰∏ä‰∏äÁ∫ßÁõÆÂΩïË∑ØÂæÑ123456ÊñπÂºè‰∏ÄÔºö(Êé®Ëçê)import osprint(os.path.abspath(os.path.join(os.getcwd(), "../..")))ÊñπÂºè‰∫åÔºöÔºàÊé®ËçêÔºâimport osprint(os.path.abspath(os.path.join(os.getcwd(), '..', '..'))) Ëé∑Âèñ‰∏ä‰∏ä‰∏äÁ∫ßÁõÆÂΩïË∑ØÂæÑ123ÊñπÂºè‰∏ÄÔºö(Êé®Ëçê)import osprint(os.path.abspath(os.path.join(os.getcwd(), '..', '..', '..'))) PS Ëß£ÈáäÔºö 12345__file__ÔºöÂΩìÂâçÊñá‰ª∂Ë∑ØÂæÑos.path.dirname(file): Êüê‰∏™Êñá‰ª∂ÊâÄÂú®ÁöÑÁõÆÂΩïË∑ØÂæÑos.path.join(a, b, c,....): Ë∑ØÂæÑÊûÑÈÄ† a/b/cos.path.abspath(path): Â∞Üpath‰ªéÁõ∏ÂØπË∑ØÂæÑËΩ¨ÊàêÁªùÂØπË∑ØÂæÑos.pardir: Linux‰∏ãÁõ∏ÂΩì‰∫é"../"]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Êó†‰∫∫Êú∫ÂºÄÂèëËµÑÊñôÊ±áÊÄª]]></title>
    <url>%2Farticle%2FUAVDevelopMaterials.html</url>
    <content type="text"><![CDATA[ÂõΩÂÜÖÂ§ñÁü•ÂêçËÆ∫Âùõ Êó†‰∫∫Êú∫ÂºÄÊ∫êÂü∫Èáë‰ºö(Dronecode) https://www.dronecode.org APM/PIXÁ†îÂèëÊ≤°Êúâ‰∏çÁü•ÈÅìËøô‰∏™ÁöÑPX4ÂÆòÁΩë https://pixhawk.org/choice APMÂÆòÊñπÁΩëÁ´ô(ÁæéÂõΩ3DRÂÖ¨Âè∏) http://ardupilot.com/ ÂõΩÂ§ñDIYÊó†‰∫∫Êú∫‰∏ì‰∏öËÆ∫Âùõ(DIY DRONES) http://diydrones.com/ ÂºÄÊ∫êLinuxËá™Âä®È©æÈ©∂‰ª™(Erle-BRAIN)ÂÆòÁΩë http://erlerobotics.com/blog/home-creative/ Áà±Êï∞Á†Å(LoveDigt)Á§æÂå∫ ‰∏ì‰∏öÊï∞Á†ÅÊäÄÊúØ‰∫§ÊµÅÁ§æÂå∫ http://www.lovedigit.com APM/PIXÁõ∏ÂÖ≥Ë∞ÉËØïËΩØ‰ª∂Ôºö MISSION PLANNER ÊúÄÊñ∞Âú∞Èù¢Á´ô‰∏ãËΩΩÂú∞ÂùÄ http://firmware.ap.ardupilot.org/Tools/MissionPlanner/ MISSION PLANNER ÂéÜÂè≤ÁâàÊú¨ÁôæÂ∫¶ÁΩëÁõò‰∏ãËΩΩÂú∞ÂùÄ http://pan.baidu.com/s/1ntNUIox#path=%252FMission%2520Planner-APM%25E4%25B8%25AD%25E6%2596%2587%25E7%25BD%2591 QGROUNDCONTROL(QTÁâàÂú∞Èù¢Á´ô‰∏ãËΩΩÂú∞ÂùÄÔºåÊîØÊåÅlinux,Windows, Mac OS) http://www.qgroundcontrol.org APMÂÆâÂçìÂú∞Èù¢Á´ô‰∏ãËΩΩ1Âú∞ÂùÄ http://diydrones.com/profiles/blogs/droidplanner-ground-control-station-for-android-devices (Ëøô‰∏™ÁâàÊú¨ÊØîËæÉÂ•ΩÁî®Ôºå‰ΩÜÊòØÈúÄË¶ÅÂÆâÂçìÊâãÊú∫ÂÆâË£ÖË∞∑Ê≠åserver,‰πüÂèØ‰ª•ÂØªÊâæÂõΩÂÜÖÂõ¢ÈòüÁöÑÊîπÂÜôÁâà) APMÂÆâÂçìÂú∞Èù¢Á´ô‰∏ãËΩΩ2Âú∞ÂùÄ http://diydrones.com/group/andropilot-users-group andropilot‰πüÊòØAPMÂÆâÂçìÂú∞Èù¢Á´ôÔºåÂèØ‰ª•‰∏ãËΩΩÂèÇËÄÉ„ÄÇ ÂõΩÂÜÖÁà±Â•ΩËÄÖÊîπÁºñÁöÑAPMÂÆâÂçìÂú∞Èù¢Á´ôÔºåÊØîËæÉÈÄÇÂêàÂõΩÂÜÖÁΩëÁªúÂèóÈôêÁöÑÊù°‰ª∂Ôºöhttp://fir.im/fishDroneGCS È£ûÊéßÂºÄÂèë‰∫∫ÂëòÁõ∏ÂÖ≥ÂøÖÂ§áÁΩëÁ´ô APMËá™Âä®È©æÈ©∂‰ª™Ê∫êÁ†Å https://github.com/diydrones/ardupilot MISSION PLANNER Ê∫êÁ†Å‰∏ãËΩΩÂú∞ÂùÄ https://github.com/diydrones/MissionPlanner PXHAWKÂéüÁîüÂõ∫‰ª∂Ê∫êÁ†Å‰∏ãËΩΩÂú∞ÂùÄ https://github.com/PX4/Firmware PXHAWK ardupilotÂõ∫‰ª∂‰∏ãËΩΩÂú∞ÂùÄÔºöhttps://github.com/ArduPilot/ardupilot GQC Âú∞Èù¢Á´ôÊ∫êÁ†Å‰∏ãËΩΩÂú∞ÂùÄ Ôºöhttps://github.com/mavlink/qgroundcontrol PIXHAWKÂéüÁîüÂõ∫‰ª∂‰∏≠ÊñáÁøªËØëÂºÄÂèëÊåáÂØºÊâãÂÜåÔºöhttps://px4.osdrone.net/ PIXHAWK ardupilotÂõ∫‰ª∂ÁºñËØëÊåáÂØºÊâãÂÜåÔºöhttp://ardupilot.org/dev/docs/building-px4-for-linux-with-make.html#building-px4-for-linux-with-make PIXHAWKÂÖâÊµÅËµÑÊñôÊâãÂÜåÔºöhttps://dev.px4.io]]></content>
      <categories>
        <category>UAV</category>
      </categories>
      <tags>
        <tag>UAV</tag>
        <tag>Êó†‰∫∫Êú∫</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÂÑøÁ´•Ëá™Êàë‰øùÊä§ÊïôËÇ≤]]></title>
    <url>%2Farticle%2FChildEducation.html</url>
    <content type="text"><![CDATA[Âõ†‰∏∫ÊúÄËøëÁöÑÊê∫Á®ãÂπºÂÑøÂõ≠ÂíåÁ∫¢ÈªÑËìùÂπºÂÑøÂõ≠Ë¢´ÁàÜËôêÁ´•ÁöÑ‰∫ã‰ª∂ÔºåÁâπÊï¥ÁêÜÂÑøÁ´•Ëá™Êàë‰øùÊä§ÊïôËÇ≤ÁöÑËµÑÊñô„ÄÇ ÊåÅÁª≠Êõ¥Êñ∞‰∏≠]]></content>
      <categories>
        <category>Child Education</category>
      </categories>
      <tags>
        <tag>ÂÑøÁ´•</tag>
        <tag>Ëá™Êàë‰øùÊä§</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MatlabÂ∏∏Áî®ÂëΩ‰ª§ÈÄüÊü•]]></title>
    <url>%2Farticle%2FMatlabFunctionl.html</url>
    <content type="text"><![CDATA[MatlabÂ∏∏Áî®ÂëΩ‰ª§ÈÄüÊü•Ë°® ËøôÈáåÂè™ÁªôÂá∫‰∫ÜÂáΩÊï∞ÁöÑÂêçÂ≠óÂèäÂÖ∂ÂäüËÉΩÔºåËá≥‰∫éÂÖ∂Ê†ºÂºèÂèäÂÖ∂Ë∞ÉÁî®ÊñπÊ≥ïÔºåËØ∑ÂèÇÈòÖMATLABÁöÑÂú®Á∫øÂ∏ÆÂä©ÔºàÂè™ÈúÄË¶ÅÂú®ÂëΩ‰ª§Á™óÂè£ËæìÂÖ•‚Äúhelp fun_name‚ÄùÔºâ ÊàëËßâÂæóÂ≠¶‰π†MatlabÔºàÂåÖÊã¨‰ªª‰ΩïËØ≠Ë®ÄÔºâÈúÄÊ≥®ÊÑèÁöÑÊòØÔºö ÂøÖÈ°ªË¶ÅÊúâÊØÖÂäõ„ÄÇË¥µÂú®ÂùöÊåÅÂíåÁßØÁ¥ØÔºÅÂ∞±ÂÉèÂ≠¶‰π†Ëã±ËØ≠ÈÇ£Ê†∑„ÄÇ Ë¶ÅÊï¢‰∫éÂºÄÂè£ËØ∑ÊïôÂà´‰∫∫ÔºåÂêë‰Ω†ÁöÑÂ∏àÂÖÑÔºåÂêëÁΩëÁªú‰∏äÁöÑMatlabÈ´òÊâãÂí®ËØ¢ÔºåÂÖ±ÂêåËÆ®ËÆ∫„ÄÇ Âã§‰∫éÊÄùËÄÉÔºåÂã§‰∫éËÆ∞ÂøÜÔºåÂã§‰∫éÂä®Êâã„ÄÇÂØπËÆ∏Â§öÈóÆÈ¢òÁöÑÊé¢Á¥¢‰∏ÄÂÆöË¶ÅÁî®Ëá™Â∑±ÁöÑÂ§ßËÑëÂéªÊÉ≥ÔºåÁõ¥Âà∞ÊòéÁôΩ‰∫Ü‰∏∫Ê≠¢ÔºåÂíåÂÖ∂‰ªñÂÖ∂‰ªñÁ®ãÂ∫èËÆæËÆ°‰∏ÄÊ†∑ÔºåÈúÄË¶ÅËÆ∞ÂøÜÁöÑ‰∏úË•øËøòÊòØËÆ∞ÂøÜÔºåËøôÊ†∑ÂèØ‰ª•ËäÇÁúÅÊó∂Èó¥„ÄÇÁ®ãÂ∫èËÆæËÆ°ÊòØÂÆûË∑µÊÄßÂíåÊìç‰ΩúÊÄßÂæàÂº∫ÁöÑ‰∫ãÊÉÖÔºåÈúÄË¶Å‰Ω†Ëá™Â∑±‰∫≤Ëá™Âä®Êâã„ÄÇ ÊúÄ‰∏∫ÈáçË¶ÅÁöÑÂ∞±ÊòØ‰ºöÂú®Á∫øÂ∏ÆÂä©Ôºå‰ΩÜÊòØ‰∏äÈù¢ÂÜôÁöÑÈÉΩÊòØËã±ËØ≠ÔºåÈúÄË¶Å‰∏ÄÂÆöÁöÑËã±ËØ≠Âü∫Á°Ä„ÄÇÂÆûÂú®‰∏çÊáÇÂ∞±ÂÆâË£Ö‰∏Ä‰∏™GoogleÁøªËØë‰πãÁ±ªÁöÑËΩØ‰ª∂„ÄÇ Âà∂‰ΩúÊú¨Ë°®‰∏ªË¶ÅÊòØ‰∏∫‰∫Ü‰æø‰∫éÂ∫îÁî®Êó∂Êü•ÈòÖÔºåÈôê‰∫é‰∏™‰∫∫Ê∞¥Âπ≥ÂíåËµÑÊñôÔºåÈîôËØØ‰πãÂ§ÑÔºåÊúõÊâπËØÑÊåáÊ≠£Ôºå‰∏çËÉúÊÑüÊøÄÔºÅ]]></content>
      <categories>
        <category>Matlab</category>
      </categories>
      <tags>
        <tag>Matlab</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MatlabÁîªÂõæÂáΩÊï∞]]></title>
    <url>%2Farticle%2FMatlabPlotFunction.html</url>
    <content type="text"><![CDATA[Matlab Âú®Á∫øÂ∏ÆÂä©ÊñáÊ°£Ôºå]‚ÄúMATLAB/Graphics‚Äù„ÄÇ Á±ªÂà´ Function Âõæ Áª¥Â∫¶ ÊèèËø∞ Êõ≤Á∫ø plot 2 ÁªòÂà∂Êõ≤Á∫øÔºåÁõ∏ÈÇªÁÇπ‰πãÈó¥Ë¢´ÊèíÂÄº fplot ËæìÂÖ•ÂáΩÊï∞ÊàñÂáΩÊï∞Âè•ÊüÑ„ÄÅËá™ÂèòÈáèÂèñÂÄºÂå∫Èó¥ÔºåÁªòÂà∂Êõ≤Á∫ø plotyy 2 ÂèåÁ∫µÂùêÊ†áÂõæÔºå‰∏§‰∏™Á∫µÂùêÊ†áÁöÑÊï∞ÈáèÁ∫ß‰∏çÂêå plot3 3 ÁªòÂà∂3DÊõ≤Á∫ø loglog 2 X,YÂùêÊ†áÈÉΩÊåâÂØπÊï∞Áº©Êîæ semilogx 2 ‰ªÖXÂùêÊ†áÊåâÂØπÊï∞Áº©Êîæ semilogy 2 ‰ªÖYÂ∑¶ËæπÊåâÂØπÊï∞Áº©Êîæ errorbar 2 ËØØÂ∑ÆÊù°ÂΩ¢ÂõæÔºåËßÅwikipedia‚ÄúError bar‚Äù Êù°ÂΩ¢Áõ¥ÊñπÈù¢Âüü bar 2 Êù°ÂΩ¢ÂõæÔºàÂûÇÁõ¥ÔºâÔºåÂàÜ‰∏∫groupedÂíåstackedÈ£éÊ†º bar3 3 3DÊù°ÂΩ¢ÂõæÔºàÂûÇÁõ¥Ôºâ barh 2 Ê∞¥Âπ≥Êù°ÂΩ¢ÂõæÔºåÂàÜ‰∏∫groupedÂíåstackedÈ£éÊ†º bar3h 3 3DÊ∞¥Âπ≥Êù°ÂΩ¢Âõæ hist 2 È¢ëÊï∞Áõ¥ÊñπÂõæ histc ËæìÂÖ•Êï∞ÊçÆÂíåÂå∫Èó¥ÔºåËøîÂõûÊï∞ÊçÆËêΩÂú®ÊØè‰∏™Âå∫Èó¥ÁöÑÈ¢ëÊï∞ pareto 2 Â∏ïÁ¥ØÊâòÂõæÔºàÊüèÊãâÂõæÔºâÔºåËßÅwikipedia‚ÄúPareto Chart‚Äù area 2 Â°´ÂÖÖÂå∫ÂüüÂõæÔºåÊõ≤Á∫øÂíåXËΩ¥‰πãÈó¥Ë¢´Â°´ÂÖÖ pie 2 È•ºÂõæÔºåÁî®‰∫éË°®Á§∫ÊØî‰æã pie3 3 3DÈ•ºÂõæ ÊûÅÂùêÊ†á polar 2 ÊûÅÂùêÊ†áÂõæÔºå‰ª•ÊûÅÂùêÊ†áÁªòÂà∂Êõ≤Á∫ø rose 2 ËßíÁõ¥ÊñπÂõæÔºàÈ¢ëÊï∞ÊâáÂΩ¢ÂõæÔºâ Á¶ªÊï£Êï∞ÊçÆ stem 2 ÊùÜÂõæÔºåÂØπÊØè‰∏™Êï∞ÊçÆÔºå‰ªéXËΩ¥‰º∏Âá∫‰∏ÄÊù°ÂûÇÁõ¥Á∫øÔºåÈ°∂Á´ØÁîªÂúÜÂúà stem3 3 3DÊùÜÂõæ stairs 2 Èò∂Ê¢ØÂõæÔºåÁõ∏ÈÇªÁÇπÈó¥‰∏çËøõË°åÊèíÂÄº scatter 2 Êï£ÁÇπÂõæÔºàÊ∞îÊ≥°ÂõæÔºâÔºåÁªòÂà∂‰∏ÄÁ≥ªÂàóÊï£ÁÇπ scatter3 3 3DÊï£ÁÇπÂõæ spy 2 Á®ÄÁñèÊ®°ÂºèÔºàsparsity patternÔºâÂõæÔºåÂØπÁü©ÈòµÈùû0ÁöÑÂú∞ÊñπÁªòÂà∂Êï£ÁÇπ plotmatrix 2 Â∞ÜÁü©ÈòµÁªòÂà∂‰∏∫Êï£ÁÇπÂõæÊàñÊï£ÁÇπÂõæÂíåÁõ¥ÊñπÂõæ Á≠âÈ´òÁ∫ø contour 2 Á≠âÈ´òÁ∫øÂõæÔºå‰∫åÁª¥ÂáΩÊï∞ÁöÑÁ≠âÂÄºÁ∫ø contour3 3 3DÁ≠âÈ´òÁ∫øÂõæÔºå‰∏âÁª¥ÂáΩÊï∞ÔºàÁ©∫Èó¥ÂáΩÊï∞ÔºâÁöÑÁ≠âÂÄºÁ∫ø contourf 2 Â°´ÂÖÖÁöÑÁ≠âÈ´òÁ∫øÂõæ contourc Á≠âÈ´òÁ∫øËÆ°ÁÆó Êõ≤Èù¢ÁΩëÊ†º surf 3 Êõ≤Èù¢ÂõæÔºåÂíåmeshÁöÑÂå∫Âà´ÊòØÔºåsurfÂú®Â∞èÁü©ÂΩ¢‰∏äÂÅöÈ¢úËâ≤ÊèíÂÄº surfl 3 Âú®surfÂü∫Á°Ä‰∏äÔºåÂä†ÂÖ•ÂÖâÁÖß surfc 3 Âú®surfÂü∫Á°Ä‰∏äÔºåÂú®Â∫ïÈÉ®ÁªòÂà∂Á≠âÈ´òÁ∫øÂõæ surfnorm 3 Âú®surfÂü∫Á°Ä‰∏äÔºåÊØè‰∏™Èù¢ÁªòÂà∂Ê≥ïÁ∫ø surface ‰ΩéÂ±ÇÊ¨°Êõ≤Èù¢ÁªòÂà∂ÂáΩÊï∞ mesh 3 ÁΩëÊ†ºÂõæÔºåÂú®Ë°åÂíåÂàó‰∏äÁªòÂà∂‰∏ÄÁ≥ªÂàóÊõ≤Á∫øÔºåÊûÑÊàêÁΩëÊ†º meshc 3 Âú®meshÂü∫Á°Ä‰∏äÔºåÂú®Â∫ïÈÉ®ÁªòÂà∂Á≠âÈ´òÁ∫øÂõæ meshz 3 Âú®meshÂü∫Á°Ä‰∏äÔºåÂú®ÁΩëÊ†ºÂõõÂë®ÁªòÂà∂‚ÄúÂ∏òÂ≠ê‚Äù waterfall 3 ÁÄëÂ∏ÉÂõæÔºåÁ±ª‰ºº‰∫émeshzÂáΩÊï∞Ôºå‰ΩÜÂú®Áü©ÈòµÁöÑÂàó‰πãÈó¥‰∏çÁîüÊàêÁ∫ø ribbon 3 Â∏¶ÂõæÔºåÁªòÂà∂‰∏ÄÂÆöÂÆΩÂ∫¶ÁöÑÂ∏¶ÔºåÁõ∏ÂΩì‰∫éÂ∞Ü‰∫åÁª¥Êõ≤Á∫øÊ≤øÁùÄÂûÇÁõ¥Âπ≥Èù¢ÊñπÂêëÊãâÂºÄ‰∏ÄÂÆöÂÆΩÂ∫¶ÂΩ¢Êàê‰∏âÁª¥ÂõæÂΩ¢ pcolor 2 ‰º™ÂΩ©ÂõæÔºåÊ†πÊçÆÁü©ÈòµÁöÑ‚ÄúÁõ∏ÈÇªÂõõ‰∏™ÁÇπ‚ÄùÁöÑÂÄºÂØπÂ∫îÈ¢úËâ≤ÊèíÂÄºÂæóÂà∞Â∞èÁü©ÂΩ¢È¢úËâ≤ peaks Example function of two variables cylinder Generate cylinder ellipsoid Generate ellipsoid sphere Generate sphere surf2patch Convert surface data to patch data Ê†áÈáèÂú∫‰ΩìÊï∞ÊçÆ slice 3 ‰ΩìÁßØÂàáÁâáÂõæÔºåÂØπ‰ΩìÊï∞ÊçÆËøõË°åÂàáÁâáËßÇÂØü contour-slice 3 ÂàáÁâáÁ≠âÈ´òÁ∫øÂõæÔºå‰ΩìÊï∞ÊçÆÂú®ÂàáÁâáÂπ≥Èù¢‰∏≠ÁöÑÁ≠âÂÄºÁ∫ø flow Simple function of three variables isosurface Extract isosurface data from volume data isocaps Compute isosurface end-cap geometry isocolors Calculate isosurface and patch colors isonormals Compute normals of isosurface vertices reduce-patch Reduce number of patch faces reduce-volume Reduce number of elements in volume data set shrinkfaces Reduce size of patch faces smooth3 Smooth 3-D data subvolume Extract subset of volume data set volume bounds Coordinate and color limits for volume data ÂêëÈáèÂú∫‰ΩìÂêëÈáèÊï∞ÊçÆ feather 2 ÁæΩÁä∂ÂõæÔºå‰ª•XËΩ¥‰∏äÁöÑÁÇπ‰∏∫Ëµ∑ÁÇπÁªòÂà∂‰∏ÄÁ≥ªÂàóÂêëÈáè compass 2 Â∞ÑÁ∫øÂõæÔºå‰ª•ÂéüÁÇπ‰∏∫Ëµ∑ÁÇπÁªòÂà∂‰∏ÄÁ≥ªÂàóÂêëÈáè quiver 2 Áü¢ÈáèÂú∫ÂõæÔºå‰ª•ÈááÊ†∑ÁÇπ‰∏∫Ëµ∑ÁÇπÁªòÂà∂‰∏ÄÁ≥ªÂàóÂêëÈáè quiver3 3 3DÁü¢ÈáèÂú∫Âõæ streamslice 3 ÁªòÂà∂ÊµÅÂú∫Ôºà‰∏âÁª¥ÂêëÈáèÂáΩÊï∞ÔºâÂú®ÂàáÁâáÂπ≥Èù¢‰∏≠ÁöÑÊµÅÁ∫ø streamline 3 ÁªòÂà∂ÊµÅÂú∫ÁöÑÊµÅÁ∫øÔºàÁ±ª‰ºº‰∫éÁ£ÅÊÑüÁ∫øÔºâÔºåËµ∑ÁÇπÁî±Êï∞ÊçÆÊåáÂÆö coneplot 3 ÁªòÂà∂‰∏âÁª¥ÂúÜÈî•ÔºåÂúÜÈî•ÁöÑËµ∑ÁÇπÁî±Êï∞ÊçÆÊåáÂÆöÔºåÊñπÂêëÂíåÂ§ßÂ∞èÁî±ÊµÅÂú∫ÊåáÂÆö stream-particles 3 ÁªòÂà∂ÊµÅÂú∫markerÁ≤íÂ≠ê stream-ribbon 3 ÁªòÂà∂ÊµÅÂú∫ribbonÂõæ streamtube 3 ÁªòÂà∂ÊµÅÂú∫ÊµÅÁÆ° curl Compute curl and angular velocity of vector field divergence Compute divergence of vector field interp-stream-speed Interpolate stream-line vertices from flow speed stream2 Compute 2-D streamline data stream3 Compute 3-D streamline data Â§öËæπÂΩ¢ fill 2 ÁªòÂà∂Â°´ÂÖÖÁöÑÂ§öËæπÂΩ¢ fill3 3 3DÂ°´ÂÖÖÂ§öËæπÂΩ¢ patch 2,3 ÁªòÂà∂‰∏Ä‰∏™ÊàñÂ§ö‰∏™Â°´ÂÖÖÂ§öËæπÂΩ¢ Easy-to-use ezplot 2 Easy-to-useÁâàÁªòÂõæÂáΩÊï∞ÔºåËøôÁ±ªÂáΩÊï∞‰º†ÂÖ•Ë¶ÅÁªòÂà∂ÁöÑÂáΩÊï∞ÊàñÂáΩÊï∞Âè•ÊüÑÔºå‰ª•ÂèäËá™ÂèòÈáèÁöÑÂÆö‰πâÂüüÔºåË∞ÉÁî®ÂÖ∑‰ΩìÂáΩÊï∞ÁªòÂõæ„ÄÇ‰æãÂ¶ÇezplotÁöÑ‰∏ÄÁßçË∞ÉÁî®ÊñπÂºèÊòØÔºöezplot(fun,[xmin,xmax]) ezplot3 3 ezpolar 2 ezcontour 2 ezcontourf 2 ezsurf 3 ezsurfc 3 ezmesh 3 ezmeshc 3 Âä®Áîª comet 2 ÂΩóÊòüÂõæÔºåÁªòÂà∂‰∏Ä‰∏™Á±ª‰ººÂΩóÊòüËøêÂä®ÁöÑÂä®ÁîªÔºåÂ§¥ÈÉ®ÊòØÂúÜÂúàÔºåËøêÂä®ËΩ®ËøπÈÅçÂéÜÊï∞ÊçÆ comet3 3 3DÂΩóÊòüÂõæ image 2 Â∞ÜÁü©ÈòµÁªòÂà∂ÊàêÂõæÂÉè movie Play recorded movie frames noanimate Change EraseMode of all objects to normal drawnow Update figure window and execute pending callbacks refreshdata Refresh data in graph when data source is specified frame2im Return image data associated with movie frame getframe Capture movie frame im2frame Convert image to movie frame]]></content>
      <categories>
        <category>Matlab</category>
      </categories>
      <tags>
        <tag>Matlab</tag>
        <tag>ÁîªÂõæ</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MarkdownËØ≠Ê≥ï]]></title>
    <url>%2Farticle%2FMarkdownGrammar.html</url>
    <content type="text"><![CDATA[Markdown ÊòØ‰∏ÄÁßçËΩªÈáèÁ∫ßÊ†áËÆ∞ËØ≠Ë®ÄÔºåÂÆÉÁî®ÁÆÄÊ¥ÅÁöÑËØ≠Ê≥ï‰ª£ÊõøÊéíÁâàÔºå‰ΩøÊàë‰ª¨‰∏ìÂøÉ‰∫éÁ†ÅÂ≠ó„ÄÇÂÆÉÁöÑÁõÆÊ†áÊòØÂÆûÁé∞ÊòìËØªÊòìÂÜôÔºåÊàê‰∏∫‰∏ÄÁßçÈÄÇÁî®‰∫éÁΩëÁªúÁöÑ‰π¶ÂÜôËØ≠Ë®Ä„ÄÇÂêåÊó∂ÔºåMarkdownÊîØÊåÅÂµåÂÖ•htmlÊ†áÁ≠æ„ÄÇ ‰∏™‰∫∫‰ΩøÁî®ÁöÑÁºñËæëÂô®‰∏∫ÔºöTyporaÔºåËΩªÈáè„ÄÅË∑®Âπ≥Âè∞„ÄÅÊñπ‰æøÔºÅ MarkdownÁöÑÂ∏∏Áî®ËØ≠Ê≥ïÊ†áÈ¢òMarkdown Ê†áÈ¢òÊîØÊåÅ‰∏§ÁßçÂΩ¢ÂºèÔºö 1„ÄÅÁî®#Ê†áËÆ∞ Âú® Ê†áÈ¢òÂºÄÂ§¥ Âä†‰∏ä1~6‰∏™#Ôºå‰æùÊ¨°‰ª£Ë°®‰∏ÄÁ∫ßÊ†áÈ¢ò„ÄÅ‰∫åÁ∫ßÊ†áÈ¢ò‚Ä¶.ÂÖ≠Á∫ßÊ†áÈ¢ò 123456# ‰∏ÄÁ∫ßÊ†áÈ¢ò## ‰∫åÁ∫ßÊ†áÈ¢ò### ‰∏âÁ∫ßÊ†áÈ¢ò##### ÂõõÁ∫ßÊ†áÈ¢ò###### ‰∫îÁ∫ßÊ†áÈ¢ò###### ÂÖ≠Á∫ßÊ†áÈ¢ò 2„ÄÅÁî®=Âíå-Ê†áËÆ∞ Âú® Ê†áÈ¢òÂ∫ï‰∏ã Âä†‰∏ä‰ªªÊÑè‰∏™=‰ª£Ë°®‰∏ÄÁ∫ßÊ†áÈ¢òÔºå-‰ª£Ë°®‰∫åÁ∫ßÊ†áÈ¢ò 12345‰∏ÄÁ∫ßÊ†áÈ¢ò======‰∫åÁ∫ßÊ†áÈ¢ò---------- ÂàóË°®Markdown ÊîØÊåÅÊúâÂ∫èÂàóË°®ÂíåÊó†Â∫èÂàóË°®„ÄÇ Êó†Â∫èÂàóË°®‰ΩøÁî®-„ÄÅ+Âíå*‰Ωú‰∏∫ÂàóË°®Ê†áËÆ∞Ôºö 1234567891011- Red- Green- Blue* Red* Green* Blue+ Red+ Green+ Blue ÊïàÊûúÂ¶Ç‰∏ãÔºö Red Green Blue ÊúâÂ∫èÂàóË°®Âàô‰ΩøÁî®Êï∞Â≠óÂä†Ëã±ÊñáÂè•ÁÇπ.Êù•Ë°®Á§∫Ôºö 1231. Red2. Green3. Blue ÊïàÊûúÂ¶Ç‰∏ãÔºö Red Green Blue Ê≥®ÊÑèÔºöMarkdown‰ΩøÁî®#„ÄÅ+„ÄÅ*„ÄÅ. Á≠âÁ¨¶Âè∑Êù•Ê†áËÆ∞Ôºå Á¨¶Âè∑ÂêéÈù¢ÂøÖÈ°ªË∑ü‰∏ä Ëá≥Â∞ë1‰∏™ Á©∫Ê†ºÊâçÊúâÊïàÔºÅ ÂºïÁî®ÂºïÁî®‰ª•&gt;Êù•Ë°®Á§∫ÔºåÂºïÁî®‰∏≠ÊîØÊåÅÂ§öÁ∫ßÂºïÁî®„ÄÅÊ†áÈ¢ò„ÄÅÂàóË°®„ÄÅ‰ª£Á†ÅÂùó„ÄÅÂàÜÂâ≤Á∫øÁ≠âÂ∏∏ËßÑËØ≠Ê≥ï„ÄÇ Â∏∏ËßÅÁöÑÂºïÁî®ÂÜôÊ≥ïÔºö 123456789101112131415161718&gt; ËøôÊòØ‰∏ÄÊÆµÂºïÁî® //Âú®`&gt;`ÂêéÈù¢Êúâ 1 ‰∏™Á©∫Ê†º&gt; &gt; ËøôÊòØÂºïÁî®ÁöÑ‰ª£Á†ÅÂùóÂΩ¢Âºè //Âú®`&gt;`ÂêéÈù¢Êúâ 5 ‰∏™Á©∫Ê†º&gt; &gt; ‰ª£Á†Å‰æãÂ≠êÔºö&gt; protected void onCreate(Bundle savedInstanceState) &#123; super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); &#125;&gt; ‰∏ÄÁ∫ßÂºïÁî®&gt; &gt; ‰∫åÁ∫ßÂºïÁî®&gt; &gt; &gt; ‰∏âÁ∫ßÂºïÁî®&gt; &gt; 1. ËøôÊòØÁ¨¨‰∏ÄË°åÂàóË°®È°π&gt; 2. ËøôÊòØÁ¨¨‰∫åË°åÂàóË°®È°π ÊïàÊûúÂ¶Ç‰∏ãÔºö ËøôÊòØ‰∏ÄÊÆµÂºïÁî® 12&gt; ËøôÊòØÂºïÁî®ÁöÑ‰ª£Á†ÅÂùóÂΩ¢Âºè //Âú®`&gt;`ÂêéÈù¢Êúâ 5 ‰∏™Á©∫Ê†º&gt; &gt; ‰ª£Á†Å‰æãÂ≠êÔºö 1234protected void onCreate(Bundle savedInstanceState) &#123; super.onCreate(savedInstanceState); setContentView(R.layout.activity_main);&#125; ‰∏ÄÁ∫ßÂºïÁî® ‰∫åÁ∫ßÂºïÁî® ‰∏âÁ∫ßÂºïÁî® ËøôÊòØÁ¨¨‰∏ÄË°åÂàóË°®È°π ËøôÊòØÁ¨¨‰∫åË°åÂàóË°®È°π ‰ª•‰∏ãÊòØÂàÜÂâ≤Á∫ø Âº∫Ë∞É‰∏§‰∏™*Êàñ-‰ª£Ë°®Âä†Á≤óÔºå‰∏Ä‰∏™*Êàñ-‰ª£Ë°®Êñú‰ΩìÔºå~~‰ª£Ë°®Âà†Èô§„ÄÇ 12345**Âä†Á≤óÊñáÊú¨** ÊàñËÄÖ __Âä†Á≤óÊñáÊú¨__*Êñú‰ΩìÊñáÊú¨* ÊàñËÄÖ_Êñú‰ΩìÊñáÊú¨_~~Âà†Èô§ÊñáÊú¨~~ ÊïàÊûúÂ¶Ç‰∏ãÔºö Âä†Á≤óÊñáÊú¨ ÊàñËÄÖ Âä†Á≤óÊñáÊú¨ Êñú‰ΩìÊñáÊú¨ ÊàñËÄÖ Êñú‰ΩìÊñáÊú¨ Âà†Èô§ÊñáÊú¨ ÂõæÁâá‰∏éÈìæÊé•ÂõæÁâá‰∏éÈìæÊé•ÁöÑËØ≠Ê≥ïÂæàÂÉèÔºåÂå∫Âà´Âú®‰∏Ä‰∏™ ! Âè∑„ÄÇ‰∫åËÄÖÊ†ºÂºèÔºö 123ÂõæÁâáÔºö![]() ![ÂõæÁâáÊñáÊú¨(ÂèØÂøΩÁï•)](ÂõæÁâáÂú∞ÂùÄ)ÈìæÊé•Ôºö[]() [ÈìæÊé•ÊñáÊú¨](ÈìæÊé•Âú∞ÂùÄ) ÊèíÂÖ•ËßÜÈ¢ëÊ≥®ÔºöMarkdown ËØ≠Ê≥ïÊòØ‰∏çÊîØÊåÅÁõ¥Êé•ÊèíÂÖ•ËßÜÈ¢ëÁöÑÊôÆÈÅçÁöÑÂÅöÊ≥ïÊòØ ÊèíÂÖ•HTMLÁöÑ iframe Ê°ÜÊû∂ÔºåÈÄöËøáÁΩëÁ´ôËá™Â∏¶ÁöÑÂàÜ‰∫´ÂäüËÉΩËé∑ÂèñÔºåÂ¶ÇÊûúÊ≤°ÊúâÂèØ‰ª•Â∞ùËØïÁ¨¨‰∫åÁßçÊñπÊ≥ïÁ¨¨‰∫åÊòØ‰º™ÈÄ†Êí≠ÊîæÁïåÈù¢ÔºåÂÆûË¥®ÊòØÊèíÂÖ•ËßÜÈ¢ëÂõæÁâáÔºåÁÑ∂ÂêéÈÄöËøáÁÇπÂáªË∑≥ËΩ¨Âà∞Áõ∏ÂÖ≥È°µÈù¢. ‰ª£Á†Å1Ê≥®ÔºöÂ§öÊï∞Á¨¨‰∏âÊñπÂπ≥Âè∞‰∏çÊîØÊåÅÊèíÂÖ•&lt;iframe&gt;ËßÜÈ¢ë 12&lt;iframe height=498 width=510 src=&apos;http://player.youku.com/embed/XMzUxNDI3MTI3Mg==&apos; frameborder=0 &apos;allowfullscreen&apos;&gt;&lt;/iframe&gt;&lt;iframe src=&quot;http://open.iqiyi.com/developer/player_js/coopPlayerIndex.html?vid=fdf51f4dd55ed6ccf7b01e2cc8ecb40b&amp;tvId=849094800&amp;accessToken=2.f22860a2479ad60d8da7697274de9346&amp;appKey=3955c3425820435e86d0f4cdfe56f5e7&amp;appId=1368&amp;height=100%&amp;width=100%&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;true&quot;&gt;&lt;/iframe&gt; ÊºîÁ§∫ ‰ª£Á†Å‰ª£Á†ÅÂàÜ‰∏∫Ë°åÂÜÖ‰ª£Á†ÅÂíå‰ª£Á†ÅÂùó„ÄÇ Ë°åÂÜÖ‰ª£Á†Å‰ΩøÁî® ‰ª£Á†Å Ê†áËØÜÔºåÂèØÂµåÂÖ•ÊñáÂ≠ó‰∏≠Ôºå‰ΩøÁî®``Ê†áËØÜ ‰ª£Á†ÅÂùó‰ΩøÁî®4‰∏™Á©∫Ê†ºÊàñ3‰∏™ `Ê†áËØÜ 1print "hello world" Ë°®Ê†ºË°®Ê†ºÂØπÈΩêÊ†ºÂºè Â±ÖÂ∑¶Ôºö:---- Â±Ö‰∏≠Ôºö:----:Êàñ----- Â±ÖÂè≥Ôºö----: ‰æãÂ≠êÔºö 123456|Ê†áÈ¢ò|Ê†áÈ¢ò|Ê†áÈ¢ò||:---|:---:|---:||Â±ÖÂ∑¶ÊµãËØïÊñáÊú¨|Â±Ö‰∏≠ÊµãËØïÊñáÊú¨|Â±ÖÂè≥ÊµãËØïÊñáÊú¨||Â±ÖÂ∑¶ÊµãËØïÊñáÊú¨1|Â±Ö‰∏≠ÊµãËØïÊñáÊú¨2|Â±ÖÂè≥ÊµãËØïÊñáÊú¨3||Â±ÖÂ∑¶ÊµãËØïÊñáÊú¨11|Â±Ö‰∏≠ÊµãËØïÊñáÊú¨22|Â±ÖÂè≥ÊµãËØïÊñáÊú¨33||Â±ÖÂ∑¶ÊµãËØïÊñáÊú¨111|Â±Ö‰∏≠ÊµãËØïÊñáÊú¨222|Â±ÖÂè≥ÊµãËØïÊñáÊú¨333| ÊïàÊûúÂ¶Ç‰∏ãÔºö Ê†áÈ¢ò Ê†áÈ¢ò Ê†áÈ¢ò Â±ÖÂ∑¶ÊµãËØïÊñáÊú¨ Â±Ö‰∏≠ÊµãËØïÊñáÊú¨ Â±ÖÂè≥ÊµãËØïÊñáÊú¨ Â±ÖÂ∑¶ÊµãËØïÊñáÊú¨1 Â±Ö‰∏≠ÊµãËØïÊñáÊú¨2 Â±ÖÂè≥ÊµãËØïÊñáÊú¨3 Â±ÖÂ∑¶ÊµãËØïÊñáÊú¨11 Â±Ö‰∏≠ÊµãËØïÊñáÊú¨22 Â±ÖÂè≥ÊµãËØïÊñáÊú¨33 Â±ÖÂ∑¶ÊµãËØïÊñáÊú¨111 Â±Ö‰∏≠ÊµãËØïÊñáÊú¨222 Â±ÖÂè≥ÊµãËØïÊñáÊú¨333 ÂàÜÈöîÁ∫øÂú®‰∏ÄË°å‰∏≠Áî®‰∏â‰∏™‰ª•‰∏äÁöÑ*„ÄÅ-„ÄÅ_Êù•Âª∫Á´ã‰∏Ä‰∏™ÂàÜÈöîÁ∫øÔºåË°åÂÜÖ‰∏çËÉΩÊúâÂÖ∂‰ªñ‰∏úË•ø„ÄÇ‰πüÂèØ‰ª•Âú®Á¨¶Âè∑Èó¥ÊèíÂÖ•Á©∫Ê†º„ÄÇ 12345***---___* * * ÊïàÊûúÂùá‰∏∫‰∏ÄÊù°ÂàÜÂâ≤Á∫øÔºö ËÑöÊ≥®(Ê≥®Ëß£)‰ΩøÁî®[^]Êù•ÂÆö‰πâËÑöÊ≥®Ôºö 123ËøôÊòØ‰∏Ä‰∏™ËÑöÊ≥®ÁöÑ‰æãÂ≠ê[^1][^1]: ËøôÈáåÊòØËÑöÊ≥® ÊïàÊûúÂ¶Ç‰∏ãÔºö ËøôÊòØ‰∏Ä‰∏™ËÑöÊ≥®ÁöÑ‰æãÂ≠ê[1] Â∏∏Áî®Âº•Ë°•MarkdownÁöÑHtmlÊ†áÁ≠æÂ≠ó‰Ωì12&lt;font face=&quot;ÂæÆËΩØÈõÖÈªë&quot; color=&quot;red&quot; size=&quot;6&quot;&gt;Â≠ó‰ΩìÂèäÂ≠ó‰ΩìÈ¢úËâ≤ÂíåÂ§ßÂ∞è&lt;/font&gt;&lt;font color=&quot;#0000ff&quot;&gt;Â≠ó‰ΩìÈ¢úËâ≤&lt;/font&gt; ÊïàÊûúÂ¶Ç‰∏ãÔºö Â≠ó‰ΩìÂèäÂ≠ó‰ΩìÈ¢úËâ≤ÂíåÂ§ßÂ∞è Â≠ó‰ΩìÈ¢úËâ≤ Êç¢Ë°å1‰ΩøÁî®htmlÊ†áÁ≠æ`&lt;br/&gt;`&lt;br/&gt;Êç¢Ë°å ÊïàÊûúÂ¶Ç‰∏ãÔºö ‰ΩøÁî®htmlÊ†áÁ≠æ&lt;br/&gt;Êç¢Ë°å ÊñáÊú¨ÂØπÈΩêÊñπÂºè123&lt;p align=&quot;left&quot;&gt;Â±ÖÂ∑¶ÊñáÊú¨&lt;/p&gt;&lt;p align=&quot;center&quot;&gt;Â±Ö‰∏≠ÊñáÊú¨&lt;/p&gt;&lt;p align=&quot;right&quot;&gt;Â±ÖÂè≥ÊñáÊú¨&lt;/p&gt; ÊïàÊûúÂ¶Ç‰∏ãÔºö Â±ÖÂ∑¶ÊñáÊú¨ Â±Ö‰∏≠ÊñáÊú¨ Â±ÖÂè≥ÊñáÊú¨ ‰∏ãÂàíÁ∫ø1&lt;u&gt;‰∏ãÂàíÁ∫øÊñáÊú¨&lt;/u&gt; ÊïàÊûúÂ¶Ç‰∏ãÔºö ‰∏ãÂàíÁ∫øÊñáÊú¨ That‚Äôs all, Enjoy it! ËøôÈáåÊòØËÑöÊ≥® ‚Ü©]]></content>
      <categories>
        <category>Markdown</category>
      </categories>
      <tags>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[UbuntuÂπ≥Âè∞HexoÂÆâË£Ö]]></title>
    <url>%2Farticle%2FUnderUbuntuInstallHexo.html</url>
    <content type="text"><![CDATA[ÂÆâË£Önode.js12curl -sL https://deb.nodesource.com/setup_6.x | sudo -E bash -sudo apt-get install nodejs Â∞ÜÂÆòÊñπÊ∫êÊõøÊç¢‰∏∫Ê∑òÂÆùÊ∫ê12sudo npm install -g cnpm --registry=https://registry.npm.taobao.orgsudo cnpm install -g hexo-cli ÂàùÂßãÂåñ123hexo init Êñá‰ª∂Â§πÁöÑÂêçÂ≠ó(ÂÅáËÆæ‰∏∫BLOG)cd BLOGnpm install //ÂÆâË£Ö‰æùËµñ GitÈÖçÁΩÆÂèëÂ∏É123456hexo new post "newPost"hexo c //clean, Ê∏ÖÁ©∫generateÁîüÊàêÂô®ÁöÑÊñá‰ª∂hexo g //generate ,ÁºñËØëÊàêÈùôÊÄÅÊñá‰ª∂hexo d //deploy, ÈÉ®ÁΩ≤ÁΩëÁ´ô hexo s //server, Êú¨Âú∞ËøêË°å]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Ubuntu</tag>
        <tag>GitHub</tag>
      </tags>
  </entry>
</search>
